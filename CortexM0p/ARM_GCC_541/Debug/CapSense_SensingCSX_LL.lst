ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0plus
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CapSense_SensingCSX_LL.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CapSense_SsCSXPostSingleScan,"ax",%progbits
  20              		.align	2
  21              		.code	16
  22              		.thumb_func
  23              		.type	CapSense_SsCSXPostSingleScan, %function
  24              	CapSense_SsCSXPostSingleScan:
  25              	.LFB8:
  26              		.file 1 "Generated_Source\\PSoC4\\CapSense_SensingCSX_LL.c"
   1:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \file CapSense_SensingCSX_LL.c
   3:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \version 5.10
   4:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
   5:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \brief
   6:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   This file defines the data structure global variables and provides
   7:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   implementation for the low-level APIs of the CSX part of
   8:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   the Sensing module. The file contains the APIs used for the CSD block
   9:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   initialization, calibration and scanning.
  10:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
  11:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \see CapSense v5.10 Datasheet
  12:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
  13:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *//*****************************************************************************
  14:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Copyright (2016-2018), Cypress Semiconductor Corporation.
  15:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** ********************************************************************************
  16:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * This software is owned by Cypress Semiconductor Corporation (Cypress) and is
  17:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * protected by and subject to worldwide patent protection (United States and
  18:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * foreign), United States copyright laws and international treaty provisions.
  19:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Cypress hereby grants to licensee a personal, non-exclusive, non-transferable
  20:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * license to copy, use, modify, create derivative works of, and compile the
  21:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Cypress Source Code and derivative works for the sole purpose of creating
  22:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * custom software in support of licensee product to be used only in conjunction
  23:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * with a Cypress integrated circuit as specified in the applicable agreement.
  24:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Any reproduction, modification, translation, compilation, or representation of
  25:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * this software except as specified above is prohibited without the express
  26:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * written permission of Cypress.
  27:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
  28:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Disclaimer: CYPRESS MAKES NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, WITH
  29:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * REGARD TO THIS MATERIAL, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  30:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  31:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Cypress reserves the right to make changes without further notice to the
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 2


  32:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * materials described herein. Cypress does not assume any liability arising out
  33:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * of the application or use of any product or circuit described herein. Cypress
  34:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * does not authorize its products for use as critical components in life-support
  35:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * systems where a malfunction or failure may reasonably be expected to result in
  36:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * significant injury to the user. The inclusion of Cypress' product in a life-
  37:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * support systems application implies that the manufacturer assumes all risk of
  38:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * such use and in doing so indemnifies Cypress against all charges. Use may be
  39:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * limited by and subject to the applicable Cypress software license agreement.
  40:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *******************************************************************************/
  41:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #include <cytypes.h>
  42:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #include "CyLib.h"
  43:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
  44:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #include "CapSense_Structure.h"
  45:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #include "CapSense_Configuration.h"
  46:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #include "CapSense_SensingCSX_LL.h"
  47:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #include "CapSense_Sensing.h"
  48:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #include "cyapicallbacks.h"
  49:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
  50:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #if (CapSense_ENABLE == CapSense_CSX_EN)
  51:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
  52:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /*******************************************************************************
  53:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Function constants
  54:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *******************************************************************************/
  55:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
  56:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #define  CapSense_NUM_HALF_CYCLES                       (2u)
  57:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
  58:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
  59:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /*******************************************************************************
  60:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Defines module variables
  61:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *******************************************************************************/
  62:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
  63:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /* Local variable used to store the Scan period */
  64:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** volatile uint16 CapSense_csxScanPeriod = 0u;
  65:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /* Local variable used to return raw count from the post scan ISR */
  66:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** volatile uint16 CapSense_csxRawCount = 0u;
  67:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
  68:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #if(CapSense_ENABLE != CapSense_CSDV2)
  69:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     volatile uint32 CapSense_csxRawGarbage = 0u;
  70:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #endif /* (CapSense_ENABLE != CapSense_CSDV2) */
  71:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
  72:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /* Pointer to Flash structure to hold Tx electrode that was connected previously */
  73:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** static CapSense_FLASH_IO_STRUCT const *CapSense_curTxIOPtr;
  74:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /* Pointer to Flash structure to hold Rx electrode that was connected previously */
  75:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** static CapSense_FLASH_IO_STRUCT const *CapSense_curRxIOPtr;
  76:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /* Local variable to hold total Tx in widget, while scanning all the sensors in widget */
  77:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** static uint16 CapSense_curWdgtTotalRx = 0u;
  78:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /* Local variable to hold total Rx in widget, while scanning all the sensors in widget */
  79:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** static uint16 CapSense_curWdgtTotalTx = 0u;
  80:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /* Flag to indicate that electrodes were connected previously */
  81:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** static uint16 CapSense_eleCsxDisconnectFlag = 0u;
  82:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /* Pointer to Flash structure holding info of sensor to be scanned */
  83:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #if (CapSense_ENABLE == CapSense_CSX_GANGED_SNS_EN)
  84:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     static CapSense_FLASH_SNS_STRUCT const *CapSense_curGangRxPtr = 0u;
  85:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     static CapSense_FLASH_SNS_STRUCT const *CapSense_curGangTxPtr = 0u;
  86:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #endif
  87:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
  88:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /*******************************************************************************
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 3


  89:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Module local function declarations
  90:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *******************************************************************************/
  91:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /**
  92:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \cond SECTION_C_INTERNAL
  93:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \addtogroup group_c_internal
  94:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \{
  95:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** */
  96:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
  97:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** static void CapSense_SsCSXStartSample(void);
  98:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** static void CapSense_SsCSXPostMultiScan(void);
  99:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** static void CapSense_SsCSXPostSingleScan(void);
 100:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** static uint16 CapSense_SsCalcCsxScanPeriod(CapSense_RAM_WD_BASE_STRUCT const *wdgtPtr);
 101:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 102:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #if(CapSense_ENABLE == CapSense_CSDV2)
 103:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_INLINE static void CapSense_SsCSXStartSampleExt(void);
 104:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #endif
 105:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 106:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #if (CapSense_ENABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
 107:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     static uint32 CapSense_SsCSXOversample(void);
 108:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #endif
 109:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 110:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #if (CapSense_ENABLE == CapSense_CSX_GANGED_SNS_EN)
 111:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     static void CapSense_SsCSXPostMultiScanGanged(void);
 112:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #endif
 113:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 114:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /* Pointer to Pointer to function used to register callback in ISR */
 115:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** void (*CapSense_CSXPostScanApiPtr)(void) = &CapSense_SsCSXPostMultiScan;
 116:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /** \}
 117:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \endcond */
 118:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 119:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /*******************************************************************************
 120:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Function Name: CapSense_CSXInitialize
 121:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** ****************************************************************************//**
 122:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 123:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \brief
 124:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   Performs hardware and firmware initialization required for the CSX operation
 125:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   of the CapSense Component.
 126:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 127:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \details
 128:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   This function initializes hardware to perform the CSX sensing operation. This
 129:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   function is called by the CapSense_Start() API during the Component
 130:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   initialization. If both CSX and CSD sensing methods are used in the Component,
 131:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   this function is called by the CapSense_SetupWidget() API to change hardware
 132:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   configured for CSD to re-initialize for the CSX sensing.
 133:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 134:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   If the CSD and CSX widgets are used in the Component, it is recommended not to
 135:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   mix the CSD widgets between the CSX widgets, instead, place all CSX widgets in
 136:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   the required scanning order and then place the CSD widgets in the customizer.
 137:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   For the Component API, this action will eliminate the need for changing the hardware
 138:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   configuration for every widget scan and will increase the execution speed
 139:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   in the CapSense_ScanAllWidgets() when the API is called.
 140:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 141:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   Similarly, it is recommended to set up and scan all the CSX widgets in such
 142:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   a sequence that the CapSense_SetupWidget() API  shouldn't need
 143:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   hardware  sensing-configuration change.
 144:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 145:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   It is highly not recommended to call this API directly from the application layer.
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 4


 146:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 147:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *******************************************************************************/
 148:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** void CapSense_CSXInitialize(void)
 149:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** {
 150:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if(CapSense_ENABLE == CapSense_CSDV2)
 151:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         uint8  interruptState;
 152:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         uint32 tmpRegVal;
 153:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 154:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_INTR_PTR,             CapSense_DEFAULT_CSD_INTR_CFG);
 155:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_INTR_SET_PTR,         CapSense_DEFAULT_CSD_INTR_SET_CFG);
 156:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_INTR_MASK_PTR,        CapSense_DEFAULT_CSD_INTR_MASK_CFG);
 157:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_HSCMP_PTR,            CapSense_DEFAULT_CSD_HSCMP_CFG);
 158:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_AMBUF_PTR,            CapSense_DEFAULT_CSD_AMBUF_CFG);
 159:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_REFGEN_PTR,           CapSense_DEFAULT_CSD_REFGEN_CFG);
 160:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_CSDCMP_PTR,           CapSense_DEFAULT_CSD_CSDCMP_CFG);
 161:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_IDAC_MOD_PTR,         CapSense_DEFAULT_CSD_IDACA_CFG);
 162:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 163:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #if((0u != CapSense_ADC_EN) || (0u != CapSense_IDACB_USED))
 164:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CY_SET_REG32(CapSense_IDAC_COMP_PTR,    CapSense_DEFAULT_CSD_IDACB_CFG);
 165:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #endif /* (0u != CapSense_ADC_EN) || (0u != CapSense_IDACB_USED) */
 166:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 167:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SW_RES_PTR,           CapSense_DEFAULT_CSD_SW_RES_CFG);
 168:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SENSE_PERIOD_PTR,     CapSense_DEFAULT_CSD_SENSE_PERIOD_CFG);
 169:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SENSE_DUTY_PTR,       CapSense_DEFAULT_CSD_SENSE_DUTY_CFG);
 170:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SW_HS_P_SEL_PTR,      CapSense_DEFAULT_CSD_SW_HS_P_SEL_CFG);
 171:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SW_HS_N_SEL_PTR,      CapSense_DEFAULT_CSD_SW_HS_N_SEL_CFG);
 172:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SW_SHIELD_SEL_PTR,    CapSense_DEFAULT_CSD_SW_SHIELD_SEL_CFG);
 173:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SW_AMUXBUF_SEL_PTR,   CapSense_DEFAULT_CSD_SW_AMUXBUF_SEL_CFG);
 174:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 175:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         interruptState = CyEnterCriticalSection();
 176:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal = CY_GET_REG32(CapSense_SW_BYP_SEL_PTR);
 177:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal &= ~(CapSense_SW_BYP_SEL_SW_BYA_MASK);
 178:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal |= CapSense_DEFAULT_CSD_SW_BYP_SEL_CFG;
 179:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SW_BYP_SEL_PTR,       tmpRegVal);
 180:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CyExitCriticalSection(interruptState);
 181:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 182:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SW_CMP_P_SEL_PTR,     CapSense_DEFAULT_CSD_SW_CMP_P_SEL_CFG);
 183:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SW_CMP_N_SEL_PTR,     CapSense_DEFAULT_CSD_SW_CMP_N_SEL_CFG);
 184:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 185:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         interruptState = CyEnterCriticalSection();
 186:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal = CY_GET_REG32(CapSense_SW_REFGEN_SEL_PTR);
 187:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal &= ~CapSense_SW_REFGEN_SEL_SW_MASK;
 188:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal |= CapSense_DEFAULT_CSD_SW_REFGEN_SEL_CFG;
 189:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SW_REFGEN_SEL_PTR,    tmpRegVal);
 190:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CyExitCriticalSection(interruptState);
 191:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 192:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SW_FW_MOD_SEL_PTR,    CapSense_DEFAULT_CSD_SW_FW_MOD_SEL_CFG);
 193:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SW_FW_TANK_SEL_PTR,   CapSense_DEFAULT_CSD_SW_FW_TANK_SEL_CFG);
 194:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SW_DSI_SEL_PTR,       CapSense_DEFAULT_CSD_SW_DSI_SEL_CFG);
 195:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SEQ_TIME_PTR,         CapSense_DEFAULT_CSD_SEQ_TIME_CFG);
 196:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SEQ_INIT_CNT_PTR,     CapSense_DEFAULT_CSD_SEQ_INIT_CNT_CFG);
 197:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SEQ_NORM_CNT_PTR,     CapSense_DEFAULT_CSD_SEQ_NORM_CNT_CFG);
 198:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_ADC_CTL_PTR,          CapSense_DEFAULT_CSD_ADC_CTL_CFG);
 199:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SEQ_START_PTR,        CapSense_DEFAULT_CSD_SEQ_START_CFG);
 200:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_CONFIG_PTR,           CapSense_DEFAULT_CSD_CONFIG_CFG);
 201:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 202:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_BistDischargeExtCapacitors();
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 5


 203:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 204:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         interruptState = CyEnterCriticalSection();
 205:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal = CY_GET_REG32(CapSense_CintA_PC_PTR);
 206:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal &= (~(CapSense_GPIO_PC_MASK << (CapSense_CintA_SHIFT * CapSense_GPIO_PC_BIT_SIZE)
 207:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_CintA_PC_PTR, tmpRegVal);
 208:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CyExitCriticalSection(interruptState);
 209:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 210:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         interruptState = CyEnterCriticalSection();
 211:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal = CY_GET_REG32(CapSense_CintB_PC_PTR);
 212:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal &= (~(CapSense_GPIO_PC_MASK << (CapSense_CintB__SHIFT * CapSense_GPIO_PC_BIT_SIZE
 213:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_CintB_PC_PTR, tmpRegVal);
 214:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CyExitCriticalSection(interruptState);
 215:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 216:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         /* Connect CintA_tank pin to AMUXBUS-A using HSIOM registers. */
 217:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         interruptState = CyEnterCriticalSection();
 218:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal = CY_GET_REG32(CapSense_CintA_HSIOM_PTR);
 219:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal &= ~CapSense_CintA_HSIOM_MASK;
 220:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal |= (CapSense_HSIOM_SEL_AMUXA << CapSense_CintA_HSIOM_SHIFT);
 221:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_CintA_HSIOM_PTR, tmpRegVal);
 222:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CyExitCriticalSection(interruptState);
 223:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 224:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         /* Connect CintB to AMUXBUS-A using HSIOM registers. */
 225:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         interruptState = CyEnterCriticalSection();
 226:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal = CY_GET_REG32(CapSense_CintB_HSIOM_PTR);
 227:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal &= ~CapSense_CintB_HSIOM_MASK;
 228:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal |= (CapSense_HSIOM_SEL_AMUXA << CapSense_CintB_HSIOM_SHIFT);
 229:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_CintB_HSIOM_PTR, tmpRegVal);
 230:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CyExitCriticalSection(interruptState);
 231:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 232:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_SsSetModClkClockDivider((uint32)CapSense_dsRam.modCsxClk);
 233:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 234:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #if (CapSense_ENABLE == CapSense_CSX_COMMON_TX_CLK_EN)
 235:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_SsSetSnsClockDivider((uint32)CapSense_dsRam.snsCsxClk);
 236:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #endif
 237:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 238:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         /* Set all IO states to default state */
 239:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_SsSetIOsInDefaultState();
 240:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 241:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #else
 242:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         uint32 trimValue;
 243:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 244:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         /* Set all IO states to default state */
 245:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_SsSetIOsInDefaultState();
 246:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 247:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #if(CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
 248:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             trimValue = CY_GET_REG32(CapSense_IDAC_PTR);
 249:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             trimValue &= ~(CapSense_IDAC_COMP_CFG_MASK | CapSense_IDAC_FEEDBACK_MODE_MASK);
 250:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CY_SET_REG32(CapSense_IDAC_PTR, trimValue);
 251:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) */
 252:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 253:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         /* Connect CintB to AMUXBUS-A using HSIOM registers. */
 254:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 255:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         trimValue = CY_GET_REG32(CapSense_CintB_HSIOM_PTR);
 256:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         trimValue &= ~CapSense_CintB_HSIOM_MASK;
 257:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         trimValue |= (CapSense_HSIOM_SEL_AMUXA << CapSense_CintB_HSIOM_SHIFT);
 258:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_CintB_HSIOM_PTR, trimValue);
 259:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 6


 260:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         /* Set drive mode of CintB pin to High-Z Analog state in PC register
 261:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             and set logic high on DR register. */
 262:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         trimValue = CY_GET_REG32(CapSense_CintB_PC_PTR);
 263:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         trimValue &= ~(CapSense_GPIO_PC_MASK << (CapSense_CintB__SHIFT * CapSense_GPIO_PC_BIT_SIZE 
 264:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_CintB_PC_PTR, trimValue);
 265:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 266:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         trimValue = CY_GET_REG32(CapSense_CintB_DR_PTR);
 267:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         trimValue &= ~(uint32)((uint32)0x01u << CapSense_CintB__SHIFT);
 268:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_CintB_DR_PTR, trimValue);
 269:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 270:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         /* Connect CintA_tank pin to AMUXBUS-A using HSIOM registers. */
 271:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         trimValue = CY_GET_REG32(CapSense_CintA_HSIOM_PTR);
 272:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         trimValue &= ~CapSense_CintA_HSIOM_MASK;
 273:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         trimValue |= (CapSense_HSIOM_SEL_AMUXA << CapSense_CintA_HSIOM_SHIFT);
 274:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_CintA_HSIOM_PTR, trimValue);
 275:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 276:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         /* Set drive mode of CintA_tank pin to High-Z Analog state in PC register
 277:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             and set logic high on DR register. */
 278:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         trimValue = CY_GET_REG32(CapSense_CintA_PC_PTR);
 279:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         trimValue &= ~(CapSense_GPIO_PC_MASK << (CapSense_CintA_SHIFT * CapSense_GPIO_PC_BIT_SIZE )
 280:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_CintA_PC_PTR, trimValue);
 281:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 282:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         trimValue = CY_GET_REG32(CapSense_CintA_DR_PTR);
 283:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         trimValue &= ~(uint32)((uint32)0x01u << CapSense_CintA_SHIFT);
 284:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_CintA_DR_PTR, trimValue);
 285:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 286:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         /* Connect CSD comparator to CintB via AMUXBUS-A */
 287:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         trimValue = CY_GET_REG32(CapSense_CONFIG_PTR);
 288:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         trimValue |= CapSense_CONFIG_SENSE_INSEL_MASK;
 289:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_CONFIG_PTR, trimValue);
 290:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 291:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         /* If common clocks are enabled for Component, set clock
 292:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             divider for sensor and modulator clocks and start/restart them */
 293:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #if (CapSense_CSX_COMMON_TX_CLK_EN == CapSense_ENABLE)
 294:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_SsSetClockDividers((uint32)CapSense_dsRam.snsCsxClk, (uint32)CapSense_dsRam.mo
 295:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #endif
 296:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 297:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* Enable CapSense ISR and set ISR for CSX sensing */
 298:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CapSense_SsIsrInitialize(&CapSense_CSXScanISR);
 299:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** }
 300:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 301:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 302:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /*******************************************************************************
 303:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Function Name: CapSense_CSXElectrodeCheck
 304:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** ****************************************************************************//**
 305:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 306:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \brief
 307:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   Check if electrodes were previously connected using
 308:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   the CapSense_CSXSetupWidgetExt() API and if yes, disconnect them.
 309:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 310:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \details
 311:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   This function checks if CapSense_eleCsxDisconnectFlag is set.
 312:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   If it is set, the function disconnects the previously connected electrode.
 313:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 314:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *******************************************************************************/
 315:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** void CapSense_CSXElectrodeCheck(void)
 316:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** {
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 7


 317:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if (CapSense_ENABLE == CapSense_CSX_GANGED_SNS_EN)
 318:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         uint32 numElectrodes;
 319:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSX_GANGED_SNS_EN) */
 320:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 321:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     if (0u != CapSense_eleCsxDisconnectFlag)
 322:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     {
 323:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****        /* Disconnect if electrodes were previous connected by SetupWidgetExt() API */
 324:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #if (CapSense_ENABLE == CapSense_CSX_GANGED_SNS_EN)
 325:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             /* Check ganged sns flag */
 326:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             if (CapSense_GANGED_SNS_MASK == (CapSense_curFlashWdgtPtr->staticConfig & CapSense_GANG
 327:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             {
 328:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /* 1. Get number of pins in previous connected Tx electrode
 329:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     3. Get Tx pointer
 330:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     4. Disconnect all Tx */
 331:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 numElectrodes = CapSense_curGangTxPtr->numPins;
 332:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_curTxIOPtr = &CapSense_ioList[CapSense_curGangTxPtr->firstPinId];
 333:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 334:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 do
 335:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 {
 336:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_CSXDisconnectTx(CapSense_curTxIOPtr++);
 337:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     numElectrodes--;
 338:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 } while (0u != numElectrodes);
 339:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 340:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /* 1. Get number of pins in previous connected Rx electrode
 341:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     3. Get Rx pointer
 342:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     4. Disconnect all Rx */
 343:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 numElectrodes = CapSense_curGangRxPtr->numPins;
 344:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_curRxIOPtr = &CapSense_ioList[CapSense_curGangRxPtr->firstPinId];
 345:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 346:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 do
 347:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 {
 348:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_CSXDisconnectRx(CapSense_curRxIOPtr++);
 349:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     numElectrodes--;
 350:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 } while (0u != numElectrodes);
 351:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             }
 352:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             else
 353:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             {
 354:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /* Disconnect if electrodes were previous connected by SetupWidgetExt API */
 355:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_CSXDisconnectTx(CapSense_curTxIOPtr);
 356:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_CSXDisconnectRx(CapSense_curRxIOPtr);
 357:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             }
 358:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #else
 359:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             /* Disconnect if electrodes were previous connected by SetupWidgetExt API */
 360:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_CSXDisconnectTx(CapSense_curTxIOPtr);
 361:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_CSXDisconnectRx(CapSense_curRxIOPtr);
 362:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #endif
 363:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_eleCsxDisconnectFlag = 0u;
 364:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     }
 365:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** }
 366:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 367:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 368:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /*******************************************************************************
 369:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Function Name: CapSense_CSXSetupWidget
 370:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** ****************************************************************************//**
 371:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 372:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \brief
 373:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  Performs hardware and firmware initialization required for scanning sensors
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 8


 374:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  in a specific widget using the CSX sensing method. This function requires
 375:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  using the CapSense_CSXScan() function to start scanning.
 376:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 377:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \details
 378:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  This function initializes the widgets specific common parameters to perform
 379:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  the CSX scanning. The initialization includes the following:
 380:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *    1. The CSD_CONFIG register.
 381:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *    2. The IDAC register.
 382:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *    3. The Sense clock frequency
 383:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *    4. The phase alignment of the sense and modulator clocks.
 384:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 385:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  This function does not connect any specific sensors to the scanning hardware
 386:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  and neither does it start a scanning process. The CapSense_CSXScan()
 387:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  function must be called after initializing the widget to start scanning.
 388:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 389:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  This function is called when no scanning is in progress. I.e.
 390:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  CapSense_IsBusy() returns a non-busy status.
 391:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 392:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  This function is called by the CapSense_SetupWidget() API if the
 393:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  given widget uses the CSX sensing method.
 394:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 395:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  Calling this function directly from the application layer is not
 396:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  recommended. This function is used to implement only the user's specific
 397:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  use cases (for faster execution time or pipeline scanning for example).
 398:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 399:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \param widgetId
 400:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  Specifies the ID number of the widget to perform hardware and firmware
 401:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  initialization required for scanning sensors in the specific widget.
 402:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  A macro for the widget ID can be found in the CapSense Configuration header
 403:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  file defined as CapSense_<WidgetName>_WDGT_ID.
 404:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 405:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *******************************************************************************/
 406:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** void CapSense_CSXSetupWidget(uint32 widgetId)
 407:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** {
 408:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* variable to access widget details */
 409:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CapSense_RAM_WD_BASE_STRUCT * curRamWdgtBasePtr;
 410:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 411:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if (CapSense_ENABLE == CapSense_CSDV2)
 412:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         uint32 tmpRegVal;
 413:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         uint32 snsClkVal;
 414:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif /* (CapSense_DISABLE == CapSense_CSDV2) */
 415:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 416:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* Save the current widget Id */
 417:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CapSense_widgetIndex = (uint8)widgetId;
 418:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 419:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CapSense_SsSwitchSensingMode(CapSense_SENSE_METHOD_CSX_E);
 420:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 421:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /*
 422:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     *  Check if CSX electrodes were previously connected using
 423:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     *  CapSense_CSXSetupWidgetExt API and if yes, disconnect them
 424:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     */
 425:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CapSense_CSXElectrodeCheck();
 426:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 427:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* Configure hardware block */
 428:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if (CapSense_ENABLE == CapSense_CSDV2)
 429:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_curFlashWdgtPtr = &CapSense_dsFlash.wdgtArray[widgetId];
 430:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 9


 431:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         curRamWdgtBasePtr = (CapSense_RAM_WD_BASE_STRUCT *)CapSense_curFlashWdgtPtr->ptr2WdgtRam;
 432:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 433:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #if (CapSense_ENABLE == CapSense_CSX_COMMON_TX_CLK_EN)
 434:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             snsClkVal = (uint32)CapSense_dsRam.snsCsxClk;
 435:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #else
 436:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             snsClkVal = (uint32)curRamWdgtBasePtr->snsClk;
 437:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_CSX_COMMON_TX_CLK_EN) */
 438:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 439:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SEQ_NORM_CNT_PTR, (uint32)curRamWdgtBasePtr->resolution);
 440:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_csxScanPeriod  = CapSense_SsCalcCsxScanPeriod(curRamWdgtBasePtr);
 441:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 442:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal = (uint32)curRamWdgtBasePtr->snsClkSource;
 443:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 444:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         snsClkVal = (snsClkVal - 1uL) & CapSense_SENSE_PERIOD_SENSE_DIV_MASK;
 445:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal = (tmpRegVal << CapSense_SENSE_PERIOD_LFSR_SIZE_SHIFT) | snsClkVal;
 446:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SENSE_PERIOD_PTR, tmpRegVal);
 447:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_SsSetModClkClockDivider((uint32)CapSense_dsRam.modCsxClk);
 448:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #else
 449:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         /*
 450:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         * initialize access pointers for current:
 451:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         *    1. Pointer to widget configuration in Flash
 452:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         *    2. Widget configuration in RAM
 453:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         *    3. Make a local copy of widget index
 454:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         */
 455:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_curFlashWdgtPtr = &CapSense_dsFlash.wdgtArray[widgetId];
 456:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         curRamWdgtBasePtr = (CapSense_RAM_WD_BASE_STRUCT *)CapSense_curFlashWdgtPtr->ptr2WdgtRam;
 457:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 458:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_CONFIG_ENABLE_MASK);
 459:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_CONFIG_PTR, (CY_GET_REG32(CapSense_CONFIG_PTR) |
 460:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                                 CapSense_CONFIG_MUTUALCAP_EN_MASK     |
 461:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                                 CapSense_CONFIG_SENSE_COMP_BW_MASK    |
 462:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                                 CapSense_CONFIG_SENSE_COMP_EN_MASK    |
 463:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                                 CapSense_CONFIG_SENSE_INSEL_MASK      |
 464:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                                 CapSense_CONFIG_REFBUF_EN_MASK        |
 465:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                                 CapSense_CONFIG_REFBUF_DRV_MASK));
 466:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 467:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         /* If individual clocks are enabled for each widget, set clock
 468:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             divider for sensor and modulator clocks and start/restart them. */
 469:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #if (CapSense_CSX_COMMON_TX_CLK_EN == CapSense_DISABLE)
 470:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_SsSetClockDividers((uint32)curRamWdgtBasePtr->snsClk, (uint32)CapSense_dsRam.m
 471:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #endif
 472:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 473:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         /* Find scan period */
 474:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_csxScanPeriod = CapSense_SsCalcCsxScanPeriod(curRamWdgtBasePtr);
 475:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 476:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** }
 477:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 478:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /*******************************************************************************
 479:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Function Name: CapSense_CSXSetupWidgetExt
 480:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** ****************************************************************************//**
 481:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 482:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \brief
 483:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  Performs extended initialization for the CSX widget and also performs
 484:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  initialization required for a specific sensor in the widget. This function
 485:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  requires using the CapSense_CSXScan() function to initiate a scan.
 486:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 487:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \details
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 10


 488:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  This function does the same tasks as CapSense_CSXSetupWidget() and
 489:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  also connects a sensor in the widget for scanning. Once this function is
 490:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  called to initialize a widget and a sensor, the CapSense_CSXScanExt()
 491:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  function must be called to scan the sensor.
 492:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 493:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  This function is called when no scanning is in progress. I.e.
 494:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  CapSense_IsBusy() returns a non-busy status.
 495:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 496:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  Calling this function directly from the application layer is not
 497:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  recommended. This function is used to implement only the user's specific
 498:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  use cases (for faster execution time or pipeline scanning for example).
 499:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 500:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \param widgetId
 501:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  Specifies the ID number of the widget to perform hardware and firmware
 502:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  initialization required for scanning a specific sensor in a specific widget.
 503:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  A macro for the widget ID can be found in the CapSense Configuration header
 504:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  file defined as CapSense_<WidgetName>_WDGT_ID.
 505:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 506:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \param sensorId
 507:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  Specifies the ID number of the sensor within the widget to perform hardware
 508:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  and firmware initialization required for scanning a specific sensor in a
 509:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  specific widget.
 510:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  A macro for the sensor ID within a specified widget can be found in the
 511:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  CapSense Configuration header file defined as
 512:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  CapSense_<WidgetName>_SNS<SensorNumber>_ID.
 513:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 514:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *******************************************************************************/
 515:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 516:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** void CapSense_CSXSetupWidgetExt(uint32 widgetId, uint32 sensorId)
 517:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** {
 518:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     uint32 txIndex;
 519:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     uint32 rxIndex;
 520:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 521:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if (CapSense_ENABLE == CapSense_CSX_GANGED_SNS_EN)
 522:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         uint16 numElectrodes;
 523:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSX_GANGED_SNS_EN) */
 524:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 525:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* Initialize widget */
 526:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CapSense_CSXSetupWidget(widgetId);
 527:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CapSense_sensorIndex = (uint8)sensorId;
 528:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 529:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* initialize sensor data structure pointer to appropriate address */
 530:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CapSense_curRamSnsPtr = CapSense_curFlashWdgtPtr->ptr2SnsRam;
 531:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CapSense_curRamSnsPtr = &CapSense_curRamSnsPtr[sensorId];
 532:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 533:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if (CapSense_ENABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
 534:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         if (0u != CapSense_curRamSnsPtr->subConvNum)
 535:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         {
 536:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
 537:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 538:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /*
 539:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     *  Find Tx and Rx index for given snsIndex
 540:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     *    rxIndex = sensorId / TxCount
 541:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     *    txIndex = sensorId % TxCount
 542:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     */
 543:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     rxIndex = sensorId /CapSense_curFlashWdgtPtr->numRows;
 544:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     txIndex = sensorId % CapSense_curFlashWdgtPtr->numRows;
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 11


 545:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 546:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* If widget is APA, find node (Tx/Rx) to be connected for scanning */
 547:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if (CapSense_ENABLE == CapSense_CSX_GANGED_SNS_EN)
 548:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         if (CapSense_GANGED_SNS_MASK == (CapSense_curFlashWdgtPtr->staticConfig & CapSense_GANGED_S
 549:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         {
 550:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             /*
 551:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             *  1. Get access to Rx sensor pointer (Rx = Base + rxIndex).
 552:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             *  2. Get number of Rx electrodes
 553:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             *  3. Get Rx pointer
 554:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             *  4. Connect all Rx
 555:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             */
 556:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_curGangRxPtr = CapSense_curFlashWdgtPtr->ptr2SnsFlash;
 557:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_curGangRxPtr += rxIndex;
 558:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             numElectrodes = CapSense_curGangRxPtr->numPins;
 559:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_curRxIOPtr = &CapSense_ioList[CapSense_curGangRxPtr->firstPinId];
 560:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 561:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             do
 562:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             {
 563:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_CSXConnectRx(CapSense_curRxIOPtr++);
 564:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 numElectrodes--;
 565:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             } while (0u != numElectrodes);
 566:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 567:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             /*
 568:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             *  1. Get access to Tx sensor pointer (Tx = Base + NumberRx + TxIndex).
 569:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             *  2. Get number of Tx electrodes
 570:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             *  3. Get Tx pointer
 571:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             *  4. Connect all Tx
 572:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             */
 573:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_curGangTxPtr = CapSense_curFlashWdgtPtr->ptr2SnsFlash;
 574:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_curGangTxPtr += (CapSense_curFlashWdgtPtr->numCols + txIndex);
 575:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 576:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             numElectrodes = CapSense_curGangTxPtr->numPins;
 577:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_curTxIOPtr = &CapSense_ioList[CapSense_curGangTxPtr->firstPinId];
 578:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 579:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             do
 580:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             {
 581:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_CSXConnectTx(CapSense_curTxIOPtr++);
 582:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 numElectrodes--;
 583:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             }while (0u != numElectrodes);
 584:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 585:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             /* Set callback to scan connected ganged sensor only */
 586:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_CSXPostScanApiPtr = &CapSense_SsCSXPostSingleScan;
 587:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         }
 588:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         else
 589:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif  /* (CapSense_ENABLE == CapSense_CSD_CSX_EN) */
 590:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         {
 591:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             /*
 592:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             *  If no ganged sensor in Component OR current widget no contains ganged sns, then:
 593:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             *    1. Find Rx pointer: Rx = Base address + RxIndex
 594:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             *    2. Find Tx pointer: Tx = Base address + (total Rx + TxIndex)
 595:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             */
 596:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_curRxIOPtr = (CapSense_FLASH_IO_STRUCT const *)CapSense_curFlashWdgtPtr->ptr2S
 597:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_curRxIOPtr = &CapSense_curRxIOPtr[rxIndex];
 598:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 599:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_curTxIOPtr = (CapSense_FLASH_IO_STRUCT const *)CapSense_curFlashWdgtPtr->ptr2S
 600:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_curTxIOPtr = &CapSense_curTxIOPtr[(CapSense_curFlashWdgtPtr->numCols + txIndex
 601:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 12


 602:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             /* Connect Tx and Rx IOs for scan ad set flag to indicate that IOs should be disconnect
 603:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_CSXConnectTx(CapSense_curTxIOPtr);
 604:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_CSXConnectRx(CapSense_curRxIOPtr);
 605:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_eleCsxDisconnectFlag = CapSense_DISCONNECT_IO_FLAG;
 606:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 607:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             /* Set callback to scan all the sensors in widget */
 608:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_CSXPostScanApiPtr = &CapSense_SsCSXPostSingleScan;
 609:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         }
 610:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if (CapSense_ENABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
 611:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         }
 612:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif
 613:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** }
 614:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 615:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /*******************************************************************************
 616:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Function Name: CapSense_CSXScan
 617:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** ****************************************************************************//**
 618:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 619:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \brief
 620:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  This function initiates a scan for the sensors of the widget initialized by
 621:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  the CapSense_CSXSetupWidget() function.
 622:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 623:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \details
 624:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  This function performs scanning of all the sensors in the widget configured by
 625:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  the CapSense_CSXSetupWidget() function. It does the following tasks:
 626:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *    1. Connects the first sensor of the widget.
 627:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *    2. Initializes an interrupt callback function to initialize a scan of the
 628:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *       next sensors in a widget.
 629:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *    3. Starts scanning for the first sensor in the widget.
 630:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 631:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  This function is called by the CapSense_Scan() API if the given
 632:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  widget uses the CSX sensing method.
 633:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 634:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  Calling this function directly from the application layer is not
 635:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  recommended. This function is used to implement only the user's specific
 636:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  use cases (for faster execution time or pipeline scanning for example).
 637:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 638:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  This function is called when no scanning is in progress. I.e.
 639:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  CapSense_IsBusy() returns a non-busy status. The widget must be
 640:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  preconfigured by the CapSense_CSXSetupWidget() function if any other
 641:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  widget was previously scanned or any other type of scan functions were used.
 642:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 643:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *******************************************************************************/
 644:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 645:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** void CapSense_CSXScan(void)
 646:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** {
 647:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if (CapSense_ENABLE == CapSense_CSX_GANGED_SNS_EN)
 648:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         uint32 numElectrodes;
 649:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif
 650:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if (CapSense_ENABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
 651:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         uint32 snsIndex = 0u;
 652:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         uint32 snsNum;
 653:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif
 654:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 655:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CapSense_sensorIndex = 0u;
 656:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 657:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* initialize pointer to access sensor RAM elements */
 658:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CapSense_curRamSnsPtr = CapSense_curFlashWdgtPtr->ptr2SnsRam;
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 13


 659:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 660:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if (CapSense_ENABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
 661:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         /* Loop through the sensors until non-skipped is found */
 662:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         snsNum = CapSense_curFlashWdgtPtr->totalNumSns;
 663:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         while ((snsIndex < snsNum) && (CapSense_curRamSnsPtr->subConvNum == 0u))
 664:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         {
 665:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             /* Increment sensor pointers */
 666:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_curRamSnsPtr++;
 667:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_sensorIndex++;
 668:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             snsIndex++;
 669:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         }
 670:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         /*
 671:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         *  Calculate total sensor to be scanned. If buttons, one Tx and an Rx for each sensor
 672:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         *  if Matrix button or Touchpad, M x N rule applies
 673:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         */
 674:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_curWdgtTotalTx = (uint16)(CapSense_curFlashWdgtPtr->numRows - (snsIndex % CapSense
 675:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_curWdgtTotalRx  = (uint16)(CapSense_curFlashWdgtPtr->numCols - (snsIndex / CapSens
 676:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 677:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         /* Scan sensor if it's index within a valid range otherwise do nothing as all the sensors a
 678:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         if (snsIndex < snsNum)
 679:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         {
 680:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #if (CapSense_ENABLE == CapSense_CSX_GANGED_SNS_EN)
 681:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 if ((CapSense_curFlashWdgtPtr->staticConfig & CapSense_GANGED_SNS_MASK) != 0u)
 682:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 {
 683:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     /* Connect all Rx electrodes */
 684:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_curGangRxPtr = CapSense_curFlashWdgtPtr->ptr2SnsFlash;
 685:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_curGangRxPtr += snsIndex /CapSense_curFlashWdgtPtr->numRows;
 686:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     numElectrodes = CapSense_curGangRxPtr->numPins;
 687:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_curRxIOPtr = &CapSense_ioList[CapSense_curGangRxPtr->firstPinId];
 688:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     do
 689:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     {
 690:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_CSXConnectRx(CapSense_curRxIOPtr++);
 691:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         numElectrodes--;
 692:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     } while (0u != numElectrodes);
 693:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 694:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     /* Connect all Tx electrodes */
 695:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_curGangTxPtr = CapSense_curFlashWdgtPtr->ptr2SnsFlash;
 696:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_curGangTxPtr += (CapSense_curFlashWdgtPtr->numCols + snsIndex % CapSen
 697:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     numElectrodes = CapSense_curGangTxPtr->numPins;
 698:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_curTxIOPtr = &CapSense_ioList[CapSense_curGangTxPtr->firstPinId];
 699:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     do
 700:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     {
 701:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_CSXConnectTx(CapSense_curTxIOPtr++);
 702:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         numElectrodes--;
 703:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     }while (0u != numElectrodes);
 704:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     /* Assign callback to ISR */
 705:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_CSXPostScanApiPtr = &CapSense_SsCSXPostMultiScanGanged;
 706:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 }
 707:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 else
 708:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #endif /* (CapSense_ENABLE == CapSense_CSX_GANGED_SNS_EN) */
 709:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             {
 710:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /* Find Rx pointer: Rx = Base_address + SnsIndex / total_Tx */
 711:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_curRxIOPtr = (CapSense_FLASH_IO_STRUCT const *)CapSense_curFlashWdgtPtr->p
 712:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_curRxIOPtr += (snsIndex / CapSense_curFlashWdgtPtr->numRows);
 713:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /* Find Tx pointer: Tx = Base_address + total_Rx + SnsIndex % total_Tx */
 714:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_curTxIOPtr = (CapSense_FLASH_IO_STRUCT const *)CapSense_curFlashWdgtPtr->p
 715:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_curTxIOPtr += CapSense_curFlashWdgtPtr->numCols;
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 14


 716:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_curTxIOPtr += (snsIndex % CapSense_curFlashWdgtPtr->numRows);
 717:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /* Connect Tx and Rx electrodes for scan */
 718:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_CSXConnectTx(CapSense_curTxIOPtr);
 719:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_CSXConnectRx(CapSense_curRxIOPtr);
 720:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /* Set callback to scan all the sensors in widget */
 721:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_CSXPostScanApiPtr = &CapSense_SsCSXPostMultiScan;
 722:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             }
 723:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 724:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             /* Reset multi-frequency scan channel if enabled */
 725:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #if (CapSense_MULTI_FREQ_SCAN_EN == CapSense_ENABLE)
 726:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_scanFreqIndex = CapSense_FREQ_CHANNEL_0;
 727:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #endif
 728:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 729:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             /* Set scan status, enter critical section and initiate scan */
 730:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_dsRam.status |= CapSense_SW_STS_BUSY;
 731:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 732:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #if(CapSense_ENABLE == CapSense_CSDV2) &&\
 733:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                (CapSense_ENABLE != CapSense_BLOCK_OFF_AFTER_SCAN_EN) &&\
 734:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                (CapSense_CSX_ANALOG_STARTUP_DELAY_US > 0uL)
 735:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CyDelayUs(CapSense_CSX_ANALOG_STARTUP_DELAY_US);
 736:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #endif
 737:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_SsCSXStartSample();
 738:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         }
 739:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 740:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #else /* (CapSense_ENABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
 741:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 742:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         /*
 743:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         *  Calculate total sensor to be scanned. If buttons, one Tx and an Rx for each sensor
 744:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         *  if Matrix button or Touchpad, M x N rule applies
 745:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         */
 746:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_curWdgtTotalTx = CapSense_curFlashWdgtPtr->numRows;
 747:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_curWdgtTotalRx  = CapSense_curFlashWdgtPtr->numCols;
 748:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 749:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         /* If Component contains CSX ganged sensor, then check if widget contains ganged sensor */
 750:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #if (CapSense_CSX_GANGED_SNS_EN == 1u)
 751:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             if ((CapSense_curFlashWdgtPtr->staticConfig & CapSense_GANGED_SNS_MASK) != 0u)
 752:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             {
 753:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /*
 754:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 *  1. Get sns pointer for first Rx
 755:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 *  2. Get number of Rx pin
 756:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 *  3. Get pointer to the Rx pin
 757:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 *  4. Connect all Rx pins
 758:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 */
 759:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_curGangRxPtr = CapSense_curFlashWdgtPtr->ptr2SnsFlash;
 760:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 numElectrodes = CapSense_curGangRxPtr->numPins ;
 761:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_curRxIOPtr = &CapSense_ioList[CapSense_curGangRxPtr->firstPinId];
 762:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 do
 763:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 {
 764:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_CSXConnectRx(CapSense_curRxIOPtr++);
 765:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     numElectrodes--;
 766:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 } while (0u != numElectrodes);
 767:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 768:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /*
 769:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 *  1. Get sns pointer for first Tx (Tx = Base + number of Rx).
 770:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 *  2. Get number of Tx electrodes
 771:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 *  3. Get pointer the Tx electrode
 772:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 *  4. Connect all Tx
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 15


 773:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 */
 774:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_curGangTxPtr = CapSense_curFlashWdgtPtr->ptr2SnsFlash;
 775:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_curGangTxPtr += CapSense_curFlashWdgtPtr->numCols;
 776:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 numElectrodes = CapSense_curGangTxPtr->numPins ;
 777:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_curTxIOPtr = &CapSense_ioList[CapSense_curGangTxPtr->firstPinId];
 778:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 779:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 do
 780:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 {
 781:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_CSXConnectTx(CapSense_curTxIOPtr++);
 782:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     numElectrodes--;
 783:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 }while (0u != numElectrodes);
 784:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 785:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /* Assign callback to ISR */
 786:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_CSXPostScanApiPtr = &CapSense_SsCSXPostMultiScanGanged;
 787:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 788:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             }
 789:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             else
 790:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #endif
 791:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             {
 792:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /*
 793:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 *  If no ganged sensor in the Component OR current widget contains no ganged sns, t
 794:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 *    1. Find Rx pointer: Rx = Base address.
 795:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 *    2. Find Tx pointer: Tx = Base address + total Rx
 796:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 */
 797:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_curRxIOPtr = (CapSense_FLASH_IO_STRUCT const *)CapSense_curFlashWdgtPtr->p
 798:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_curTxIOPtr = CapSense_curRxIOPtr;
 799:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_curTxIOPtr = &CapSense_curTxIOPtr[(CapSense_curFlashWdgtPtr->numCols)];
 800:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 801:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /* Connect first Tx and first Rx IOs for scan */
 802:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_CSXConnectTx(CapSense_curTxIOPtr);
 803:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_CSXConnectRx(CapSense_curRxIOPtr);
 804:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 805:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /* Set callback to scan all the sensors in widget */
 806:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_CSXPostScanApiPtr = &CapSense_SsCSXPostMultiScan;
 807:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             }
 808:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 809:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             /* Reset multi-frequency scan channel if enabled */
 810:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #if (CapSense_MULTI_FREQ_SCAN_EN == CapSense_ENABLE)
 811:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_scanFreqIndex = CapSense_FREQ_CHANNEL_0;
 812:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #endif
 813:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 814:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         /* Set scan status, enter critical section and initiate scan */
 815:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_dsRam.status |= CapSense_SW_STS_BUSY;
 816:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 817:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #if(CapSense_ENABLE == CapSense_CSDV2) &&\
 818:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****            (CapSense_ENABLE != CapSense_BLOCK_OFF_AFTER_SCAN_EN) &&\
 819:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****            (CapSense_CSX_ANALOG_STARTUP_DELAY_US > 0uL)
 820:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CyDelayUs(CapSense_CSX_ANALOG_STARTUP_DELAY_US);
 821:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #endif
 822:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_SsCSXStartSample();
 823:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 824:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
 825:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** }
 826:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 827:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /*******************************************************************************
 828:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Function Name: CapSense_CSXScanExt()
 829:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** ****************************************************************************//**
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 16


 830:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 831:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \brief
 832:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  Starts the CSX conversion on the preconfigured sensor. This function requires
 833:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  using the CapSense_CSXSetupWidgetExt() function to set up a
 834:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  widget.
 835:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 836:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \details
 837:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  This function performs single scanning of one sensor in the widget configured
 838:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  by the CapSense_CSXSetupWidgetExt() function. It does the following
 839:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  tasks:
 840:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *    1. Sets a busy flag in the CapSense_dsRam structure.
 841:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *    2. Configures the Tx clock frequency.
 842:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *    3. Configures the Modulator clock frequency.
 843:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *    4. Configures the IDAC value.
 844:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *    5. Starts single scanning.
 845:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 846:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  Calling this function directly from the application layer is not
 847:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  recommended. This function is used to implement only the user's specific
 848:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  use cases (for faster execution time or pipeline scanning for example). This
 849:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  function is called when no scanning is in progress. I.e.
 850:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  CapSense_IsBusy() returns a non-busy status.
 851:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 852:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  The sensor must be preconfigured by using the
 853:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  CapSense_CSXSetupWidgetExt() API prior to calling this function.
 854:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  The sensor remains ready for the next scan if a previous scan was triggered
 855:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  by using the CapSense_CSXScanExt() function. In this case, calling
 856:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  CapSense_CSXSetupWidgetExt() is not required every time before the
 857:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  CapSense_CSXScanExt() function. If a previous scan was triggered in
 858:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  any other way - CapSense_Scan(), CapSense_ScanAllWidgets()
 859:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  or CapSense_RunTuner() - (see the CapSense_RunTuner() function
 860:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  description for more details), the sensor must be preconfigured again by
 861:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  using the CapSense_CSXSetupWidgetExt() API prior to calling the
 862:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  CapSense_CSXScanExt() function.
 863:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 864:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  If disconnection of the sensors is required after calling
 865:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  CapSense_CSXScanExt(), the CapSense_CSXDisconnectTx() and
 866:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  CapSense_CSXDisconnectRx() APIs can be used.
 867:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 868:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *******************************************************************************/
 869:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 870:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** void CapSense_CSXScanExt(void)
 871:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** {
 872:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* Reset multi-frequency scan channel if enabled */
 873:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if (CapSense_MULTI_FREQ_SCAN_EN == CapSense_ENABLE)
 874:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_scanFreqIndex = CapSense_FREQ_CHANNEL_0;
 875:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif
 876:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 877:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if (CapSense_ENABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
 878:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         if (0u != CapSense_curRamSnsPtr->subConvNum)
 879:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         {
 880:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             /* Set busy flag and start conversion */
 881:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_dsRam.status |= CapSense_SW_STS_BUSY;
 882:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 883:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #if(CapSense_ENABLE == CapSense_CSDV2) &&\
 884:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                (CapSense_ENABLE != CapSense_BLOCK_OFF_AFTER_SCAN_EN) &&\
 885:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                (CapSense_CSX_ANALOG_STARTUP_DELAY_US > 0uL)
 886:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CyDelayUs(CapSense_CSX_ANALOG_STARTUP_DELAY_US);
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 17


 887:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #endif
 888:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_SsCSXStartSample();
 889:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         }
 890:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #else
 891:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         /* Set busy flag and start conversion */
 892:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_dsRam.status |= CapSense_SW_STS_BUSY;
 893:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 894:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #if(CapSense_ENABLE == CapSense_CSDV2) &&\
 895:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****            (CapSense_ENABLE != CapSense_BLOCK_OFF_AFTER_SCAN_EN) &&\
 896:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****            (CapSense_CSX_ANALOG_STARTUP_DELAY_US > 0uL)
 897:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CyDelayUs(CapSense_CSX_ANALOG_STARTUP_DELAY_US);
 898:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #endif
 899:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_SsCSXStartSample();
 900:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
 901:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** }
 902:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 903:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 904:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /*******************************************************************************
 905:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Function Name: CapSense_SsCSXPostMultiScan
 906:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** ****************************************************************************//**
 907:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 908:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \brief
 909:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   ISR function implements the multiple-sensor scanning for un-ganged CSX widgets.
 910:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   This function is called by the Component ISR only, it should not be used by
 911:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   the application layer.
 912:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 913:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *******************************************************************************/
 914:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 915:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** static void CapSense_SsCSXPostMultiScan(void)
 916:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** {
 917:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #ifdef CapSense_ENTRY_CALLBACK
 918:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_EntryCallback();
 919:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif /* CapSense_ENTRY_CALLBACK */
 920:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 921:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* Copy scan result into sensor raw count array */
 922:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CapSense_curRamSnsPtr->raw[CapSense_scanFreqIndex] = \
 923:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                              (CapSense_csxScanPeriod - CapSense_csxRawCount);
 924:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 925:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
 926:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         /* Increment multi frequency scan index if all channels are not scanned */
 927:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         if (CapSense_FREQ_CHANNEL_2 > CapSense_scanFreqIndex)
 928:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         {
 929:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             /* Change multi-frequency channel and start sample */
 930:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_scanFreqIndex++;
 931:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 932:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #if (CapSense_MFS_IMO == CapSense_MFS_METHOD)
 933:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_SsChangeImoFreq((uint32)CapSense_scanFreqIndex);
 934:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #else
 935:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_SsChangeClkFreq((uint32)CapSense_scanFreqIndex);
 936:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #endif /* (CapSense_MFS_IMO == CapSense_MFS_METHOD) */
 937:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 938:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_SsCSXStartSample();
 939:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         }
 940:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         else
 941:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif
 942:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         {
 943:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #if (CapSense_MULTI_FREQ_SCAN_EN == CapSense_ENABLE)
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 18


 944:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /* All channels are scanned. Reset the multi frequency scan channel */
 945:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_scanFreqIndex = CapSense_FREQ_CHANNEL_0;
 946:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 947:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 #if (CapSense_MFS_IMO == CapSense_MFS_METHOD)
 948:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_SsChangeImoFreq(CapSense_FREQ_CHANNEL_0);
 949:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 #else
 950:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_SsChangeClkFreq(CapSense_FREQ_CHANNEL_0);
 951:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 #endif /* (CapSense_MFS_IMO == CapSense_MFS_METHOD) */
 952:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 953:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #endif
 954:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 955:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #if (CapSense_ENABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
 956:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /* Disconnect Tx/Rx electrodes of previously scanned sensor as preparation for next
 957:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_CSXDisconnectTx(CapSense_curTxIOPtr);
 958:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_CSXDisconnectRx(CapSense_curRxIOPtr);
 959:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 960:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /* Increment sensor until non-skipped is found */
 961:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 do
 962:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 {
 963:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     /* Increment sensor index to configure next sensor in widget */
 964:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_sensorIndex++;
 965:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 966:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     /* Increment sensor pointers */
 967:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_curRamSnsPtr++;
 968:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_curWdgtTotalTx--;
 969:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     if (CapSense_curWdgtTotalTx > 0u)
 970:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     {
 971:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_curTxIOPtr++;
 972:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     }
 973:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     else
 974:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     {
 975:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_curWdgtTotalRx--;
 976:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         if (CapSense_curWdgtTotalRx > 0u)
 977:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         {
 978:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             CapSense_curRxIOPtr++;
 979:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             CapSense_curWdgtTotalTx  = CapSense_curFlashWdgtPtr->numRows;
 980:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             CapSense_curTxIOPtr = (CapSense_FLASH_IO_STRUCT const *)CapSense_curFla
 981:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             CapSense_curTxIOPtr = & CapSense_curTxIOPtr[(CapSense_curFlashWdgtPtr->
 982:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         }
 983:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     }
 984:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 } while ((CapSense_curWdgtTotalRx != 0u) && (CapSense_curRamSnsPtr->subConvNum == 0
 985:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 986:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /* Perform the next scan or switch to the next widget */
 987:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 if(CapSense_curWdgtTotalRx != 0u)
 988:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 {
 989:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     /* Connect Tx/Rx electrodes for the next scan */
 990:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_CSXConnectTx(CapSense_curTxIOPtr);
 991:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_CSXConnectRx(CapSense_curRxIOPtr);
 992:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     /* Reset scan result holder, and initiate scan */
 993:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_SsCSXStartSample();
 994:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 }
 995:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 else
 996:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 {
 997:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     /* Call scan next widget API if requested, if not, complete scan */
 998:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     if (CapSense_requestScanAllWidget != 0u)
 999:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     {
1000:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_SsPostAllWidgetsScan();
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 19


1001:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     }
1002:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     else
1003:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     {
1004:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_dsRam.scanCounter++;
1005:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_dsRam.status &= ~CapSense_SW_STS_BUSY;
1006:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     }
1007:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 }
1008:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #else /* (CapSense_ENABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
1009:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1010:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /*
1011:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 *  Disconnect Tx electrodes of previously scanned sensor as
1012:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 *  preparation for next sensor scan
1013:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 */
1014:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_CSXDisconnectTx (CapSense_curTxIOPtr);
1015:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1016:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /* Increment sensor index to configure next sensor in widget */
1017:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_sensorIndex++;
1018:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1019:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /*
1020:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 *  Initiate scan for next sensor in widget, if all the sensors in
1021:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 *  widget are not scanned
1022:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 */
1023:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_curWdgtTotalTx--;
1024:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 if (CapSense_curWdgtTotalTx > 0u)
1025:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 {
1026:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     /*
1027:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     *  1. Increment pointer to next Tx
1028:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     *  2. Connect next Rx for scan
1029:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     *  3. Increment pointer to sns data
1030:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     */
1031:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_curTxIOPtr++;
1032:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_CSXConnectTx (CapSense_curTxIOPtr);
1033:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_curRamSnsPtr++;
1034:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1035:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     /* Reset scan result holder, and initiate scan */
1036:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_SsCSXStartSample();
1037:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 }
1038:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1039:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /* Check if all Rx are looped through */
1040:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 else
1041:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 {
1042:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_curWdgtTotalRx--;
1043:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     if (CapSense_curWdgtTotalRx > 0u)
1044:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     {
1045:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         /*
1046:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         *  1. Disconnect current Rx electrode
1047:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         *  2. Connect next Rx electrode
1048:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         *  3. Re-initialize total Tx to be scanned per Rx
1049:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         *  4. Find first Tx electrode again
1050:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         *  5. Connect first Tx electrode
1051:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         */
1052:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_CSXDisconnectRx(CapSense_curRxIOPtr);
1053:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_curRxIOPtr++;
1054:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_CSXConnectRx(CapSense_curRxIOPtr);
1055:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_curWdgtTotalTx  = CapSense_curFlashWdgtPtr->numRows;
1056:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_curTxIOPtr = (CapSense_FLASH_IO_STRUCT const *)CapSense_curFlashWd
1057:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_curTxIOPtr = & CapSense_curTxIOPtr[(CapSense_curFlashWdgtPtr->numC
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 20


1058:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_CSXConnectTx(CapSense_curTxIOPtr);
1059:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1060:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         /* Increment RAM sensor pointer pointer */
1061:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_curRamSnsPtr++;
1062:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1063:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         /* Initiate sample */
1064:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_SsCSXStartSample();
1065:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     }
1066:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     else
1067:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     {
1068:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         /* If all the sensors are scanned, disconnect Tx */
1069:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_CSXDisconnectRx(CapSense_curRxIOPtr);
1070:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1071:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         /* Call scan next widget API if requested, if not, complete scan */
1072:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         if (CapSense_requestScanAllWidget != 0u)
1073:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         {
1074:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             CapSense_SsPostAllWidgetsScan();
1075:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         }
1076:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         else
1077:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         {
1078:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             /*
1079:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             *  All pending scans completed,
1080:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             *    1. update the counter to indicat same
1081:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             *    2. Clear busy state as scanning is completed
1082:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             */
1083:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             CapSense_dsRam.scanCounter++;
1084:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             CapSense_dsRam.status &= ~CapSense_SW_STS_BUSY;
1085:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         }
1086:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     }
1087:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 }
1088:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #endif /* (CapSense_ENABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
1089:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         }
1090:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1091:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #ifdef CapSense_EXIT_CALLBACK
1092:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_ExitCallback();
1093:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif /* CapSense_EXIT_CALLBACK */
1094:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** }
1095:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1096:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1097:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /*******************************************************************************
1098:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Function Name: CapSense_SsCSXPostMultiScanGanged
1099:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** ****************************************************************************//**
1100:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1101:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \brief
1102:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   The ISR function implements the multiple-sensor scanning for ganged CSX widgets.
1103:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   This function is called by the Component ISR only, should not be used by
1104:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   the application layer.
1105:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1106:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \details
1107:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   The ISR function implements the multiple-sensor scanning for ganged CSX widgets.
1108:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   This function is called by the Component ISR only, should not be used by
1109:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   the application layer.
1110:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1111:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *******************************************************************************/
1112:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #if (CapSense_CSX_GANGED_SNS_EN == 1u)
1113:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1114:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** static void CapSense_SsCSXPostMultiScanGanged(void)
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 21


1115:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** {
1116:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     uint32 numElectrodes;
1117:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1118:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #ifdef CapSense_ENTRY_CALLBACK
1119:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_EntryCallback();
1120:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif /* CapSense_ENTRY_CALLBACK */
1121:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1122:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* Copy scan result into sensor raw count array */
1123:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CapSense_curRamSnsPtr->raw[CapSense_scanFreqIndex] = \
1124:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     (CapSense_csxScanPeriod - CapSense_csxRawCount);
1125:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1126:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
1127:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         /* Increment multi frequency scan index if all channels are not scanned */
1128:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         if (CapSense_FREQ_CHANNEL_2 > CapSense_scanFreqIndex)
1129:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         {
1130:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             /* Change multi-frequency channel and start sample */
1131:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_scanFreqIndex++;
1132:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1133:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #if (CapSense_MFS_IMO == CapSense_MFS_METHOD)
1134:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_SsChangeImoFreq((uint32)CapSense_scanFreqIndex);
1135:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #else
1136:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_SsChangeClkFreq((uint32)CapSense_scanFreqIndex);
1137:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #endif /* (CapSense_MFS_IMO == CapSense_MFS_METHOD) */
1138:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1139:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_SsCSXStartSample();
1140:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         }
1141:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         else
1142:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif
1143:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         {
1144:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #if (CapSense_MULTI_FREQ_SCAN_EN == CapSense_ENABLE)
1145:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /* All channels are scanned. Reset the multi frequency scan channel */
1146:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_scanFreqIndex = CapSense_FREQ_CHANNEL_0;
1147:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1148:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 #if (CapSense_MFS_IMO == CapSense_MFS_METHOD)
1149:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_SsChangeImoFreq(CapSense_FREQ_CHANNEL_0);
1150:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 #else
1151:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_SsChangeClkFreq(CapSense_FREQ_CHANNEL_0);
1152:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 #endif /* (CapSense_MFS_IMO == CapSense_MFS_METHOD) */
1153:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1154:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #endif
1155:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1156:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #if (CapSense_ENABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
1157:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /* Disconnect Tx electrodes of previously scanned sensor as preparation for next se
1158:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 numElectrodes = CapSense_curGangTxPtr->numPins;
1159:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_curTxIOPtr = &CapSense_ioList[CapSense_curGangTxPtr->firstPinId];
1160:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 do
1161:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 {
1162:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_CSXDisconnectTx(CapSense_curTxIOPtr++);
1163:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     numElectrodes--;
1164:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 } while (0u != numElectrodes);
1165:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /* Disconnect Rx electrodes of previously scanned sensor as preparation for next se
1166:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 numElectrodes = CapSense_curGangRxPtr->numPins;
1167:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_curRxIOPtr = &CapSense_ioList[CapSense_curGangRxPtr->firstPinId];
1168:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 do
1169:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 {
1170:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_CSXDisconnectRx(CapSense_curRxIOPtr++);
1171:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     numElectrodes--;
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 22


1172:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 } while (0u != numElectrodes);
1173:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1174:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /* Increment sensor until non-skipped is found */
1175:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 do
1176:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 {
1177:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     /* Increment sensor index to configure next sensor in widget */
1178:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_sensorIndex++;
1179:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1180:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     /* Increment RAM sensor pointer */
1181:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_curRamSnsPtr++;
1182:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_curWdgtTotalTx--;
1183:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     if (CapSense_curWdgtTotalTx > 0u)
1184:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     {
1185:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_curGangTxPtr++;
1186:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     }
1187:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     else
1188:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     {
1189:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         /* Check if all Rx are scanned, if not, initiate scan for next Rx */
1190:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_curWdgtTotalRx--;
1191:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         if (CapSense_curWdgtTotalRx > 0u)
1192:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         {
1193:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             CapSense_curGangRxPtr++;
1194:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             CapSense_curWdgtTotalTx = CapSense_curFlashWdgtPtr->numRows;
1195:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             CapSense_curGangTxPtr = CapSense_curFlashWdgtPtr->ptr2SnsFlash;
1196:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             CapSense_curGangTxPtr += CapSense_curFlashWdgtPtr->numCols;
1197:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         }
1198:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     }
1199:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 } while ((CapSense_curWdgtTotalRx != 0u) && (CapSense_curRamSnsPtr->subConvNum == 0
1200:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1201:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 if(CapSense_curWdgtTotalRx != 0u)
1202:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 {
1203:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     /* Connect Tx electrodes for the next scan */
1204:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     numElectrodes = CapSense_curGangTxPtr->numPins;
1205:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_curTxIOPtr = &CapSense_ioList[CapSense_curGangTxPtr->firstPinId];
1206:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     do
1207:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     {
1208:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_CSXConnectTx(CapSense_curTxIOPtr++);
1209:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         numElectrodes--;
1210:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     } while (0u != numElectrodes);
1211:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     /* Connect Tx electrodes for the next scan */
1212:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     numElectrodes = CapSense_curGangRxPtr->numPins ;
1213:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_curRxIOPtr = &CapSense_ioList[CapSense_curGangRxPtr->firstPinId];
1214:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     do
1215:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     {
1216:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_CSXConnectRx(CapSense_curRxIOPtr++);
1217:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         numElectrodes--;
1218:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     } while (0u != numElectrodes);
1219:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     /* Reset scan result holder, and initiate scan */
1220:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_SsCSXStartSample();
1221:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 }
1222:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 else
1223:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 {
1224:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     /* Call scan next widget API if requested, if not, complete scan */
1225:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     if (CapSense_requestScanAllWidget != 0u)
1226:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     {
1227:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_SsPostAllWidgetsScan();
1228:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     }
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 23


1229:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     else
1230:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     {
1231:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_dsRam.scanCounter++;
1232:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_dsRam.status &= ~CapSense_SW_STS_BUSY;
1233:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     }
1234:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 }
1235:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #else /* (CapSense_ENABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
1236:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1237:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /* Disconnect ALL pins of previously scanned Tx */
1238:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 numElectrodes = CapSense_curGangTxPtr->numPins ;
1239:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_curTxIOPtr = &CapSense_ioList[CapSense_curGangTxPtr->firstPinId];
1240:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 do
1241:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 {
1242:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_CSXDisconnectTx (CapSense_curTxIOPtr++);
1243:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     numElectrodes--;
1244:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 } while (0u != numElectrodes);
1245:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1246:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /* Increment sensor index to configure next sensor in widget */
1247:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_sensorIndex++;
1248:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1249:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /* Check if all Tx are scanned, if not, initiate scan for next Tx */
1250:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_curWdgtTotalTx--;
1251:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 if (CapSense_curWdgtTotalTx > 0u)
1252:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 {
1253:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     /*
1254:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     *  1. Find pointer of next Tx (ganged)
1255:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     *  2. Connect all Tx pins
1256:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     */
1257:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_curGangTxPtr++;
1258:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     numElectrodes = CapSense_curGangTxPtr->numPins ;
1259:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_curTxIOPtr = &CapSense_ioList[CapSense_curGangTxPtr->firstPinId];
1260:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     do
1261:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     {
1262:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_CSXConnectTx(CapSense_curTxIOPtr++);
1263:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         numElectrodes--;
1264:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     } while (0u != numElectrodes);
1265:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1266:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     /* Increment RAM pointer to next sensor */
1267:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_curRamSnsPtr++;
1268:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1269:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     /* Reset scan result holder and initiate scan */
1270:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_SsCSXStartSample();
1271:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 }
1272:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 else
1273:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 {
1274:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     /* Check if all Rx are scanned, if not, initiate scan for next Rx */
1275:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_curWdgtTotalRx--;
1276:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     if (CapSense_curWdgtTotalRx > 0u)
1277:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     {
1278:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         /* 1. Disconnect current Rx ALL pins */
1279:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         numElectrodes = CapSense_curGangRxPtr->numPins ;
1280:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_curRxIOPtr = &CapSense_ioList[CapSense_curGangRxPtr->firstPinId];
1281:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         do
1282:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         {
1283:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             CapSense_CSXDisconnectRx(CapSense_curRxIOPtr++);
1284:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             numElectrodes--;
1285:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         } while (0u != numElectrodes);
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 24


1286:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1287:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         /* 2. Connect next Rx ALL pins */
1288:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_curGangRxPtr++;
1289:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         numElectrodes = CapSense_curGangRxPtr->numPins ;
1290:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_curRxIOPtr = &CapSense_ioList[CapSense_curGangRxPtr->firstPinId];
1291:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         do
1292:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         {
1293:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             CapSense_CSXConnectRx(CapSense_curRxIOPtr++);
1294:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             numElectrodes--;
1295:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         } while (0u != numElectrodes);
1296:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1297:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         /*
1298:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         *  3. Re-initialize total Tx to be scanned per Rx
1299:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         *  4. Find first Tx  again
1300:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         *  5. Connect first Tx ALL pins
1301:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         */
1302:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_curWdgtTotalTx = CapSense_curFlashWdgtPtr->numRows;
1303:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_curGangTxPtr = CapSense_curFlashWdgtPtr->ptr2SnsFlash;
1304:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_curGangTxPtr += CapSense_curFlashWdgtPtr->numCols;
1305:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1306:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         /* 6. Connect Tx ALL pins */
1307:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         numElectrodes = CapSense_curGangTxPtr->numPins ;
1308:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_curTxIOPtr = &CapSense_ioList[CapSense_curGangTxPtr->firstPinId];
1309:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         do
1310:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         {
1311:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             CapSense_CSXConnectTx(CapSense_curTxIOPtr++);
1312:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             numElectrodes--;
1313:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         } while (0u != numElectrodes);
1314:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1315:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         /* Increment RAM pointer to next sensor */
1316:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_curRamSnsPtr++;
1317:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1318:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         /* Reset scan result holder and initiate scan */
1319:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_SsCSXStartSample();
1320:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     }
1321:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     else
1322:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     {
1323:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         /* Disconnect ALL electrodes of previously scanned Rx */
1324:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         numElectrodes = CapSense_curGangRxPtr->numPins ;
1325:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_curRxIOPtr = &CapSense_ioList[CapSense_curGangRxPtr->firstPinId];
1326:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         do
1327:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         {
1328:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             CapSense_CSXDisconnectRx(CapSense_curRxIOPtr++);
1329:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             numElectrodes--;
1330:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         } while (0u != numElectrodes);
1331:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1332:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         /* Call scan next widget API if requested, if not, complete scan */
1333:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         if (CapSense_requestScanAllWidget != 0u)
1334:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         {
1335:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             CapSense_SsPostAllWidgetsScan();
1336:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         }
1337:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         else
1338:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         {
1339:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             /*
1340:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             *  All pending scans completed,
1341:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             *    1. update the counter to indicate same
1342:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             *    2. Clear busy state as scanning is completed
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 25


1343:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             */
1344:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             CapSense_dsRam.scanCounter++;
1345:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             CapSense_dsRam.status &= ~CapSense_SW_STS_BUSY;
1346:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         }
1347:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     }
1348:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 }
1349:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #endif /* (CapSense_ENABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
1350:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         }
1351:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1352:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #ifdef CapSense_EXIT_CALLBACK
1353:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_ExitCallback();
1354:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif /* CapSense_EXIT_CALLBACK */
1355:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** }
1356:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1357:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #endif  /* (CapSense_CSX_GANGED_SNS_EN == 1u) */
1358:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1359:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /*******************************************************************************
1360:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Function Name: CapSense_SsCSXPostSingleScan
1361:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** ****************************************************************************//**
1362:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1363:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \brief
1364:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   The ISR function for single-sensor scanning implementation.
1365:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1366:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \details
1367:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   This function is used by CapSense ISR in the CSX scanning mode to implement
1368:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   the single-sensor scanning.
1369:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   This function should not be used by the application layer.
1370:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1371:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *******************************************************************************/
1372:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1373:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** static void CapSense_SsCSXPostSingleScan(void)
1374:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** {
  27              		.loc 1 1374 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
1375:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #ifdef CapSense_ENTRY_CALLBACK
1376:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_EntryCallback();
1377:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif /* CapSense_ENTRY_CALLBACK */
1378:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1379:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /*
1380:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     * Copy scan result into sensor raw count array and clear busy flag
1381:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     *    No sensor is connected or disconnected in this function
1382:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     *    Calling CapSense_ScanExt from application would perform
1383:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     *    one more scan of same sensor. Specifically for low-power mode.
1384:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     */
1385:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CapSense_curRamSnsPtr->raw[CapSense_scanFreqIndex] =
  32              		.loc 1 1385 0
  33 0000 094B     		ldr	r3, .L2
  34 0002 1868     		ldr	r0, [r3]
  35 0004 094B     		ldr	r3, .L2+4
  36 0006 1B78     		ldrb	r3, [r3]
  37 0008 0949     		ldr	r1, .L2+8
  38 000a 0A88     		ldrh	r2, [r1]
  39 000c 4988     		ldrh	r1, [r1, #2]
  40 000e 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 26


  41 0010 521A     		subs	r2, r2, r1
  42 0012 1A52     		strh	r2, [r3, r0]
1386:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         (CapSense_csxScanPeriod - CapSense_csxRawCount);
1387:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1388:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
1389:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         /* Increment multi frequency scan index if all channels are not scanned */
1390:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         if (CapSense_FREQ_CHANNEL_2 > CapSense_scanFreqIndex)
1391:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         {
1392:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             /* Change multi-frequency channel and start sample */
1393:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_scanFreqIndex++;
1394:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1395:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #if (CapSense_MFS_IMO == CapSense_MFS_METHOD)
1396:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_SsChangeImoFreq((uint32)CapSense_scanFreqIndex);
1397:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #else
1398:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_SsChangeClkFreq((uint32)CapSense_scanFreqIndex);
1399:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #endif /* (CapSense_MFS_IMO == CapSense_MFS_METHOD) */
1400:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1401:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_SsCSXStartSample();
1402:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         }
1403:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         else
1404:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif
1405:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         {
1406:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #if (CapSense_MULTI_FREQ_SCAN_EN == CapSense_ENABLE)
1407:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /* All channels are scanned. Reset the multi frequency scan channel */
1408:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_scanFreqIndex = CapSense_FREQ_CHANNEL_0;
1409:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1410:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 #if (CapSense_MFS_IMO == CapSense_MFS_METHOD)
1411:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_SsChangeImoFreq(CapSense_FREQ_CHANNEL_0);
1412:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 #else
1413:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_SsChangeClkFreq(CapSense_FREQ_CHANNEL_0);
1414:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 #endif /* (CapSense_MFS_IMO == CapSense_MFS_METHOD) */
1415:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1416:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #endif
1417:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             /*
1418:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             * All pending scans completed,
1419:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             *   1. Update the counter to indicate same
1420:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             *   2. Clear busy state as scanning is completed
1421:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             */
1422:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_dsRam.scanCounter++;
  43              		.loc 1 1422 0
  44 0014 074B     		ldr	r3, .L2+12
  45 0016 1A89     		ldrh	r2, [r3, #8]
  46 0018 0132     		adds	r2, r2, #1
  47 001a 1A81     		strh	r2, [r3, #8]
1423:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_dsRam.status &= ~CapSense_SW_STS_BUSY;
  48              		.loc 1 1423 0
  49 001c DA68     		ldr	r2, [r3, #12]
  50 001e 8021     		movs	r1, #128
  51 0020 8A43     		bics	r2, r1
  52 0022 DA60     		str	r2, [r3, #12]
1424:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         }
1425:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1426:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #ifdef CapSense_EXIT_CALLBACK
1427:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_ExitCallback();
1428:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif /* CapSense_EXIT_CALLBACK */
1429:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** }
  53              		.loc 1 1429 0
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 27


  54              		@ sp needed
  55 0024 7047     		bx	lr
  56              	.L3:
  57 0026 C046     		.align	2
  58              	.L2:
  59 0028 00000000 		.word	CapSense_curRamSnsPtr
  60 002c 00000000 		.word	CapSense_scanFreqIndex
  61 0030 00000000 		.word	.LANCHOR0
  62 0034 00000000 		.word	CapSense_dsRam
  63              		.cfi_endproc
  64              	.LFE8:
  65              		.size	CapSense_SsCSXPostSingleScan, .-CapSense_SsCSXPostSingleScan
  66              		.section	.text.CapSense_SsCalcCsxScanPeriod,"ax",%progbits
  67              		.align	2
  68              		.code	16
  69              		.thumb_func
  70              		.type	CapSense_SsCalcCsxScanPeriod, %function
  71              	CapSense_SsCalcCsxScanPeriod:
  72              	.LFB16:
1430:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1431:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /*******************************************************************************
1432:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Function Name: CapSense_CSXCalibrateWidget
1433:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** ****************************************************************************//**
1434:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1435:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \brief
1436:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  Calibrates the raw count values of all the sensors/nodes in a CSX widget.
1437:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1438:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \details
1439:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  Performs a successive approximation search algorithm to find appropriate
1440:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  IDAC values for sensors in the specified widget that provides a raw count
1441:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  to the level specified by the target parameter.
1442:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1443:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  This function is available when the CSX Enable IDAC auto-calibration
1444:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  parameter is enabled.
1445:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1446:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \param widgetId
1447:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  Specifies the ID number of the CSX widget to calibrate its raw count.
1448:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  A macro for the widget ID can be found in the
1449:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  CapSense Configuration header file defined as
1450:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  CapSense_<WidgetName>_WDGT_ID.
1451:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1452:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \param target
1453:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  Specifies the calibration target in percentages of the maximum raw count.
1454:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1455:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *******************************************************************************/
1456:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #if (CapSense_ENABLE == CapSense_CSX_IDAC_AUTOCAL_EN)
1457:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1458:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** void CapSense_CSXCalibrateWidget(uint32 widgetId, uint16 target)
1459:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** {
1460:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* Variable to calculate raw count target */
1461:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     uint32 rawTarget;
1462:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* Counter for loop execution */
1463:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     uint32 totalSns;
1464:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* Counter for loop execution */
1465:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     uint32 calibrationIndex;
1466:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1467:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* Currently used IDAC-bit */
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 28


1468:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     uint8 curIdacMask = (1u << (CapSense_CSX_IDAC_BITS_USED-1u));
1469:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* Next used IDAC-bit */
1470:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     uint8 nextIdacMask = (curIdacMask >> 1u);
1471:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1472:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* initialize ptr to sensor structures */
1473:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CapSense_curRamSnsPtr = (CapSense_RAM_SNS_STRUCT *)CapSense_dsFlash.wdgtArray[widgetId].ptr2Sns
1474:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1475:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if (CapSense_DISABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
1476:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         /* Calculate target raw count */
1477:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_csxScanPeriod  = CapSense_SsCalcCsxScanPeriod(
1478:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             (CapSense_RAM_WD_BASE_STRUCT *)CapSense_dsFlash.wdgtArray[widgetId].ptr2WdgtRam);
1479:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         rawTarget = CapSense_csxScanPeriod;
1480:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         rawTarget = (rawTarget * target) / CapSense_PERCENTAGE_100;
1481:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif /* (CapSense_DISABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
1482:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1483:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     if (CapSense_SENSE_METHOD_CSX_E ==
1484:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****        CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[widgetId]))
1485:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     {
1486:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         /* Find out total sensors/nodes in widget */
1487:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         totalSns = ((uint32)CapSense_dsFlash.wdgtArray[widgetId].numCols *
1488:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     (uint32)CapSense_dsFlash.wdgtArray[widgetId].numRows);
1489:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1490:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         /* Clear raw count registers and IDAC registers of all the sensors/nodes */
1491:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         for (calibrationIndex = 0u; calibrationIndex < totalSns; calibrationIndex++)
1492:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         {
1493:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_curRamSnsPtr->raw[CapSense_FREQ_CHANNEL_0] = 0u;
1494:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_curRamSnsPtr->idacComp[CapSense_FREQ_CHANNEL_0] = curIdacMask;
1495:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
1496:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_curRamSnsPtr->raw[CapSense_FREQ_CHANNEL_1] = 0u;
1497:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_curRamSnsPtr->raw[CapSense_FREQ_CHANNEL_2] = 0u;
1498:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_curRamSnsPtr->idacComp[CapSense_FREQ_CHANNEL_1] = curIdacMask;
1499:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_curRamSnsPtr->idacComp[CapSense_FREQ_CHANNEL_2] = curIdacMask;
1500:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #endif
1501:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_curRamSnsPtr++;
1502:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         }
1503:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1504:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         /* Perform binary search for accurate IDAC value for each sensor/node */
1505:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         do
1506:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         {
1507:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             /* Scan all the sensors/nodes in widget */
1508:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             (void)CapSense_SetupWidget(widgetId);
1509:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             (void)CapSense_Scan();
1510:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1511:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             while ((CapSense_dsRam.status & CapSense_SW_STS_BUSY) != 0u)
1512:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             {
1513:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             }
1514:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1515:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             /* Get access to sensor data */
1516:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_curRamSnsPtr = (CapSense_RAM_SNS_STRUCT *)CapSense_dsFlash.wdgtArray[widgetId]
1517:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1518:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             /* Check raw count and adjust IDAC, loop through all the sensors/nodes */
1519:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             for (calibrationIndex = 0u; calibrationIndex < totalSns; calibrationIndex++)
1520:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             {
1521:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /* Calculate raw count target for specified node */
1522:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 #if (CapSense_ENABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
1523:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     rawTarget = (CapSense_SsCSXOversample() * target) / CapSense_PERCENTAGE_100;
1524:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 #endif
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 29


1525:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1526:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /* Check if current raw count is above target,
1527:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 *   if yes, clear the MS bit of bit
1528:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 *   if no, keep the MS bit and set next bit
1529:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 */
1530:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 if (CapSense_curRamSnsPtr->raw[CapSense_FREQ_CHANNEL_0] > rawTarget)
1531:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 {
1532:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_curRamSnsPtr->idacComp[CapSense_FREQ_CHANNEL_0] &= (uint8)(~curIdacMas
1533:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 }
1534:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_curRamSnsPtr->idacComp[CapSense_FREQ_CHANNEL_0] |= nextIdacMask;
1535:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1536:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
1537:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     if (CapSense_curRamSnsPtr->raw[CapSense_FREQ_CHANNEL_1] > rawTarget)
1538:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     {
1539:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_curRamSnsPtr->idacComp[CapSense_FREQ_CHANNEL_1] &= (uint8)(~curIda
1540:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     }
1541:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1542:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     if (CapSense_curRamSnsPtr->raw[CapSense_FREQ_CHANNEL_2] > rawTarget)
1543:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     {
1544:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_curRamSnsPtr->idacComp[CapSense_FREQ_CHANNEL_2] &= (uint8)(~curIda
1545:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     }
1546:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1547:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_curRamSnsPtr->idacComp[CapSense_FREQ_CHANNEL_1] |= nextIdacMask;
1548:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_curRamSnsPtr->idacComp[CapSense_FREQ_CHANNEL_2] |= nextIdacMask;
1549:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 #endif
1550:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_curRamSnsPtr++;
1551:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             }
1552:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1553:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             /* Shift both current idac and pre Idac values to right by 1 */
1554:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             curIdacMask = nextIdacMask;
1555:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             nextIdacMask = nextIdacMask >> 1u;
1556:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         }
1557:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         while (curIdacMask != 0u);
1558:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     }
1559:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** }
1560:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1561:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #endif /* (CapSense_CSX_IDAC_AUTOCAL_EN == CapSense_ENABLE) */
1562:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1563:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #if(CapSense_ENABLE == CapSense_CSDV2)
1564:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /*******************************************************************************
1565:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Function Name: CapSense_SsCSXStartSample
1566:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** ****************************************************************************//**
1567:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1568:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \brief
1569:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   Starts scanning for the CSX widget.
1570:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1571:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \details
1572:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   Starts scanning for the CSX widget.
1573:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1574:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *******************************************************************************/
1575:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** static void CapSense_SsCSXStartSample(void)
1576:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** {
1577:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     uint32 tmpRegVal;
1578:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1579:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     tmpRegVal = (uint32)CapSense_curRamSnsPtr->idacComp[CapSense_scanFreqIndex];
1580:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     tmpRegVal = (tmpRegVal & CapSense_IDAC_MOD_VAL_MASK) | CapSense_DEFAULT_CSD_IDACA_CFG;
1581:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_IDAC_MOD_PTR, tmpRegVal);
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 30


1582:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1583:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if (CapSense_ENABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
1584:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         /* Configure node-specific number of sub-conversion */
1585:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_csxScanPeriod = (uint16)CapSense_SsCSXOversample();
1586:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SEQ_NORM_CNT_PTR, (uint32)CapSense_curRamSnsPtr->subConvNum);
1587:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
1588:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1589:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* Clear scan result holder */
1590:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CapSense_csxRawCount = 0u;
1591:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1592:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #ifdef CapSense_START_SAMPLE_CALLBACK
1593:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_StartSampleCallback(CapSense_widgetIndex, CapSense_sensorIndex);
1594:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif /* CapSense_START_SAMPLE_CALLBACK */
1595:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1596:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CapSense_SsCSXStartSampleExt();
1597:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** }
1598:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #else
1599:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1600:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /*******************************************************************************
1601:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Function Name: CapSense_SsCSXStartSample
1602:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** ****************************************************************************//**
1603:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1604:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \brief
1605:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   Starts scanning for the CSX widget.
1606:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1607:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \param widgetIndex The ID of the widget to be calibrated.
1608:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1609:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \details
1610:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1611:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *******************************************************************************/
1612:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** static void CapSense_SsCSXStartSample(void)
1613:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** {
1614:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     uint8 critSect;
1615:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     uint32 tmpRegVal;
1616:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1617:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     critSect = CyEnterCriticalSection();
1618:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     tmpRegVal = CY_GET_REG32(CapSense_IDAC_PTR);
1619:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     tmpRegVal &= ~(CapSense_IDAC_MOD_MASK);
1620:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     tmpRegVal |= (CapSense_IDAC_MOD_MODE_VARIABLE | (uint32)CapSense_curRamSnsPtr->idacComp[CapSens
1621:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_IDAC_PTR, tmpRegVal);
1622:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CyExitCriticalSection(critSect);
1623:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1624:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* Clear scan result holder */
1625:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CapSense_csxRawCount = 0u;
1626:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1627:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #ifdef CapSense_START_SAMPLE_CALLBACK
1628:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_StartSampleCallback(CapSense_widgetIndex, CapSense_sensorIndex);
1629:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif /* CapSense_START_SAMPLE_CALLBACK */
1630:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1631:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if (CapSense_ENABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
1632:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         /* Configure node-specific number of sub-conversion */
1633:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_csxScanPeriod = (uint16)CapSense_SsCSXOversample();
1634:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
1635:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1636:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* Disable interrupts and initiate scan */
1637:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     critSect = CyEnterCriticalSection();
1638:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CapSense_SsCSXStartSampleExt();
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 31


1639:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CyExitCriticalSection(critSect);
1640:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** }
1641:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
1642:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1643:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /*******************************************************************************
1644:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Function Name: CapSense_CSXConnectTx
1645:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** ****************************************************************************//**
1646:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1647:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \brief
1648:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  Connects a Tx electrode to the CSX scanning hardware.
1649:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1650:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \details
1651:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  This function connects a port pin (Tx electrode) to the CSD_SENSE signal.
1652:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  It is assumed that drive mode of the port pin is already set to STRONG
1653:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  in the HSIOM_PORT_SELx register.
1654:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1655:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  Calling this function directly from the application layer is not
1656:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  recommended. This function is used to implement only the user's specific
1657:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  use cases (for faster execution time when there is only one port pin for an
1658:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  electrode for example).
1659:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1660:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \param txPtr
1661:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  Specifies the pointer to the FLASH_IO_STRUCT object belonging to a sensor
1662:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  to be connected to the sensing HW block as a Tx pin.
1663:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1664:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *******************************************************************************/
1665:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** void CapSense_CSXConnectTx(CapSense_FLASH_IO_STRUCT const *txPtr)
1666:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** {
1667:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     uint32 regValue;
1668:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1669:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     regValue = CY_GET_REG32 (txPtr->pcPtr);
1670:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     regValue |= (CapSense_GPIO_STRGDRV << txPtr->shift);
1671:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32 (txPtr->pcPtr, regValue);
1672:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1673:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     regValue = CY_GET_REG32 (txPtr->hsiomPtr);
1674:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     regValue |= (CapSense_HSIOM_SEL_CSD_SENSE << txPtr->hsiomShift);
1675:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32 (txPtr->hsiomPtr, regValue);
1676:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** }
1677:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1678:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /*******************************************************************************
1679:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Function Name: CapSense_CSXConnectRx
1680:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** ****************************************************************************//**
1681:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1682:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \brief
1683:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  Connects an Rx electrode to the CSX scanning hardware.
1684:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1685:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \details
1686:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  This function connects a port pin (Rx electrode) to AMUXBUS-A and sets
1687:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  drive mode of the port pin to High-Z in the GPIO_PRT_PCx register.
1688:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1689:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  Calling this function directly from the application layer is not
1690:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  recommended. This function is used to implement only the user's specific
1691:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  use cases (for faster execution time when there is only one port pin for an
1692:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  electrode for example).
1693:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1694:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \param rxPtr
1695:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  Specifies the pointer to the FLASH_IO_STRUCT object belonging to a sensor
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 32


1696:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  to be connected to the sensing HW block as an Rx pin.
1697:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1698:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *******************************************************************************/
1699:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** void CapSense_CSXConnectRx(CapSense_FLASH_IO_STRUCT const *rxPtr)
1700:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** {
1701:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     uint32 regValue;
1702:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1703:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     regValue = CY_GET_REG32 (rxPtr->pcPtr);
1704:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     regValue &= ~(CapSense_GPIO_PC_MASK << rxPtr->shift);
1705:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32 (rxPtr->pcPtr, regValue);
1706:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1707:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     regValue = CY_GET_REG32 (rxPtr->hsiomPtr);
1708:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     regValue |=  (CapSense_HSIOM_SEL_AMUXA << rxPtr->hsiomShift);
1709:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32 (rxPtr->hsiomPtr, regValue);
1710:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** }
1711:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1712:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /*******************************************************************************
1713:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Function Name: CapSense_CSXDisconnectTx
1714:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** ****************************************************************************//**
1715:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1716:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \brief
1717:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  Disconnects a Tx electrode from the CSX scanning hardware.
1718:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1719:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \details
1720:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  This function disconnects a port pin (Tx electrode) from the CSD_SENSE
1721:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  signal and configures the port pin to the strong drive mode. It is assumed
1722:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  that the data register (GPIO_PRTx_DR) of the port pin is already 0.
1723:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1724:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  Calling this function directly from the application layer is not
1725:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  recommended. This function is used to implement only the user's specific
1726:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  use cases (for faster execution time when there is only one port pin for an
1727:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  electrode for example).
1728:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1729:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \param txPtr
1730:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  Specifies the pointer to the FLASH_IO_STRUCT object belonging to a Tx pin
1731:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  sensor to be disconnected from the sensing HW block.
1732:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1733:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *******************************************************************************/
1734:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** void CapSense_CSXDisconnectTx(CapSense_FLASH_IO_STRUCT const *txPtr)
1735:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** {
1736:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     uint32 regValue;
1737:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1738:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     regValue = CY_GET_REG32 (txPtr->hsiomPtr);
1739:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     regValue &= ~(txPtr->hsiomMask);
1740:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32 (txPtr->hsiomPtr, regValue);
1741:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** }
1742:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1743:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /*******************************************************************************
1744:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Function Name: CapSense_CSXDisconnectRx
1745:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** ****************************************************************************//**
1746:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1747:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \brief
1748:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  Disconnects an Rx electrode from the CSX scanning hardware.
1749:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1750:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \details
1751:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  This function disconnects a port pin (Rx electrode) from AMUXBUS_A and
1752:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  configures the port pin to the strong drive mode. It is assumed that the
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 33


1753:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  data register (GPIO_PRTx_DR) of the port pin is already 0.
1754:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1755:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  Calling this function directly from the application layer is not
1756:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  recommended. This function is used to implement only the user's specific
1757:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  use cases (for faster execution time when there is only one port pin for
1758:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  an electrode for example).
1759:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1760:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \param rxPtr
1761:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  Specifies the pointer to the FLASH_IO_STRUCT object belonging to an Rx pin
1762:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  sensor to be disconnected from the sensing HW block.
1763:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1764:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *******************************************************************************/
1765:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** void CapSense_CSXDisconnectRx(CapSense_FLASH_IO_STRUCT const *rxPtr)
1766:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** {
1767:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     uint32 regValue;
1768:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1769:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     regValue = CY_GET_REG32 (rxPtr->hsiomPtr);
1770:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     regValue &= ~(rxPtr->hsiomMask);
1771:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32 (rxPtr->hsiomPtr, regValue);
1772:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1773:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     regValue = CY_GET_REG32 (rxPtr->pcPtr);
1774:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     regValue &= ~(CapSense_GPIO_PC_MASK << rxPtr->shift);
1775:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     regValue |=  (CapSense_GPIO_STRGDRV << rxPtr->shift);
1776:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32 (rxPtr->pcPtr, regValue);
1777:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1778:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     regValue = CY_GET_REG32 (rxPtr->drPtr);
1779:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     regValue &=  ~(rxPtr->mask);
1780:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32 (rxPtr->drPtr, regValue);
1781:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** }
1782:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1783:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1784:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /*******************************************************************************
1785:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Function Name: CapSense_SsCSXGetTxClkDivider
1786:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** ****************************************************************************//**
1787:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1788:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \brief
1789:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  This function gets the Sense Clock Divider value for one-dimension widgets
1790:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  and the Column Sense Clock divider value for two-dimension widgets.
1791:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1792:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \details
1793:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  This function gets the Sense Clock Divider value based on the Component
1794:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  configuration. The function is applicable for one-dimension widgets and for
1795:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  two-dimension widgets.
1796:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1797:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \param
1798:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  widgetId Specifies the ID of the widget.
1799:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1800:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \return The Sense Clock Divider value for one-dimension widgets
1801:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *         and the Column Sense Clock divider value for two-dimension widgets.
1802:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1803:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *******************************************************************************/
1804:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** uint32 CapSense_SsCSXGetTxClkDivider(uint32 widgetId)
1805:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** {
1806:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     uint32 retVal;
1807:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1808:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* Get sense divider based on configuration */
1809:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if (CapSense_DISABLE == CapSense_CSX_COMMON_TX_CLK_EN)
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 34


1810:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_RAM_WD_BASE_STRUCT *ptrWdgt;
1811:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1812:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
1813:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
1814:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1815:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         retVal = (uint32)(ptrWdgt->snsClk);
1816:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #else
1817:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         retVal = (uint32)CapSense_dsRam.snsCsxClk;
1818:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif /* (CapSense_DISABLE == CapSense_CSX_COMMON_TX_CLK_EN) */
1819:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1820:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     if(widgetId == 0uL)
1821:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     {
1822:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         ;
1823:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     }
1824:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1825:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     return (retVal);
1826:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** }
1827:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1828:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1829:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /*******************************************************************************
1830:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Function Name: CapSense_SsCalcCsxScanPeriod
1831:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** ****************************************************************************//**
1832:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1833:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \brief
1834:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  Calculates scan period for a desired CSX widget.
1835:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1836:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \details
1837:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  This function calculates a scan period for a desired CSX widget considering
1838:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  common Tx clock option.
1839:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1840:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \param wdgtPtr
1841:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  The pointer to a register map object that contains widget information.
1842:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1843:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \return
1844:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  Returns the CSX scan period for the widget.
1845:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1846:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *******************************************************************************/
1847:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** static uint16 CapSense_SsCalcCsxScanPeriod(CapSense_RAM_WD_BASE_STRUCT const *wdgtPtr)
1848:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** {
  73              		.loc 1 1848 0
  74              		.cfi_startproc
  75              		@ args = 0, pretend = 0, frame = 0
  76              		@ frame_needed = 0, uses_anonymous_args = 0
  77              		@ link register save eliminated.
  78              	.LVL0:
1849:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     uint32 temp;
1850:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1851:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if(CapSense_DISABLE == CapSense_CSX_COMMON_TX_CLK_EN)
1852:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         temp = (uint32)(wdgtPtr->snsClk);
  79              		.loc 1 1852 0
  80 0000 4389     		ldrh	r3, [r0, #10]
  81              	.LVL1:
1853:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #else
1854:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         temp = (uint32)(CapSense_dsRam.snsCsxClk);
1855:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif /* (CapSense_DISABLE == CapSense_CSX_COMMON_TX_CLK_EN) */
1856:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1857:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if(CapSense_ENABLE == CapSense_CSDV2)
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 35


1858:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         temp  = LO16((uint32)wdgtPtr->resolution * (temp - CapSense_CSX_DEADBAND_CYCLES_NUMBER));
  82              		.loc 1 1858 0
  83 0002 0288     		ldrh	r2, [r0]
  84 0004 981E     		subs	r0, r3, #2
  85              	.LVL2:
  86 0006 5043     		muls	r0, r2
  87 0008 80B2     		uxth	r0, r0
  88              	.LVL3:
1859:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #else
1860:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #if(CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
1861:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             temp = (temp / (uint32)CapSense_dsRam.modCsxClk);
1862:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK) */
1863:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1864:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         temp = ((uint32)wdgtPtr->resolution * CapSense_NUM_HALF_CYCLES * temp);
1865:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
1866:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1867:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* return the scan period */
1868:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     return ((uint16)temp);
1869:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** }
  89              		.loc 1 1869 0
  90              		@ sp needed
  91 000a 7047     		bx	lr
  92              		.cfi_endproc
  93              	.LFE16:
  94              		.size	CapSense_SsCalcCsxScanPeriod, .-CapSense_SsCalcCsxScanPeriod
  95              		.global	__aeabi_uidiv
  96              		.section	.text.CapSense_SsCSXStartSample,"ax",%progbits
  97              		.align	2
  98              		.code	16
  99              		.thumb_func
 100              		.type	CapSense_SsCSXStartSample, %function
 101              	CapSense_SsCSXStartSample:
 102              	.LFB10:
1576:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     uint32 tmpRegVal;
 103              		.loc 1 1576 0
 104              		.cfi_startproc
 105              		@ args = 0, pretend = 0, frame = 0
 106              		@ frame_needed = 0, uses_anonymous_args = 0
 107 0000 10B5     		push	{r4, lr}
 108              		.cfi_def_cfa_offset 8
 109              		.cfi_offset 4, -8
 110              		.cfi_offset 14, -4
1579:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     tmpRegVal = (tmpRegVal & CapSense_IDAC_MOD_VAL_MASK) | CapSense_DEFAULT_CSD_IDACA_CFG;
 111              		.loc 1 1579 0
 112 0002 344B     		ldr	r3, .L13
 113 0004 1A68     		ldr	r2, [r3]
 114 0006 344B     		ldr	r3, .L13+4
 115 0008 1B78     		ldrb	r3, [r3]
 116 000a D318     		adds	r3, r2, r3
 117 000c 5B7A     		ldrb	r3, [r3, #9]
 118              	.LVL4:
1580:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_IDAC_MOD_PTR, tmpRegVal);
 119              		.loc 1 1580 0
 120 000e 334A     		ldr	r2, .L13+8
 121 0010 1343     		orrs	r3, r2
 122              	.LVL5:
1581:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 36


 123              		.loc 1 1581 0
 124 0012 334A     		ldr	r2, .L13+12
 125 0014 1360     		str	r3, [r2]
1590:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 126              		.loc 1 1590 0
 127 0016 0022     		movs	r2, #0
 128 0018 324B     		ldr	r3, .L13+16
 129              	.LVL6:
 130 001a 5A80     		strh	r2, [r3, #2]
 131              	.LVL7:
 132              	.LBB4:
 133              	.LBB5:
1870:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1871:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1872:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #if (CapSense_ENABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
1873:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /*******************************************************************************
1874:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Function Name: CapSense_SsCSXOversample
1875:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** ****************************************************************************//**
1876:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1877:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \brief
1878:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   Calculates the scan period of specific node.
1879:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1880:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \details
1881:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   Calculates the scan period of specific node that is used as maximum
1882:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   raw count at raw count inversion (CapSense_csxScanPeriod variable).
1883:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   The CapSense_curFlashWdgtPtr and CapSense_curRamSnsPtr
1884:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   must be configured to proper widget/sensor before calling this function.
1885:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1886:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \return
1887:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   Returns the scan period of specific node (used as maximum raw count)
1888:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1889:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *******************************************************************************/
1890:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** static uint32 CapSense_SsCSXOversample(void)
1891:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** {
1892:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     uint32 temp;
1893:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1894:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if(CapSense_DISABLE == CapSense_CSX_COMMON_TX_CLK_EN)
1895:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_RAM_WD_BASE_STRUCT * curRamWdgtBasePtr;
1896:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         curRamWdgtBasePtr = (CapSense_RAM_WD_BASE_STRUCT *)CapSense_curFlashWdgtPtr->ptr2WdgtRam;
1897:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         temp = (uint32)(curRamWdgtBasePtr->snsClk);
1898:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #else
1899:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         temp = (uint32)(CapSense_dsRam.snsCsxClk);
1900:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif /* (CapSense_DISABLE == CapSense_CSX_COMMON_TX_CLK_EN) */
1901:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1902:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if(CapSense_ENABLE == CapSense_CSDV2)
1903:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         temp  = LO16((uint32)CapSense_curRamSnsPtr->subConvNum * (temp - CapSense_CSX_DEADBAND_CYCL
1904:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #else
1905:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #if(CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
1906:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             temp = (temp / (uint32)CapSense_dsRam.modCsxClk);
1907:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK) */
1908:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1909:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         temp = ((uint32)CapSense_curRamSnsPtr->subConvNum * CapSense_NUM_HALF_CYCLES * temp);
1910:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
1911:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1912:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* return the scan period */
1913:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     return (temp);
1914:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** }
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 37


1915:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #endif /* (CapSense_ENABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
1916:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1917:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1918:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #if(CapSense_ENABLE == CapSense_CSDV2)
1919:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /**
1920:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \cond SECTION_C_INTERRUPT
1921:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \addtogroup group_c_interrupt
1922:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \{
1923:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** */
1924:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /*******************************************************************************
1925:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Function Name: CapSense_CSXScanISR
1926:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** ****************************************************************************//**
1927:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1928:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \brief
1929:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  This is an internal ISR function to handle the CSX sensing method operation.
1930:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1931:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \details
1932:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  This handler covers the following functionality:
1933:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   - Read the result of the measurement and store it into the corresponding register of
1934:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *     the data structure.
1935:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   - If the Noise Metric functionality is enabled, then check the number of bad
1936:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *     conversions and repeat the scan of the current sensor of the number of bad
1937:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *     conversions is greater than the Noise Metric Threshold.
1938:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   - Initiate the scan of the next sensor for multiple sensor scanning mode.
1939:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   - Update the Status register in the data structure.
1940:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   - Switch the HW block to the default state if scanning of all the sensors is
1941:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *     completed.
1942:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1943:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *******************************************************************************/
1944:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** CY_ISR(CapSense_CSXScanISR)
1945:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** {
1946:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #if(0u != CapSense_CSX_NOISE_METRIC_EN)
1947:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     uint32 tmpRegVal;
1948:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #endif /* (0u != CapSense_CSX_NOISE_METRIC_EN) */
1949:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #if(0u != CapSense_CSX_NOISE_METRIC_EN)
1950:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     static uint32 CapSense_resamplingCyclesCnt = CapSense_RESAMPLING_CYCLES_MAX_NUMBER;
1951:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #endif /* (0u != CapSense_CSX_NOISE_METRIC_EN) */
1952:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1953:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CyIntDisable(CapSense_ISR_NUMBER);
1954:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1955:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_INTR_PTR, CapSense_DEFAULT_CSD_INTR_CFG);
1956:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1957:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CapSense_csxRawCount  = (uint16)(CY_GET_REG32(CapSense_RESULT_VAL1_PTR) &\
1958:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                                                          CapSense_RESULT_VAL1_VALUE_MASK);
1959:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1960:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CapSense_csxRawCount += (uint16)(CY_GET_REG32(CapSense_RESULT_VAL2_PTR) &\
1961:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                                                          CapSense_RESULT_VAL2_VALUE_MASK);
1962:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1963:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* This workaround neded to prevent overflow in the SW register map. Cypress ID #234358 */
1964:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     if(CapSense_csxRawCount > CapSense_csxScanPeriod)
1965:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     {
1966:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_csxRawCount = CapSense_csxScanPeriod;
1967:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     }
1968:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1969:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #if(0u != CapSense_CSX_NOISE_METRIC_EN)
1970:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     tmpRegVal = CY_GET_REG32(CapSense_RESULT_VAL1_PTR) >> CapSense_RESULT_VAL1_BAD_CONVS_SHIFT;
1971:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 38


1972:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     if((tmpRegVal > CapSense_CSX_NOISE_METRIC_TH) && (CapSense_resamplingCyclesCnt > 0uL))
1973:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     {
1974:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SEQ_START_PTR, CapSense_SCAN_CSD_SEQ_START_CFG);
1975:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_resamplingCyclesCnt--;
1976:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     }
1977:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     else
1978:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     {
1979:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_CSXPostScanApiPtr();
1980:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_resamplingCyclesCnt = CapSense_RESAMPLING_CYCLES_MAX_NUMBER;
1981:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     }
1982:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #else
1983:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CapSense_CSXPostScanApiPtr();
1984:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #endif /* (0u != CapSense_CSX_NOISE_METRIC_EN) */
1985:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1986:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     if(CapSense_NOT_BUSY == (CapSense_dsRam.status & CapSense_SW_STS_BUSY))
1987:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     {
1988:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_DEFAULT_CSD_CONFIG_CFG);
1989:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_CSDCMP_PTR, CapSense_DEFAULT_CSD_CSDCMP_CFG);
1990:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_IDAC_MOD_PTR, CapSense_DEFAULT_CSD_IDACA_CFG);
1991:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     }
1992:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1993:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CyIntEnable(CapSense_ISR_NUMBER);
1994:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** }
1995:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1996:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /** \}
1997:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \endcond */
1998:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1999:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /*******************************************************************************
2000:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Function Name: CapSense_SsCSXStartSampleExt
2001:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** ****************************************************************************//**
2002:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
2003:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \brief
2004:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   Starts the HW sequencer to perform the CSX conversion.
2005:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   specific widget.
2006:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
2007:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \details
2008:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   This function covers the following functionality:
2009:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *      1. Configures the HW sequencer to perform the coarse initialization.
2010:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *      2. Waiting for completion of the coarse initialization.
2011:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *      3. Configures the HW sequencer to perform the normal conversion.
2012:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *      4. Starts the normal conversion
2013:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
2014:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *******************************************************************************/
2015:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** static CY_INLINE void CapSense_SsCSXStartSampleExt(void)
2016:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** {
2017:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     uint32 filterDelay;
2018:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     uint32 watchdogCounter;
2019:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if (CapSense_MOD_CSD_CLK_12MHZ < CYDEV_BCLK__HFCLK__HZ)
2020:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         uint32 sampleClkFreqHz;
2021:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif /* (CapSense_MOD_CSD_CLK_12MHZ < CYDEV_BCLK__HFCLK__HZ) */
2022:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
2023:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /* Configure the HW sequencer to perform the coarse initialization. */
2024:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_CONFIG_PTR,           CapSense_DEFAULT_CSD_CONFIG_CFG);
 134              		.loc 1 2024 0
 135 001c 324A     		ldr	r2, .L13+20
 136 001e 334B     		ldr	r3, .L13+24
 137 0020 1A60     		str	r2, [r3]
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 39


2025:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_HSCMP_PTR,            CapSense_PRECHARGE_CSD_HSCMP_CFG);
 138              		.loc 1 2025 0
 139 0022 0122     		movs	r2, #1
 140 0024 324B     		ldr	r3, .L13+28
 141 0026 1A60     		str	r2, [r3]
2026:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_SW_HS_P_SEL_PTR,      CapSense_PRECHARGE_CSD_SW_HS_P_SEL_CFG);
 142              		.loc 1 2026 0
 143 0028 1123     		movs	r3, #17
 144 002a 324A     		ldr	r2, .L13+32
 145 002c 1360     		str	r3, [r2]
2027:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_SW_HS_N_SEL_PTR,      CapSense_PRECHARGE_CSD_SW_HS_N_SEL_CFG);
 146              		.loc 1 2027 0
 147 002e 8021     		movs	r1, #128
 148 0030 4904     		lsls	r1, r1, #17
 149 0032 314A     		ldr	r2, .L13+36
 150 0034 1160     		str	r1, [r2]
2028:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_SW_DSI_SEL_PTR,       CapSense_PRECHARGE_CSD_SW_DSI_SEL_CFG);
 151              		.loc 1 2028 0
 152 0036 314A     		ldr	r2, .L13+40
 153 0038 1360     		str	r3, [r2]
2029:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_SW_SHIELD_SEL_PTR,    CapSense_PRECHARGE_CSD_SW_SHIELD_SEL_CFG);
 154              		.loc 1 2029 0
 155 003a 0622     		movs	r2, #6
 156 003c 304B     		ldr	r3, .L13+44
 157 003e 1A60     		str	r2, [r3]
2030:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_SW_FW_MOD_SEL_PTR,    CapSense_PRECHARGE_CSD_SW_FW_MOD_SEL_CFG);
 158              		.loc 1 2030 0
 159 0040 304A     		ldr	r2, .L13+48
 160 0042 314B     		ldr	r3, .L13+52
 161 0044 1A60     		str	r2, [r3]
2031:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_SW_FW_TANK_SEL_PTR,   CapSense_PRECHARGE_CSD_SW_FW_TANK_SEL_CFG);
 162              		.loc 1 2031 0
 163 0046 314A     		ldr	r2, .L13+56
 164 0048 314B     		ldr	r3, .L13+60
 165 004a 1A60     		str	r2, [r3]
2032:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
2033:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if(CapSense_ENABLE == CapSense_CSDV2) &&\
2034:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****        (CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN) &&\
2035:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****        (CapSense_CSX_ANALOG_STARTUP_DELAY_US > 0uL)
2036:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CyDelayUs(CapSense_CSX_ANALOG_STARTUP_DELAY_US);
2037:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif
2038:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
2039:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_SEQ_START_PTR,        CapSense_PRECHARGE_CSD_SEQ_START_CFG);
 166              		.loc 1 2039 0
 167 004c 314A     		ldr	r2, .L13+64
 168 004e 324B     		ldr	r3, .L13+68
 169 0050 1A60     		str	r2, [r3]
 170              	.LVL8:
2040:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
2041:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* Wait for the HSCMP trigger and retutn the sequencer to the IDLE state. */
2042:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     watchdogCounter = CapSense_CSX_PRECHARGE_WATCHDOG_CYCLES_NUM;
 171              		.loc 1 2042 0
 172 0052 F023     		movs	r3, #240
 173 0054 9B00     		lsls	r3, r3, #2
 174 0056 00E0     		b	.L6
 175              	.LVL9:
 176              	.L8:
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 40


2043:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     while((0u != (CapSense_SEQ_START_START_MASK & CY_GET_REG32(CapSense_SEQ_START_PTR))) && (0u != 
2044:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     {
2045:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         watchdogCounter--;
 177              		.loc 1 2045 0
 178 0058 013B     		subs	r3, r3, #1
 179              	.LVL10:
 180              	.L6:
2043:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     while((0u != (CapSense_SEQ_START_START_MASK & CY_GET_REG32(CapSense_SEQ_START_PTR))) && (0u != 
 181              		.loc 1 2043 0
 182 005a 2F4A     		ldr	r2, .L13+68
 183 005c 1268     		ldr	r2, [r2]
 184 005e D207     		lsls	r2, r2, #31
 185 0060 01D5     		bpl	.L7
 186 0062 002B     		cmp	r3, #0
 187 0064 F8D1     		bne	.L8
 188              	.L7:
2046:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     }
2047:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
2048:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* Reset the sequencer to the IDLE state if HSCMP not triggered till watchdog period is out. */
2049:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     if(0u != (CapSense_SEQ_START_START_MASK & CY_GET_REG32(CapSense_SEQ_START_PTR)))
 189              		.loc 1 2049 0
 190 0066 2C4B     		ldr	r3, .L13+68
 191              	.LVL11:
 192 0068 1B68     		ldr	r3, [r3]
 193 006a DB07     		lsls	r3, r3, #31
 194 006c 03D5     		bpl	.L9
2050:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     {
2051:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SEQ_START_PTR,  CapSense_DEFAULT_CSD_SEQ_START_CFG);
 195              		.loc 1 2051 0
 196 006e C222     		movs	r2, #194
 197 0070 9200     		lsls	r2, r2, #2
 198 0072 294B     		ldr	r3, .L13+68
 199 0074 1A60     		str	r2, [r3]
 200              	.L9:
2052:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     }
2053:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
2054:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if (CapSense_MOD_CSD_CLK_12MHZ < CYDEV_BCLK__HFCLK__HZ)
2055:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         sampleClkFreqHz = CYDEV_BCLK__HFCLK__HZ / (uint32)CapSense_dsRam.modCsxClk;
 201              		.loc 1 2055 0
 202 0076 294B     		ldr	r3, .L13+72
 203 0078 597F     		ldrb	r1, [r3, #29]
 204 007a 2948     		ldr	r0, .L13+76
 205 007c FFF7FEFF 		bl	__aeabi_uidiv
 206              	.LVL12:
2056:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         if(sampleClkFreqHz <= CapSense_MOD_CSD_CLK_12MHZ)
 207              		.loc 1 2056 0
 208 0080 284B     		ldr	r3, .L13+80
 209 0082 9842     		cmp	r0, r3
 210 0084 04D9     		bls	.L11
2057:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         {
2058:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             filterDelay = CapSense_CONFIG_FILTER_DELAY_12MHZ;
2059:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         }
2060:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         else if(sampleClkFreqHz <= CapSense_MOD_CSD_CLK_24MHZ)
 211              		.loc 1 2060 0
 212 0086 284B     		ldr	r3, .L13+84
 213 0088 9842     		cmp	r0, r3
 214 008a 03D8     		bhi	.L12
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 41


2061:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         {
2062:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             filterDelay = CapSense_CONFIG_FILTER_DELAY_24MHZ;
 215              		.loc 1 2062 0
 216 008c 3023     		movs	r3, #48
 217 008e 02E0     		b	.L10
 218              	.L11:
2058:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         }
 219              		.loc 1 2058 0
 220 0090 2023     		movs	r3, #32
 221 0092 00E0     		b	.L10
 222              	.L12:
2063:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         }
2064:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         else
2065:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         {
2066:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             filterDelay = CapSense_CONFIG_FILTER_DELAY_48MHZ;
 223              		.loc 1 2066 0
 224 0094 4023     		movs	r3, #64
 225              	.L10:
 226              	.LVL13:
2067:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         }
2068:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #else
2069:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         filterDelay = CapSense_CONFIG_FILTER_DELAY_12MHZ;
2070:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif /* (CapSense_MOD_CSD_CLK_12MHZ < CYDEV_BCLK__HFCLK__HZ) */
2071:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
2072:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /* Configure the HW sequencer to perform the normal conversion. */
2073:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_PRESCAN_CSD_CONFIG_CFG | filterDelay);
 227              		.loc 1 2073 0
 228 0096 254A     		ldr	r2, .L13+88
 229 0098 1343     		orrs	r3, r2
 230              	.LVL14:
 231 009a 144A     		ldr	r2, .L13+24
 232 009c 1360     		str	r3, [r2]
2074:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_CSDCMP_PTR, CapSense_PRESCAN_CSD_CSDCMP_CFG);
 233              		.loc 1 2074 0
 234 009e 244A     		ldr	r2, .L13+92
 235 00a0 244B     		ldr	r3, .L13+96
 236 00a2 1A60     		str	r2, [r3]
2075:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_HSCMP_PTR, CapSense_DEFAULT_CSD_HSCMP_CFG);
 237              		.loc 1 2075 0
 238 00a4 0023     		movs	r3, #0
 239 00a6 1249     		ldr	r1, .L13+28
 240 00a8 0B60     		str	r3, [r1]
2076:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_SW_HS_P_SEL_PTR, CapSense_DEFAULT_CSD_SW_HS_P_SEL_CFG);
 241              		.loc 1 2076 0
 242 00aa 1249     		ldr	r1, .L13+32
 243 00ac 0B60     		str	r3, [r1]
2077:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_SW_HS_N_SEL_PTR, CapSense_DEFAULT_CSD_SW_HS_N_SEL_CFG);
 244              		.loc 1 2077 0
 245 00ae 1249     		ldr	r1, .L13+36
 246 00b0 0B60     		str	r3, [r1]
2078:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_SW_DSI_SEL_PTR, CapSense_DEFAULT_CSD_SW_DSI_SEL_CFG);
 247              		.loc 1 2078 0
 248 00b2 2320     		movs	r0, #35
 249              	.LVL15:
 250 00b4 1149     		ldr	r1, .L13+40
 251 00b6 0860     		str	r0, [r1]
2079:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_SW_SHIELD_SEL_PTR, CapSense_DEFAULT_CSD_SW_SHIELD_SEL_CFG);
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 42


 252              		.loc 1 2079 0
 253 00b8 1149     		ldr	r1, .L13+44
 254 00ba 0B60     		str	r3, [r1]
2080:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_SW_FW_MOD_SEL_PTR, CapSense_DEFAULT_CSD_SW_FW_MOD_SEL_CFG);
 255              		.loc 1 2080 0
 256 00bc 1249     		ldr	r1, .L13+52
 257 00be 0B60     		str	r3, [r1]
2081:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_SW_FW_TANK_SEL_PTR, CapSense_DEFAULT_CSD_SW_FW_TANK_SEL_CFG);
 258              		.loc 1 2081 0
 259 00c0 1349     		ldr	r1, .L13+60
 260 00c2 0B60     		str	r3, [r1]
2082:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
2083:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* Clear all pending interrupts of CSD block */
2084:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_INTR_PTR, CapSense_DEFAULT_CSD_INTR_CFG);
 261              		.loc 1 2084 0
 262 00c4 8321     		movs	r1, #131
 263 00c6 4900     		lsls	r1, r1, #1
 264 00c8 1B4B     		ldr	r3, .L13+100
 265 00ca 1960     		str	r1, [r3]
2085:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
2086:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* Start the normal conversion. */
2087:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_SEQ_START_PTR, CapSense_SCAN_CSD_SEQ_START_CFG);
 266              		.loc 1 2087 0
 267 00cc 124B     		ldr	r3, .L13+68
 268 00ce 1A60     		str	r2, [r3]
 269              	.LBE5:
 270              	.LBE4:
1597:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #else
 271              		.loc 1 1597 0
 272              		@ sp needed
 273 00d0 10BD     		pop	{r4, pc}
 274              	.L14:
 275 00d2 C046     		.align	2
 276              	.L13:
 277 00d4 00000000 		.word	CapSense_curRamSnsPtr
 278 00d8 00000000 		.word	CapSense_scanFreqIndex
 279 00dc 800E4301 		.word	21171840
 280 00e0 C0010B40 		.word	1074463168
 281 00e4 00000000 		.word	.LANCHOR0
 282 00e8 20100480 		.word	-2147217376
 283 00ec 00000B40 		.word	1074462720
 284 00f0 80010B40 		.word	1074463104
 285 00f4 80020B40 		.word	1074463360
 286 00f8 84020B40 		.word	1074463364
 287 00fc C0020B40 		.word	1074463424
 288 0100 88020B40 		.word	1074463368
 289 0104 01010100 		.word	65793
 290 0108 B0020B40 		.word	1074463408
 291 010c 10100000 		.word	4112
 292 0110 B4020B40 		.word	1074463412
 293 0114 03030000 		.word	771
 294 0118 40030B40 		.word	1074463552
 295 011c 00000000 		.word	CapSense_dsRam
 296 0120 006CDC02 		.word	48000000
 297 0124 001BB700 		.word	12000000
 298 0128 00366E01 		.word	24000000
 299 012c 00100C80 		.word	-2146693120
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 43


 300 0130 01030000 		.word	769
 301 0134 8C010B40 		.word	1074463116
 302 0138 F0000B40 		.word	1074462960
 303              		.cfi_endproc
 304              	.LFE10:
 305              		.size	CapSense_SsCSXStartSample, .-CapSense_SsCSXStartSample
 306              		.section	.text.CapSense_CSXScanISR,"ax",%progbits
 307              		.align	2
 308              		.global	CapSense_CSXScanISR
 309              		.code	16
 310              		.thumb_func
 311              		.type	CapSense_CSXScanISR, %function
 312              	CapSense_CSXScanISR:
 313              	.LFB17:
1945:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #if(0u != CapSense_CSX_NOISE_METRIC_EN)
 314              		.loc 1 1945 0
 315              		.cfi_startproc
 316              		@ args = 0, pretend = 0, frame = 0
 317              		@ frame_needed = 0, uses_anonymous_args = 0
 318 0000 10B5     		push	{r4, lr}
 319              		.cfi_def_cfa_offset 8
 320              		.cfi_offset 4, -8
 321              		.cfi_offset 14, -4
1953:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 322              		.loc 1 1953 0
 323 0002 0A20     		movs	r0, #10
 324 0004 FFF7FEFF 		bl	CyIntDisable
 325              	.LVL16:
1955:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 326              		.loc 1 1955 0
 327 0008 8322     		movs	r2, #131
 328 000a 5200     		lsls	r2, r2, #1
 329 000c 154B     		ldr	r3, .L18
 330 000e 1A60     		str	r2, [r3]
1957:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                                                          CapSense_RESULT_VAL1_VALUE_MASK);
 331              		.loc 1 1957 0
 332 0010 154B     		ldr	r3, .L18+4
 333 0012 1B68     		ldr	r3, [r3]
 334 0014 9BB2     		uxth	r3, r3
 335 0016 154A     		ldr	r2, .L18+8
 336 0018 5380     		strh	r3, [r2, #2]
1960:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                                                          CapSense_RESULT_VAL2_VALUE_MASK);
 337              		.loc 1 1960 0
 338 001a 154B     		ldr	r3, .L18+12
 339 001c 1B68     		ldr	r3, [r3]
 340 001e 9BB2     		uxth	r3, r3
 341 0020 5188     		ldrh	r1, [r2, #2]
 342 0022 CB18     		adds	r3, r1, r3
 343 0024 9BB2     		uxth	r3, r3
 344 0026 5380     		strh	r3, [r2, #2]
1964:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     {
 345              		.loc 1 1964 0
 346 0028 5188     		ldrh	r1, [r2, #2]
 347 002a 89B2     		uxth	r1, r1
 348 002c 1388     		ldrh	r3, [r2]
 349 002e 9BB2     		uxth	r3, r3
 350 0030 9942     		cmp	r1, r3
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 44


 351 0032 02D9     		bls	.L16
1966:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     }
 352              		.loc 1 1966 0
 353 0034 1388     		ldrh	r3, [r2]
 354 0036 9BB2     		uxth	r3, r3
 355 0038 5380     		strh	r3, [r2, #2]
 356              	.L16:
1983:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #endif /* (0u != CapSense_CSX_NOISE_METRIC_EN) */
 357              		.loc 1 1983 0
 358 003a 0E4B     		ldr	r3, .L18+16
 359 003c 1B68     		ldr	r3, [r3]
 360 003e 9847     		blx	r3
 361              	.LVL17:
1986:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     {
 362              		.loc 1 1986 0
 363 0040 0D4B     		ldr	r3, .L18+20
 364 0042 DB68     		ldr	r3, [r3, #12]
 365 0044 1B06     		lsls	r3, r3, #24
 366 0046 09D4     		bmi	.L17
1988:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_CSDCMP_PTR, CapSense_DEFAULT_CSD_CSDCMP_CFG);
 367              		.loc 1 1988 0
 368 0048 0C4A     		ldr	r2, .L18+24
 369 004a 0D4B     		ldr	r3, .L18+28
 370 004c 1A60     		str	r2, [r3]
1989:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_IDAC_MOD_PTR, CapSense_DEFAULT_CSD_IDACA_CFG);
 371              		.loc 1 1989 0
 372 004e C022     		movs	r2, #192
 373 0050 9200     		lsls	r2, r2, #2
 374 0052 0C4B     		ldr	r3, .L18+32
 375 0054 1A60     		str	r2, [r3]
1990:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     }
 376              		.loc 1 1990 0
 377 0056 0C4A     		ldr	r2, .L18+36
 378 0058 0C4B     		ldr	r3, .L18+40
 379 005a 1A60     		str	r2, [r3]
 380              	.L17:
1993:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** }
 381              		.loc 1 1993 0
 382 005c 0A20     		movs	r0, #10
 383 005e FFF7FEFF 		bl	CyIntEnable
 384              	.LVL18:
1994:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 385              		.loc 1 1994 0
 386              		@ sp needed
 387 0062 10BD     		pop	{r4, pc}
 388              	.L19:
 389              		.align	2
 390              	.L18:
 391 0064 F0000B40 		.word	1074462960
 392 0068 D0000B40 		.word	1074462928
 393 006c 00000000 		.word	.LANCHOR0
 394 0070 D4000B40 		.word	1074462932
 395 0074 00000000 		.word	.LANCHOR1
 396 0078 00000000 		.word	CapSense_dsRam
 397 007c 20100480 		.word	-2147217376
 398 0080 00000B40 		.word	1074462720
 399 0084 8C010B40 		.word	1074463116
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 45


 400 0088 800E4301 		.word	21171840
 401 008c C0010B40 		.word	1074463168
 402              		.cfi_endproc
 403              	.LFE17:
 404              		.size	CapSense_CSXScanISR, .-CapSense_CSXScanISR
 405              		.section	.text.CapSense_CSXInitialize,"ax",%progbits
 406              		.align	2
 407              		.global	CapSense_CSXInitialize
 408              		.code	16
 409              		.thumb_func
 410              		.type	CapSense_CSXInitialize, %function
 411              	CapSense_CSXInitialize:
 412              	.LFB1:
 149:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if(CapSense_ENABLE == CapSense_CSDV2)
 413              		.loc 1 149 0
 414              		.cfi_startproc
 415              		@ args = 0, pretend = 0, frame = 0
 416              		@ frame_needed = 0, uses_anonymous_args = 0
 417 0000 10B5     		push	{r4, lr}
 418              		.cfi_def_cfa_offset 8
 419              		.cfi_offset 4, -8
 420              		.cfi_offset 14, -4
 154:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_INTR_SET_PTR,         CapSense_DEFAULT_CSD_INTR_SET_CFG);
 421              		.loc 1 154 0
 422 0002 8322     		movs	r2, #131
 423 0004 5200     		lsls	r2, r2, #1
 424 0006 4A4B     		ldr	r3, .L21
 425 0008 1A60     		str	r2, [r3]
 155:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_INTR_MASK_PTR,        CapSense_DEFAULT_CSD_INTR_MASK_CFG);
 426              		.loc 1 155 0
 427 000a 0024     		movs	r4, #0
 428 000c 494B     		ldr	r3, .L21+4
 429 000e 1C60     		str	r4, [r3]
 156:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_HSCMP_PTR,            CapSense_DEFAULT_CSD_HSCMP_CFG);
 430              		.loc 1 156 0
 431 0010 053A     		subs	r2, r2, #5
 432 0012 FF3A     		subs	r2, r2, #255
 433 0014 484B     		ldr	r3, .L21+8
 434 0016 1A60     		str	r2, [r3]
 157:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_AMBUF_PTR,            CapSense_DEFAULT_CSD_AMBUF_CFG);
 435              		.loc 1 157 0
 436 0018 484B     		ldr	r3, .L21+12
 437 001a 1C60     		str	r4, [r3]
 158:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_REFGEN_PTR,           CapSense_DEFAULT_CSD_REFGEN_CFG);
 438              		.loc 1 158 0
 439 001c 484B     		ldr	r3, .L21+16
 440 001e 1C60     		str	r4, [r3]
 159:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_CSDCMP_PTR,           CapSense_DEFAULT_CSD_CSDCMP_CFG);
 441              		.loc 1 159 0
 442 0020 484A     		ldr	r2, .L21+20
 443 0022 494B     		ldr	r3, .L21+24
 444 0024 1A60     		str	r2, [r3]
 160:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_IDAC_MOD_PTR,         CapSense_DEFAULT_CSD_IDACA_CFG);
 445              		.loc 1 160 0
 446 0026 C022     		movs	r2, #192
 447 0028 9200     		lsls	r2, r2, #2
 448 002a 484B     		ldr	r3, .L21+28
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 46


 449 002c 1A60     		str	r2, [r3]
 161:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 450              		.loc 1 161 0
 451 002e 484A     		ldr	r2, .L21+32
 452 0030 484B     		ldr	r3, .L21+36
 453 0032 1A60     		str	r2, [r3]
 164:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #endif /* (0u != CapSense_ADC_EN) || (0u != CapSense_IDACB_USED) */
 454              		.loc 1 164 0
 455 0034 484B     		ldr	r3, .L21+40
 456 0036 1C60     		str	r4, [r3]
 167:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SENSE_PERIOD_PTR,     CapSense_DEFAULT_CSD_SENSE_PERIOD_CFG);
 457              		.loc 1 167 0
 458 0038 484A     		ldr	r2, .L21+44
 459 003a 494B     		ldr	r3, .L21+48
 460 003c 1A60     		str	r2, [r3]
 168:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SENSE_DUTY_PTR,       CapSense_DEFAULT_CSD_SENSE_DUTY_CFG);
 461              		.loc 1 168 0
 462 003e 5022     		movs	r2, #80
 463 0040 484B     		ldr	r3, .L21+52
 464 0042 1A60     		str	r2, [r3]
 169:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SW_HS_P_SEL_PTR,      CapSense_DEFAULT_CSD_SW_HS_P_SEL_CFG);
 465              		.loc 1 169 0
 466 0044 484B     		ldr	r3, .L21+56
 467 0046 1C60     		str	r4, [r3]
 170:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SW_HS_N_SEL_PTR,      CapSense_DEFAULT_CSD_SW_HS_N_SEL_CFG);
 468              		.loc 1 170 0
 469 0048 484B     		ldr	r3, .L21+60
 470 004a 1C60     		str	r4, [r3]
 171:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SW_SHIELD_SEL_PTR,    CapSense_DEFAULT_CSD_SW_SHIELD_SEL_CFG);
 471              		.loc 1 171 0
 472 004c 484B     		ldr	r3, .L21+64
 473 004e 1C60     		str	r4, [r3]
 172:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SW_AMUXBUF_SEL_PTR,   CapSense_DEFAULT_CSD_SW_AMUXBUF_SEL_CFG);
 474              		.loc 1 172 0
 475 0050 484B     		ldr	r3, .L21+68
 476 0052 1C60     		str	r4, [r3]
 173:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 477              		.loc 1 173 0
 478 0054 484B     		ldr	r3, .L21+72
 479 0056 1C60     		str	r4, [r3]
 175:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal = CY_GET_REG32(CapSense_SW_BYP_SEL_PTR);
 480              		.loc 1 175 0
 481 0058 FFF7FEFF 		bl	CyEnterCriticalSection
 482              	.LVL19:
 176:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal &= ~(CapSense_SW_BYP_SEL_SW_BYA_MASK);
 483              		.loc 1 176 0
 484 005c 474A     		ldr	r2, .L21+76
 485 005e 1168     		ldr	r1, [r2]
 486              	.LVL20:
 177:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal |= CapSense_DEFAULT_CSD_SW_BYP_SEL_CFG;
 487              		.loc 1 177 0
 488 0060 474B     		ldr	r3, .L21+80
 489 0062 0B40     		ands	r3, r1
 490              	.LVL21:
 178:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SW_BYP_SEL_PTR,       tmpRegVal);
 491              		.loc 1 178 0
 492 0064 8021     		movs	r1, #128
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 47


 493 0066 4901     		lsls	r1, r1, #5
 494 0068 0B43     		orrs	r3, r1
 495              	.LVL22:
 179:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CyExitCriticalSection(interruptState);
 496              		.loc 1 179 0
 497 006a 1360     		str	r3, [r2]
 180:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 498              		.loc 1 180 0
 499 006c FFF7FEFF 		bl	CyExitCriticalSection
 500              	.LVL23:
 182:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SW_CMP_N_SEL_PTR,     CapSense_DEFAULT_CSD_SW_CMP_N_SEL_CFG);
 501              		.loc 1 182 0
 502 0070 3222     		movs	r2, #50
 503 0072 444B     		ldr	r3, .L21+84
 504 0074 1A60     		str	r2, [r3]
 183:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 505              		.loc 1 183 0
 506 0076 8022     		movs	r2, #128
 507 0078 5204     		lsls	r2, r2, #17
 508 007a 434B     		ldr	r3, .L21+88
 509 007c 1A60     		str	r2, [r3]
 185:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal = CY_GET_REG32(CapSense_SW_REFGEN_SEL_PTR);
 510              		.loc 1 185 0
 511 007e FFF7FEFF 		bl	CyEnterCriticalSection
 512              	.LVL24:
 186:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal &= ~CapSense_SW_REFGEN_SEL_SW_MASK;
 513              		.loc 1 186 0
 514 0082 424A     		ldr	r2, .L21+92
 515 0084 1168     		ldr	r1, [r2]
 516              	.LVL25:
 187:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal |= CapSense_DEFAULT_CSD_SW_REFGEN_SEL_CFG;
 517              		.loc 1 187 0
 518 0086 424B     		ldr	r3, .L21+96
 519 0088 0B40     		ands	r3, r1
 520              	.LVL26:
 188:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SW_REFGEN_SEL_PTR,    tmpRegVal);
 521              		.loc 1 188 0
 522 008a 8021     		movs	r1, #128
 523 008c 4905     		lsls	r1, r1, #21
 524 008e 0B43     		orrs	r3, r1
 525              	.LVL27:
 189:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CyExitCriticalSection(interruptState);
 526              		.loc 1 189 0
 527 0090 1360     		str	r3, [r2]
 190:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 528              		.loc 1 190 0
 529 0092 FFF7FEFF 		bl	CyExitCriticalSection
 530              	.LVL28:
 192:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SW_FW_TANK_SEL_PTR,   CapSense_DEFAULT_CSD_SW_FW_TANK_SEL_CFG);
 531              		.loc 1 192 0
 532 0096 3F4B     		ldr	r3, .L21+100
 533 0098 1C60     		str	r4, [r3]
 193:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SW_DSI_SEL_PTR,       CapSense_DEFAULT_CSD_SW_DSI_SEL_CFG);
 534              		.loc 1 193 0
 535 009a 3F4B     		ldr	r3, .L21+104
 536 009c 1C60     		str	r4, [r3]
 194:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SEQ_TIME_PTR,         CapSense_DEFAULT_CSD_SEQ_TIME_CFG);
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 48


 537              		.loc 1 194 0
 538 009e 2322     		movs	r2, #35
 539 00a0 3E4B     		ldr	r3, .L21+108
 540 00a2 1A60     		str	r2, [r3]
 195:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SEQ_INIT_CNT_PTR,     CapSense_DEFAULT_CSD_SEQ_INIT_CNT_CFG);
 541              		.loc 1 195 0
 542 00a4 223A     		subs	r2, r2, #34
 543 00a6 3E4B     		ldr	r3, .L21+112
 544 00a8 1A60     		str	r2, [r3]
 196:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SEQ_NORM_CNT_PTR,     CapSense_DEFAULT_CSD_SEQ_NORM_CNT_CFG);
 545              		.loc 1 196 0
 546 00aa 0332     		adds	r2, r2, #3
 547 00ac 3D4B     		ldr	r3, .L21+116
 548 00ae 1A60     		str	r2, [r3]
 197:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_ADC_CTL_PTR,          CapSense_DEFAULT_CSD_ADC_CTL_CFG);
 549              		.loc 1 197 0
 550 00b0 3D4B     		ldr	r3, .L21+120
 551 00b2 1C60     		str	r4, [r3]
 198:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SEQ_START_PTR,        CapSense_DEFAULT_CSD_SEQ_START_CFG);
 552              		.loc 1 198 0
 553 00b4 3D4B     		ldr	r3, .L21+124
 554 00b6 1C60     		str	r4, [r3]
 199:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_CONFIG_PTR,           CapSense_DEFAULT_CSD_CONFIG_CFG);
 555              		.loc 1 199 0
 556 00b8 C222     		movs	r2, #194
 557 00ba 9200     		lsls	r2, r2, #2
 558 00bc 3C4B     		ldr	r3, .L21+128
 559 00be 1A60     		str	r2, [r3]
 200:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 560              		.loc 1 200 0
 561 00c0 3C4A     		ldr	r2, .L21+132
 562 00c2 3D4B     		ldr	r3, .L21+136
 563 00c4 1A60     		str	r2, [r3]
 202:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 564              		.loc 1 202 0
 565 00c6 FFF7FEFF 		bl	CapSense_BistDischargeExtCapacitors
 566              	.LVL29:
 204:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal = CY_GET_REG32(CapSense_CintA_PC_PTR);
 567              		.loc 1 204 0
 568 00ca FFF7FEFF 		bl	CyEnterCriticalSection
 569              	.LVL30:
 205:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal &= (~(CapSense_GPIO_PC_MASK << (CapSense_CintA_SHIFT * CapSense_GPIO_PC_BIT_SIZE)
 570              		.loc 1 205 0
 571 00ce 3B4C     		ldr	r4, .L21+140
 572 00d0 2268     		ldr	r2, [r4]
 573              	.LVL31:
 206:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_CintA_PC_PTR, tmpRegVal);
 574              		.loc 1 206 0
 575 00d2 3B4B     		ldr	r3, .L21+144
 576 00d4 1340     		ands	r3, r2
 577              	.LVL32:
 207:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CyExitCriticalSection(interruptState);
 578              		.loc 1 207 0
 579 00d6 2360     		str	r3, [r4]
 208:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 580              		.loc 1 208 0
 581 00d8 FFF7FEFF 		bl	CyExitCriticalSection
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 49


 582              	.LVL33:
 210:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal = CY_GET_REG32(CapSense_CintB_PC_PTR);
 583              		.loc 1 210 0
 584 00dc FFF7FEFF 		bl	CyEnterCriticalSection
 585              	.LVL34:
 211:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal &= (~(CapSense_GPIO_PC_MASK << (CapSense_CintB__SHIFT * CapSense_GPIO_PC_BIT_SIZE
 586              		.loc 1 211 0
 587 00e0 2268     		ldr	r2, [r4]
 588              	.LVL35:
 212:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_CintB_PC_PTR, tmpRegVal);
 589              		.loc 1 212 0
 590 00e2 384B     		ldr	r3, .L21+148
 591 00e4 1340     		ands	r3, r2
 592              	.LVL36:
 213:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CyExitCriticalSection(interruptState);
 593              		.loc 1 213 0
 594 00e6 2360     		str	r3, [r4]
 214:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 595              		.loc 1 214 0
 596 00e8 FFF7FEFF 		bl	CyExitCriticalSection
 597              	.LVL37:
 217:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal = CY_GET_REG32(CapSense_CintA_HSIOM_PTR);
 598              		.loc 1 217 0
 599 00ec FFF7FEFF 		bl	CyEnterCriticalSection
 600              	.LVL38:
 218:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal &= ~CapSense_CintA_HSIOM_MASK;
 601              		.loc 1 218 0
 602 00f0 354C     		ldr	r4, .L21+152
 603 00f2 2268     		ldr	r2, [r4]
 604              	.LVL39:
 219:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal |= (CapSense_HSIOM_SEL_AMUXA << CapSense_CintA_HSIOM_SHIFT);
 605              		.loc 1 219 0
 606 00f4 354B     		ldr	r3, .L21+156
 607 00f6 1340     		ands	r3, r2
 608              	.LVL40:
 220:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_CintA_HSIOM_PTR, tmpRegVal);
 609              		.loc 1 220 0
 610 00f8 C022     		movs	r2, #192
 611 00fa D200     		lsls	r2, r2, #3
 612 00fc 1343     		orrs	r3, r2
 613              	.LVL41:
 221:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CyExitCriticalSection(interruptState);
 614              		.loc 1 221 0
 615 00fe 2360     		str	r3, [r4]
 222:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 616              		.loc 1 222 0
 617 0100 FFF7FEFF 		bl	CyExitCriticalSection
 618              	.LVL42:
 225:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal = CY_GET_REG32(CapSense_CintB_HSIOM_PTR);
 619              		.loc 1 225 0
 620 0104 FFF7FEFF 		bl	CyEnterCriticalSection
 621              	.LVL43:
 226:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal &= ~CapSense_CintB_HSIOM_MASK;
 622              		.loc 1 226 0
 623 0108 2268     		ldr	r2, [r4]
 624              	.LVL44:
 227:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal |= (CapSense_HSIOM_SEL_AMUXA << CapSense_CintB_HSIOM_SHIFT);
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 50


 625              		.loc 1 227 0
 626 010a 314B     		ldr	r3, .L21+160
 627 010c 1340     		ands	r3, r2
 628              	.LVL45:
 228:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_CintB_HSIOM_PTR, tmpRegVal);
 629              		.loc 1 228 0
 630 010e C022     		movs	r2, #192
 631 0110 D201     		lsls	r2, r2, #7
 632 0112 1343     		orrs	r3, r2
 633              	.LVL46:
 229:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CyExitCriticalSection(interruptState);
 634              		.loc 1 229 0
 635 0114 2360     		str	r3, [r4]
 230:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 636              		.loc 1 230 0
 637 0116 FFF7FEFF 		bl	CyExitCriticalSection
 638              	.LVL47:
 232:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 639              		.loc 1 232 0
 640 011a 2E4B     		ldr	r3, .L21+164
 641 011c 587F     		ldrb	r0, [r3, #29]
 642 011e FFF7FEFF 		bl	CapSense_SsSetModClkClockDivider
 643              	.LVL48:
 239:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 644              		.loc 1 239 0
 645 0122 FFF7FEFF 		bl	CapSense_SsSetIOsInDefaultState
 646              	.LVL49:
 298:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** }
 647              		.loc 1 298 0
 648 0126 2C48     		ldr	r0, .L21+168
 649 0128 FFF7FEFF 		bl	CapSense_SsIsrInitialize
 650              	.LVL50:
 299:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 651              		.loc 1 299 0
 652              		@ sp needed
 653 012c 10BD     		pop	{r4, pc}
 654              	.L22:
 655 012e C046     		.align	2
 656              	.L21:
 657 0130 F0000B40 		.word	1074462960
 658 0134 F4000B40 		.word	1074462964
 659 0138 F8000B40 		.word	1074462968
 660 013c 80010B40 		.word	1074463104
 661 0140 84010B40 		.word	1074463108
 662 0144 411F0000 		.word	8001
 663 0148 88010B40 		.word	1074463112
 664 014c 8C010B40 		.word	1074463116
 665 0150 800E4301 		.word	21171840
 666 0154 C0010B40 		.word	1074463168
 667 0158 C4010B40 		.word	1074463172
 668 015c AA000500 		.word	327850
 669 0160 F0010B40 		.word	1074463216
 670 0164 00020B40 		.word	1074463232
 671 0168 04020B40 		.word	1074463236
 672 016c 80020B40 		.word	1074463360
 673 0170 84020B40 		.word	1074463364
 674 0174 88020B40 		.word	1074463368
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 51


 675 0178 90020B40 		.word	1074463376
 676 017c 94020B40 		.word	1074463380
 677 0180 FFEFFFFF 		.word	-4097
 678 0184 A0020B40 		.word	1074463392
 679 0188 A4020B40 		.word	1074463396
 680 018c A8020B40 		.word	1074463400
 681 0190 EEFFFEEE 		.word	-285278226
 682 0194 B0020B40 		.word	1074463408
 683 0198 B4020B40 		.word	1074463412
 684 019c C0020B40 		.word	1074463424
 685 01a0 00030B40 		.word	1074463488
 686 01a4 10030B40 		.word	1074463504
 687 01a8 14030B40 		.word	1074463508
 688 01ac 20030B40 		.word	1074463520
 689 01b0 40030B40 		.word	1074463552
 690 01b4 20100480 		.word	-2147217376
 691 01b8 00000B40 		.word	1074462720
 692 01bc 08040440 		.word	1074005000
 693 01c0 3FFEFFFF 		.word	-449
 694 01c4 FFF1FFFF 		.word	-3585
 695 01c8 00040240 		.word	1073873920
 696 01cc FFF0FFFF 		.word	-3841
 697 01d0 FF0FFFFF 		.word	-61441
 698 01d4 00000000 		.word	CapSense_dsRam
 699 01d8 00000000 		.word	CapSense_CSXScanISR
 700              		.cfi_endproc
 701              	.LFE1:
 702              		.size	CapSense_CSXInitialize, .-CapSense_CSXInitialize
 703              		.section	.text.CapSense_CSXScanExt,"ax",%progbits
 704              		.align	2
 705              		.global	CapSense_CSXScanExt
 706              		.code	16
 707              		.thumb_func
 708              		.type	CapSense_CSXScanExt, %function
 709              	CapSense_CSXScanExt:
 710              	.LFB6:
 871:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* Reset multi-frequency scan channel if enabled */
 711              		.loc 1 871 0
 712              		.cfi_startproc
 713              		@ args = 0, pretend = 0, frame = 0
 714              		@ frame_needed = 0, uses_anonymous_args = 0
 715 0000 10B5     		push	{r4, lr}
 716              		.cfi_def_cfa_offset 8
 717              		.cfi_offset 4, -8
 718              		.cfi_offset 14, -4
 892:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 719              		.loc 1 892 0
 720 0002 054A     		ldr	r2, .L24
 721 0004 D168     		ldr	r1, [r2, #12]
 722 0006 8023     		movs	r3, #128
 723 0008 0B43     		orrs	r3, r1
 724 000a D360     		str	r3, [r2, #12]
 897:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #endif
 725              		.loc 1 897 0
 726 000c 1720     		movs	r0, #23
 727 000e FFF7FEFF 		bl	CyDelayUs
 728              	.LVL51:
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 52


 899:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
 729              		.loc 1 899 0
 730 0012 FFF7FEFF 		bl	CapSense_SsCSXStartSample
 731              	.LVL52:
 901:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 732              		.loc 1 901 0
 733              		@ sp needed
 734 0016 10BD     		pop	{r4, pc}
 735              	.L25:
 736              		.align	2
 737              	.L24:
 738 0018 00000000 		.word	CapSense_dsRam
 739              		.cfi_endproc
 740              	.LFE6:
 741              		.size	CapSense_CSXScanExt, .-CapSense_CSXScanExt
 742              		.section	.text.CapSense_CSXCalibrateWidget,"ax",%progbits
 743              		.align	2
 744              		.global	CapSense_CSXCalibrateWidget
 745              		.code	16
 746              		.thumb_func
 747              		.type	CapSense_CSXCalibrateWidget, %function
 748              	CapSense_CSXCalibrateWidget:
 749              	.LFB9:
1459:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* Variable to calculate raw count target */
 750              		.loc 1 1459 0
 751              		.cfi_startproc
 752              		@ args = 0, pretend = 0, frame = 8
 753              		@ frame_needed = 0, uses_anonymous_args = 0
 754              	.LVL53:
 755 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 756              		.cfi_def_cfa_offset 20
 757              		.cfi_offset 4, -20
 758              		.cfi_offset 5, -16
 759              		.cfi_offset 6, -12
 760              		.cfi_offset 7, -8
 761              		.cfi_offset 14, -4
 762 0002 4F46     		mov	r7, r9
 763 0004 80B4     		push	{r7}
 764              		.cfi_def_cfa_offset 24
 765              		.cfi_offset 9, -24
 766 0006 82B0     		sub	sp, sp, #8
 767              		.cfi_def_cfa_offset 32
 768 0008 0190     		str	r0, [sp, #4]
 769 000a 0E00     		movs	r6, r1
 770              	.LVL54:
1473:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 771              		.loc 1 1473 0
 772 000c 2C24     		movs	r4, #44
 773 000e 4443     		muls	r4, r0
 774 0010 2A4B     		ldr	r3, .L36
 775 0012 1C19     		adds	r4, r3, r4
 776 0014 A368     		ldr	r3, [r4, #8]
 777 0016 9946     		mov	r9, r3
 778 0018 294B     		ldr	r3, .L36+4
 779 001a 4A46     		mov	r2, r9
 780 001c 1A60     		str	r2, [r3]
1477:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             (CapSense_RAM_WD_BASE_STRUCT *)CapSense_dsFlash.wdgtArray[widgetId].ptr2WdgtRam);
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 53


 781              		.loc 1 1477 0
 782 001e 6068     		ldr	r0, [r4, #4]
 783              	.LVL55:
 784 0020 FFF7FEFF 		bl	CapSense_SsCalcCsxScanPeriod
 785              	.LVL56:
 786 0024 274B     		ldr	r3, .L36+8
 787 0026 1880     		strh	r0, [r3]
1479:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         rawTarget = (rawTarget * target) / CapSense_PERCENTAGE_100;
 788              		.loc 1 1479 0
 789 0028 1888     		ldrh	r0, [r3]
 790              	.LVL57:
1480:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif /* (CapSense_DISABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
 791              		.loc 1 1480 0
 792 002a 7043     		muls	r0, r6
 793              	.LVL58:
 794 002c 6421     		movs	r1, #100
 795 002e FFF7FEFF 		bl	__aeabi_uidiv
 796              	.LVL59:
 797 0032 0700     		movs	r7, r0
 798              	.LVL60:
1484:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     {
 799              		.loc 1 1484 0
 800 0034 E37E     		ldrb	r3, [r4, #27]
1483:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****        CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[widgetId]))
 801              		.loc 1 1483 0
 802 0036 022B     		cmp	r3, #2
 803 0038 3CD1     		bne	.L26
1487:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     (uint32)CapSense_dsFlash.wdgtArray[widgetId].numRows);
 804              		.loc 1 1487 0
 805 003a 2A33     		adds	r3, r3, #42
 806 003c 019A     		ldr	r2, [sp, #4]
 807 003e 5343     		muls	r3, r2
 808 0040 1E4A     		ldr	r2, .L36
 809 0042 D318     		adds	r3, r2, r3
 810 0044 1A7F     		ldrb	r2, [r3, #28]
1488:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 811              		.loc 1 1488 0
 812 0046 5E7F     		ldrb	r6, [r3, #29]
1487:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     (uint32)CapSense_dsFlash.wdgtArray[widgetId].numRows);
 813              		.loc 1 1487 0
 814 0048 5643     		muls	r6, r2
 815              	.LVL61:
1491:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         {
 816              		.loc 1 1491 0
 817 004a 0021     		movs	r1, #0
 818 004c 09E0     		b	.L28
 819              	.LVL62:
 820              	.L29:
1493:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_curRamSnsPtr->idacComp[CapSense_FREQ_CHANNEL_0] = curIdacMask;
 821              		.loc 1 1493 0 discriminator 3
 822 004e 1C4A     		ldr	r2, .L36+4
 823 0050 0023     		movs	r3, #0
 824 0052 1068     		ldr	r0, [r2]
 825 0054 0380     		strh	r3, [r0]
1494:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
 826              		.loc 1 1494 0 discriminator 3
 827 0056 1368     		ldr	r3, [r2]
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 54


 828 0058 4020     		movs	r0, #64
 829 005a 5872     		strb	r0, [r3, #9]
1501:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         }
 830              		.loc 1 1501 0 discriminator 3
 831 005c 0A33     		adds	r3, r3, #10
 832 005e 1360     		str	r3, [r2]
1491:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         {
 833              		.loc 1 1491 0 discriminator 3
 834 0060 0131     		adds	r1, r1, #1
 835              	.LVL63:
 836              	.L28:
1491:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         {
 837              		.loc 1 1491 0 is_stmt 0 discriminator 1
 838 0062 B142     		cmp	r1, r6
 839 0064 F3D3     		bcc	.L29
 840 0066 2024     		movs	r4, #32
 841 0068 4025     		movs	r5, #64
 842 006a 00E0     		b	.L34
 843              	.LVL64:
 844              	.L35:
1555:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         }
 845              		.loc 1 1555 0 is_stmt 1
 846 006c 1C00     		movs	r4, r3
 847              	.LVL65:
 848              	.L34:
1508:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             (void)CapSense_Scan();
 849              		.loc 1 1508 0
 850 006e 0198     		ldr	r0, [sp, #4]
 851 0070 FFF7FEFF 		bl	CapSense_SetupWidget
 852              	.LVL66:
1509:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 853              		.loc 1 1509 0
 854 0074 FFF7FEFF 		bl	CapSense_Scan
 855              	.LVL67:
 856              	.L30:
1511:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             {
 857              		.loc 1 1511 0 discriminator 1
 858 0078 134B     		ldr	r3, .L36+12
 859 007a DB68     		ldr	r3, [r3, #12]
 860 007c 1B06     		lsls	r3, r3, #24
 861 007e FBD4     		bmi	.L30
1516:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 862              		.loc 1 1516 0
 863 0080 0F4B     		ldr	r3, .L36+4
 864 0082 4A46     		mov	r2, r9
 865 0084 1A60     		str	r2, [r3]
 866              	.LVL68:
1519:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             {
 867              		.loc 1 1519 0
 868 0086 0021     		movs	r1, #0
 869 0088 0EE0     		b	.L31
 870              	.LVL69:
 871              	.L33:
1530:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 {
 872              		.loc 1 1530 0
 873 008a 0D4B     		ldr	r3, .L36+4
 874 008c 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 55


 875 008e 1A88     		ldrh	r2, [r3]
 876 0090 9742     		cmp	r7, r2
 877 0092 02D2     		bcs	.L32
1532:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 }
 878              		.loc 1 1532 0
 879 0094 5A7A     		ldrb	r2, [r3, #9]
 880 0096 AA43     		bics	r2, r5
 881 0098 5A72     		strb	r2, [r3, #9]
 882              	.L32:
1534:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 883              		.loc 1 1534 0 discriminator 2
 884 009a 5A7A     		ldrb	r2, [r3, #9]
 885 009c 2243     		orrs	r2, r4
 886 009e 5A72     		strb	r2, [r3, #9]
1550:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             }
 887              		.loc 1 1550 0 discriminator 2
 888 00a0 0A33     		adds	r3, r3, #10
 889 00a2 074A     		ldr	r2, .L36+4
 890 00a4 1360     		str	r3, [r2]
1519:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             {
 891              		.loc 1 1519 0 discriminator 2
 892 00a6 0131     		adds	r1, r1, #1
 893              	.LVL70:
 894              	.L31:
1519:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             {
 895              		.loc 1 1519 0 is_stmt 0 discriminator 1
 896 00a8 B142     		cmp	r1, r6
 897 00aa EED3     		bcc	.L33
 898              	.LVL71:
1555:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         }
 899              		.loc 1 1555 0 is_stmt 1
 900 00ac 6308     		lsrs	r3, r4, #1
 901 00ae DBB2     		uxtb	r3, r3
 902              	.LVL72:
1554:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             nextIdacMask = nextIdacMask >> 1u;
 903              		.loc 1 1554 0
 904 00b0 251E     		subs	r5, r4, #0
1557:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     }
 905              		.loc 1 1557 0
 906 00b2 DBD1     		bne	.L35
 907              	.LVL73:
 908              	.L26:
1559:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 909              		.loc 1 1559 0
 910 00b4 02B0     		add	sp, sp, #8
 911              		@ sp needed
 912              	.LVL74:
 913 00b6 04BC     		pop	{r2}
 914 00b8 9146     		mov	r9, r2
 915 00ba F0BD     		pop	{r4, r5, r6, r7, pc}
 916              	.L37:
 917              		.align	2
 918              	.L36:
 919 00bc 00000000 		.word	CapSense_dsFlash
 920 00c0 00000000 		.word	CapSense_curRamSnsPtr
 921 00c4 00000000 		.word	.LANCHOR0
 922 00c8 00000000 		.word	CapSense_dsRam
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 56


 923              		.cfi_endproc
 924              	.LFE9:
 925              		.size	CapSense_CSXCalibrateWidget, .-CapSense_CSXCalibrateWidget
 926              		.section	.text.CapSense_CSXConnectTx,"ax",%progbits
 927              		.align	2
 928              		.global	CapSense_CSXConnectTx
 929              		.code	16
 930              		.thumb_func
 931              		.type	CapSense_CSXConnectTx, %function
 932              	CapSense_CSXConnectTx:
 933              	.LFB11:
1666:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     uint32 regValue;
 934              		.loc 1 1666 0
 935              		.cfi_startproc
 936              		@ args = 0, pretend = 0, frame = 0
 937              		@ frame_needed = 0, uses_anonymous_args = 0
 938              	.LVL75:
 939 0000 10B5     		push	{r4, lr}
 940              		.cfi_def_cfa_offset 8
 941              		.cfi_offset 4, -8
 942              		.cfi_offset 14, -4
1669:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     regValue |= (CapSense_GPIO_STRGDRV << txPtr->shift);
 943              		.loc 1 1669 0
 944 0002 4268     		ldr	r2, [r0, #4]
 945 0004 1168     		ldr	r1, [r2]
 946              	.LVL76:
1670:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32 (txPtr->pcPtr, regValue);
 947              		.loc 1 1670 0
 948 0006 847E     		ldrb	r4, [r0, #26]
 949 0008 0623     		movs	r3, #6
 950 000a A340     		lsls	r3, r3, r4
 951 000c 0B43     		orrs	r3, r1
 952              	.LVL77:
1671:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 953              		.loc 1 1671 0
 954 000e 1360     		str	r3, [r2]
1673:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     regValue |= (CapSense_HSIOM_SEL_CSD_SENSE << txPtr->hsiomShift);
 955              		.loc 1 1673 0
 956 0010 0268     		ldr	r2, [r0]
 957 0012 1168     		ldr	r1, [r2]
 958              	.LVL78:
1674:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32 (txPtr->hsiomPtr, regValue);
 959              		.loc 1 1674 0
 960 0014 007E     		ldrb	r0, [r0, #24]
 961              	.LVL79:
 962 0016 0423     		movs	r3, #4
 963 0018 8340     		lsls	r3, r3, r0
 964 001a 0B43     		orrs	r3, r1
 965              	.LVL80:
1675:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** }
 966              		.loc 1 1675 0
 967 001c 1360     		str	r3, [r2]
1676:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 968              		.loc 1 1676 0
 969              		@ sp needed
 970 001e 10BD     		pop	{r4, pc}
 971              		.cfi_endproc
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 57


 972              	.LFE11:
 973              		.size	CapSense_CSXConnectTx, .-CapSense_CSXConnectTx
 974              		.section	.text.CapSense_CSXConnectRx,"ax",%progbits
 975              		.align	2
 976              		.global	CapSense_CSXConnectRx
 977              		.code	16
 978              		.thumb_func
 979              		.type	CapSense_CSXConnectRx, %function
 980              	CapSense_CSXConnectRx:
 981              	.LFB12:
1700:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     uint32 regValue;
 982              		.loc 1 1700 0
 983              		.cfi_startproc
 984              		@ args = 0, pretend = 0, frame = 0
 985              		@ frame_needed = 0, uses_anonymous_args = 0
 986              	.LVL81:
 987 0000 10B5     		push	{r4, lr}
 988              		.cfi_def_cfa_offset 8
 989              		.cfi_offset 4, -8
 990              		.cfi_offset 14, -4
1703:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     regValue &= ~(CapSense_GPIO_PC_MASK << rxPtr->shift);
 991              		.loc 1 1703 0
 992 0002 4168     		ldr	r1, [r0, #4]
 993 0004 0B68     		ldr	r3, [r1]
 994              	.LVL82:
1704:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32 (rxPtr->pcPtr, regValue);
 995              		.loc 1 1704 0
 996 0006 847E     		ldrb	r4, [r0, #26]
 997 0008 0722     		movs	r2, #7
 998 000a A240     		lsls	r2, r2, r4
 999 000c 9343     		bics	r3, r2
 1000              	.LVL83:
1705:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1001              		.loc 1 1705 0
 1002 000e 0B60     		str	r3, [r1]
1707:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     regValue |=  (CapSense_HSIOM_SEL_AMUXA << rxPtr->hsiomShift);
 1003              		.loc 1 1707 0
 1004 0010 0268     		ldr	r2, [r0]
 1005 0012 1168     		ldr	r1, [r2]
 1006              	.LVL84:
1708:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32 (rxPtr->hsiomPtr, regValue);
 1007              		.loc 1 1708 0
 1008 0014 007E     		ldrb	r0, [r0, #24]
 1009              	.LVL85:
 1010 0016 0623     		movs	r3, #6
 1011 0018 8340     		lsls	r3, r3, r0
 1012 001a 0B43     		orrs	r3, r1
 1013              	.LVL86:
1709:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** }
 1014              		.loc 1 1709 0
 1015 001c 1360     		str	r3, [r2]
1710:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1016              		.loc 1 1710 0
 1017              		@ sp needed
 1018 001e 10BD     		pop	{r4, pc}
 1019              		.cfi_endproc
 1020              	.LFE12:
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 58


 1021              		.size	CapSense_CSXConnectRx, .-CapSense_CSXConnectRx
 1022              		.section	.text.CapSense_CSXScan,"ax",%progbits
 1023              		.align	2
 1024              		.global	CapSense_CSXScan
 1025              		.code	16
 1026              		.thumb_func
 1027              		.type	CapSense_CSXScan, %function
 1028              	CapSense_CSXScan:
 1029              	.LFB5:
 646:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if (CapSense_ENABLE == CapSense_CSX_GANGED_SNS_EN)
 1030              		.loc 1 646 0
 1031              		.cfi_startproc
 1032              		@ args = 0, pretend = 0, frame = 0
 1033              		@ frame_needed = 0, uses_anonymous_args = 0
 1034 0000 10B5     		push	{r4, lr}
 1035              		.cfi_def_cfa_offset 8
 1036              		.cfi_offset 4, -8
 1037              		.cfi_offset 14, -4
 655:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1038              		.loc 1 655 0
 1039 0002 0022     		movs	r2, #0
 1040 0004 124B     		ldr	r3, .L41
 1041 0006 1A70     		strb	r2, [r3]
 658:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1042              		.loc 1 658 0
 1043 0008 124B     		ldr	r3, .L41+4
 1044 000a 1B68     		ldr	r3, [r3]
 1045 000c 124A     		ldr	r2, .L41+8
 1046 000e 9968     		ldr	r1, [r3, #8]
 1047 0010 1160     		str	r1, [r2]
 746:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_curWdgtTotalRx  = CapSense_curFlashWdgtPtr->numCols;
 1048              		.loc 1 746 0
 1049 0012 5A7F     		ldrb	r2, [r3, #29]
 1050 0014 114C     		ldr	r4, .L41+12
 1051 0016 A280     		strh	r2, [r4, #4]
 747:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1052              		.loc 1 747 0
 1053 0018 1A7F     		ldrb	r2, [r3, #28]
 1054 001a E280     		strh	r2, [r4, #6]
 797:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_curTxIOPtr = CapSense_curRxIOPtr;
 1055              		.loc 1 797 0
 1056 001c 1968     		ldr	r1, [r3]
 1057 001e A160     		str	r1, [r4, #8]
 799:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1058              		.loc 1 799 0
 1059 0020 D300     		lsls	r3, r2, #3
 1060 0022 981A     		subs	r0, r3, r2
 1061 0024 8000     		lsls	r0, r0, #2
 1062 0026 0818     		adds	r0, r1, r0
 1063 0028 E060     		str	r0, [r4, #12]
 802:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_CSXConnectRx(CapSense_curRxIOPtr);
 1064              		.loc 1 802 0
 1065 002a FFF7FEFF 		bl	CapSense_CSXConnectTx
 1066              	.LVL87:
 803:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1067              		.loc 1 803 0
 1068 002e A068     		ldr	r0, [r4, #8]
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 59


 1069 0030 FFF7FEFF 		bl	CapSense_CSXConnectRx
 1070              	.LVL88:
 806:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             }
 1071              		.loc 1 806 0
 1072 0034 0A4A     		ldr	r2, .L41+16
 1073 0036 0B4B     		ldr	r3, .L41+20
 1074 0038 1A60     		str	r2, [r3]
 815:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1075              		.loc 1 815 0
 1076 003a 0B4A     		ldr	r2, .L41+24
 1077 003c D168     		ldr	r1, [r2, #12]
 1078 003e 8023     		movs	r3, #128
 1079 0040 0B43     		orrs	r3, r1
 1080 0042 D360     		str	r3, [r2, #12]
 820:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #endif
 1081              		.loc 1 820 0
 1082 0044 1720     		movs	r0, #23
 1083 0046 FFF7FEFF 		bl	CyDelayUs
 1084              	.LVL89:
 822:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1085              		.loc 1 822 0
 1086 004a FFF7FEFF 		bl	CapSense_SsCSXStartSample
 1087              	.LVL90:
 825:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1088              		.loc 1 825 0
 1089              		@ sp needed
 1090 004e 10BD     		pop	{r4, pc}
 1091              	.L42:
 1092              		.align	2
 1093              	.L41:
 1094 0050 00000000 		.word	CapSense_sensorIndex
 1095 0054 00000000 		.word	CapSense_curFlashWdgtPtr
 1096 0058 00000000 		.word	CapSense_curRamSnsPtr
 1097 005c 00000000 		.word	.LANCHOR0
 1098 0060 00000000 		.word	CapSense_SsCSXPostMultiScan
 1099 0064 00000000 		.word	.LANCHOR1
 1100 0068 00000000 		.word	CapSense_dsRam
 1101              		.cfi_endproc
 1102              	.LFE5:
 1103              		.size	CapSense_CSXScan, .-CapSense_CSXScan
 1104              		.section	.text.CapSense_CSXDisconnectTx,"ax",%progbits
 1105              		.align	2
 1106              		.global	CapSense_CSXDisconnectTx
 1107              		.code	16
 1108              		.thumb_func
 1109              		.type	CapSense_CSXDisconnectTx, %function
 1110              	CapSense_CSXDisconnectTx:
 1111              	.LFB13:
1735:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     uint32 regValue;
 1112              		.loc 1 1735 0
 1113              		.cfi_startproc
 1114              		@ args = 0, pretend = 0, frame = 0
 1115              		@ frame_needed = 0, uses_anonymous_args = 0
 1116              		@ link register save eliminated.
 1117              	.LVL91:
1738:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     regValue &= ~(txPtr->hsiomMask);
 1118              		.loc 1 1738 0
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 60


 1119 0000 0268     		ldr	r2, [r0]
 1120 0002 1368     		ldr	r3, [r2]
 1121              	.LVL92:
1739:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32 (txPtr->hsiomPtr, regValue);
 1122              		.loc 1 1739 0
 1123 0004 0169     		ldr	r1, [r0, #16]
 1124 0006 8B43     		bics	r3, r1
 1125              	.LVL93:
1740:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** }
 1126              		.loc 1 1740 0
 1127 0008 1360     		str	r3, [r2]
1741:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1128              		.loc 1 1741 0
 1129              		@ sp needed
 1130 000a 7047     		bx	lr
 1131              		.cfi_endproc
 1132              	.LFE13:
 1133              		.size	CapSense_CSXDisconnectTx, .-CapSense_CSXDisconnectTx
 1134              		.section	.text.CapSense_CSXDisconnectRx,"ax",%progbits
 1135              		.align	2
 1136              		.global	CapSense_CSXDisconnectRx
 1137              		.code	16
 1138              		.thumb_func
 1139              		.type	CapSense_CSXDisconnectRx, %function
 1140              	CapSense_CSXDisconnectRx:
 1141              	.LFB14:
1766:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     uint32 regValue;
 1142              		.loc 1 1766 0
 1143              		.cfi_startproc
 1144              		@ args = 0, pretend = 0, frame = 0
 1145              		@ frame_needed = 0, uses_anonymous_args = 0
 1146              	.LVL94:
 1147 0000 10B5     		push	{r4, lr}
 1148              		.cfi_def_cfa_offset 8
 1149              		.cfi_offset 4, -8
 1150              		.cfi_offset 14, -4
1769:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     regValue &= ~(rxPtr->hsiomMask);
 1151              		.loc 1 1769 0
 1152 0002 0268     		ldr	r2, [r0]
 1153 0004 1368     		ldr	r3, [r2]
 1154              	.LVL95:
1770:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32 (rxPtr->hsiomPtr, regValue);
 1155              		.loc 1 1770 0
 1156 0006 0169     		ldr	r1, [r0, #16]
 1157 0008 8B43     		bics	r3, r1
 1158              	.LVL96:
1771:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1159              		.loc 1 1771 0
 1160 000a 1360     		str	r3, [r2]
1773:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     regValue &= ~(CapSense_GPIO_PC_MASK << rxPtr->shift);
 1161              		.loc 1 1773 0
 1162 000c 4168     		ldr	r1, [r0, #4]
 1163 000e 0B68     		ldr	r3, [r1]
 1164              	.LVL97:
1774:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     regValue |=  (CapSense_GPIO_STRGDRV << rxPtr->shift);
 1165              		.loc 1 1774 0
 1166 0010 847E     		ldrb	r4, [r0, #26]
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 61


 1167 0012 0722     		movs	r2, #7
 1168 0014 A240     		lsls	r2, r2, r4
 1169 0016 9343     		bics	r3, r2
 1170              	.LVL98:
 1171 0018 1A00     		movs	r2, r3
 1172              	.LVL99:
1775:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32 (rxPtr->pcPtr, regValue);
 1173              		.loc 1 1775 0
 1174 001a 0623     		movs	r3, #6
 1175 001c A340     		lsls	r3, r3, r4
 1176 001e 1343     		orrs	r3, r2
 1177              	.LVL100:
1776:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1178              		.loc 1 1776 0
 1179 0020 0B60     		str	r3, [r1]
1778:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     regValue &=  ~(rxPtr->mask);
 1180              		.loc 1 1778 0
 1181 0022 8268     		ldr	r2, [r0, #8]
 1182 0024 1368     		ldr	r3, [r2]
 1183              	.LVL101:
1779:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32 (rxPtr->drPtr, regValue);
 1184              		.loc 1 1779 0
 1185 0026 4169     		ldr	r1, [r0, #20]
 1186 0028 8B43     		bics	r3, r1
 1187              	.LVL102:
1780:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** }
 1188              		.loc 1 1780 0
 1189 002a 1360     		str	r3, [r2]
1781:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1190              		.loc 1 1781 0
 1191              		@ sp needed
 1192 002c 10BD     		pop	{r4, pc}
 1193              		.cfi_endproc
 1194              	.LFE14:
 1195              		.size	CapSense_CSXDisconnectRx, .-CapSense_CSXDisconnectRx
 1196 002e C046     		.section	.text.CapSense_SsCSXPostMultiScan,"ax",%progbits
 1197              		.align	2
 1198              		.code	16
 1199              		.thumb_func
 1200              		.type	CapSense_SsCSXPostMultiScan, %function
 1201              	CapSense_SsCSXPostMultiScan:
 1202              	.LFB7:
 916:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #ifdef CapSense_ENTRY_CALLBACK
 1203              		.loc 1 916 0
 1204              		.cfi_startproc
 1205              		@ args = 0, pretend = 0, frame = 0
 1206              		@ frame_needed = 0, uses_anonymous_args = 0
 1207 0000 10B5     		push	{r4, lr}
 1208              		.cfi_def_cfa_offset 8
 1209              		.cfi_offset 4, -8
 1210              		.cfi_offset 14, -4
 922:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                              (CapSense_csxScanPeriod - CapSense_csxRawCount);
 1211              		.loc 1 922 0
 1212 0002 2F4B     		ldr	r3, .L50
 1213 0004 1968     		ldr	r1, [r3]
 1214 0006 2F4B     		ldr	r3, .L50+4
 1215 0008 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 62


 1216 000a 2F4C     		ldr	r4, .L50+8
 1217 000c 2288     		ldrh	r2, [r4]
 1218 000e 6088     		ldrh	r0, [r4, #2]
 1219 0010 5B00     		lsls	r3, r3, #1
 1220 0012 121A     		subs	r2, r2, r0
 1221 0014 5A52     		strh	r2, [r3, r1]
1014:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1222              		.loc 1 1014 0
 1223 0016 E068     		ldr	r0, [r4, #12]
 1224 0018 FFF7FEFF 		bl	CapSense_CSXDisconnectTx
 1225              	.LVL103:
1017:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1226              		.loc 1 1017 0
 1227 001c 2B4A     		ldr	r2, .L50+12
 1228 001e 1378     		ldrb	r3, [r2]
 1229 0020 0133     		adds	r3, r3, #1
 1230 0022 DBB2     		uxtb	r3, r3
 1231 0024 1370     		strb	r3, [r2]
1023:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 if (CapSense_curWdgtTotalTx > 0u)
 1232              		.loc 1 1023 0
 1233 0026 A388     		ldrh	r3, [r4, #4]
 1234 0028 013B     		subs	r3, r3, #1
 1235 002a 9BB2     		uxth	r3, r3
 1236 002c A380     		strh	r3, [r4, #4]
1024:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 {
 1237              		.loc 1 1024 0
 1238 002e 002B     		cmp	r3, #0
 1239 0030 0CD0     		beq	.L46
1031:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_CSXConnectTx (CapSense_curTxIOPtr);
 1240              		.loc 1 1031 0
 1241 0032 254B     		ldr	r3, .L50+8
 1242 0034 D868     		ldr	r0, [r3, #12]
 1243 0036 1C30     		adds	r0, r0, #28
 1244 0038 D860     		str	r0, [r3, #12]
1032:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_curRamSnsPtr++;
 1245              		.loc 1 1032 0
 1246 003a FFF7FEFF 		bl	CapSense_CSXConnectTx
 1247              	.LVL104:
1033:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1248              		.loc 1 1033 0
 1249 003e 204A     		ldr	r2, .L50
 1250 0040 1368     		ldr	r3, [r2]
 1251 0042 0A33     		adds	r3, r3, #10
 1252 0044 1360     		str	r3, [r2]
1036:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 }
 1253              		.loc 1 1036 0
 1254 0046 FFF7FEFF 		bl	CapSense_SsCSXStartSample
 1255              	.LVL105:
 1256 004a 37E0     		b	.L45
 1257              	.L46:
1042:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     if (CapSense_curWdgtTotalRx > 0u)
 1258              		.loc 1 1042 0
 1259 004c 1E4A     		ldr	r2, .L50+8
 1260 004e D388     		ldrh	r3, [r2, #6]
 1261 0050 013B     		subs	r3, r3, #1
 1262 0052 9BB2     		uxth	r3, r3
 1263 0054 D380     		strh	r3, [r2, #6]
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 63


1043:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     {
 1264              		.loc 1 1043 0
 1265 0056 002B     		cmp	r3, #0
 1266 0058 1DD0     		beq	.L48
1052:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_curRxIOPtr++;
 1267              		.loc 1 1052 0
 1268 005a 1400     		movs	r4, r2
 1269 005c 9068     		ldr	r0, [r2, #8]
 1270 005e FFF7FEFF 		bl	CapSense_CSXDisconnectRx
 1271              	.LVL106:
1053:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_CSXConnectRx(CapSense_curRxIOPtr);
 1272              		.loc 1 1053 0
 1273 0062 A068     		ldr	r0, [r4, #8]
 1274 0064 1C30     		adds	r0, r0, #28
 1275 0066 A060     		str	r0, [r4, #8]
1054:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_curWdgtTotalTx  = CapSense_curFlashWdgtPtr->numRows;
 1276              		.loc 1 1054 0
 1277 0068 FFF7FEFF 		bl	CapSense_CSXConnectRx
 1278              	.LVL107:
1055:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_curTxIOPtr = (CapSense_FLASH_IO_STRUCT const *)CapSense_curFlashWd
 1279              		.loc 1 1055 0
 1280 006c 184B     		ldr	r3, .L50+16
 1281 006e 1B68     		ldr	r3, [r3]
 1282 0070 5A7F     		ldrb	r2, [r3, #29]
 1283 0072 A280     		strh	r2, [r4, #4]
1056:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_curTxIOPtr = & CapSense_curTxIOPtr[(CapSense_curFlashWdgtPtr->numC
 1284              		.loc 1 1056 0
 1285 0074 1868     		ldr	r0, [r3]
 1286 0076 E060     		str	r0, [r4, #12]
1057:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_CSXConnectTx(CapSense_curTxIOPtr);
 1287              		.loc 1 1057 0
 1288 0078 1A7F     		ldrb	r2, [r3, #28]
 1289 007a D300     		lsls	r3, r2, #3
 1290 007c 9A1A     		subs	r2, r3, r2
 1291 007e 9300     		lsls	r3, r2, #2
 1292 0080 C018     		adds	r0, r0, r3
 1293 0082 E060     		str	r0, [r4, #12]
1058:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1294              		.loc 1 1058 0
 1295 0084 FFF7FEFF 		bl	CapSense_CSXConnectTx
 1296              	.LVL108:
1061:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1297              		.loc 1 1061 0
 1298 0088 0D4A     		ldr	r2, .L50
 1299 008a 1368     		ldr	r3, [r2]
 1300 008c 0A33     		adds	r3, r3, #10
 1301 008e 1360     		str	r3, [r2]
1064:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     }
 1302              		.loc 1 1064 0
 1303 0090 FFF7FEFF 		bl	CapSense_SsCSXStartSample
 1304              	.LVL109:
 1305 0094 12E0     		b	.L45
 1306              	.L48:
1069:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1307              		.loc 1 1069 0
 1308 0096 0C4B     		ldr	r3, .L50+8
 1309 0098 9868     		ldr	r0, [r3, #8]
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 64


 1310 009a FFF7FEFF 		bl	CapSense_CSXDisconnectRx
 1311              	.LVL110:
1072:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         {
 1312              		.loc 1 1072 0
 1313 009e 0D4B     		ldr	r3, .L50+20
 1314 00a0 1B78     		ldrb	r3, [r3]
 1315 00a2 002B     		cmp	r3, #0
 1316 00a4 02D0     		beq	.L49
1074:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         }
 1317              		.loc 1 1074 0
 1318 00a6 FFF7FEFF 		bl	CapSense_SsPostAllWidgetsScan
 1319              	.LVL111:
 1320 00aa 07E0     		b	.L45
 1321              	.L49:
1083:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             CapSense_dsRam.status &= ~CapSense_SW_STS_BUSY;
 1322              		.loc 1 1083 0
 1323 00ac 0A4B     		ldr	r3, .L50+24
 1324 00ae 1A89     		ldrh	r2, [r3, #8]
 1325 00b0 0132     		adds	r2, r2, #1
 1326 00b2 1A81     		strh	r2, [r3, #8]
1084:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         }
 1327              		.loc 1 1084 0
 1328 00b4 DA68     		ldr	r2, [r3, #12]
 1329 00b6 8021     		movs	r1, #128
 1330 00b8 8A43     		bics	r2, r1
 1331 00ba DA60     		str	r2, [r3, #12]
 1332              	.L45:
1094:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1333              		.loc 1 1094 0
 1334              		@ sp needed
 1335 00bc 10BD     		pop	{r4, pc}
 1336              	.L51:
 1337 00be C046     		.align	2
 1338              	.L50:
 1339 00c0 00000000 		.word	CapSense_curRamSnsPtr
 1340 00c4 00000000 		.word	CapSense_scanFreqIndex
 1341 00c8 00000000 		.word	.LANCHOR0
 1342 00cc 00000000 		.word	CapSense_sensorIndex
 1343 00d0 00000000 		.word	CapSense_curFlashWdgtPtr
 1344 00d4 00000000 		.word	CapSense_requestScanAllWidget
 1345 00d8 00000000 		.word	CapSense_dsRam
 1346              		.cfi_endproc
 1347              	.LFE7:
 1348              		.size	CapSense_SsCSXPostMultiScan, .-CapSense_SsCSXPostMultiScan
 1349              		.section	.text.CapSense_CSXElectrodeCheck,"ax",%progbits
 1350              		.align	2
 1351              		.global	CapSense_CSXElectrodeCheck
 1352              		.code	16
 1353              		.thumb_func
 1354              		.type	CapSense_CSXElectrodeCheck, %function
 1355              	CapSense_CSXElectrodeCheck:
 1356              	.LFB2:
 316:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if (CapSense_ENABLE == CapSense_CSX_GANGED_SNS_EN)
 1357              		.loc 1 316 0
 1358              		.cfi_startproc
 1359              		@ args = 0, pretend = 0, frame = 0
 1360              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 65


 1361 0000 10B5     		push	{r4, lr}
 1362              		.cfi_def_cfa_offset 8
 1363              		.cfi_offset 4, -8
 1364              		.cfi_offset 14, -4
 321:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     {
 1365              		.loc 1 321 0
 1366 0002 074B     		ldr	r3, .L54
 1367 0004 1B8A     		ldrh	r3, [r3, #16]
 1368 0006 002B     		cmp	r3, #0
 1369 0008 08D0     		beq	.L52
 360:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_CSXDisconnectRx(CapSense_curRxIOPtr);
 1370              		.loc 1 360 0
 1371 000a 054C     		ldr	r4, .L54
 1372 000c E068     		ldr	r0, [r4, #12]
 1373 000e FFF7FEFF 		bl	CapSense_CSXDisconnectTx
 1374              	.LVL112:
 361:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #endif
 1375              		.loc 1 361 0
 1376 0012 A068     		ldr	r0, [r4, #8]
 1377 0014 FFF7FEFF 		bl	CapSense_CSXDisconnectRx
 1378              	.LVL113:
 363:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     }
 1379              		.loc 1 363 0
 1380 0018 0023     		movs	r3, #0
 1381 001a 2382     		strh	r3, [r4, #16]
 1382              	.L52:
 365:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1383              		.loc 1 365 0
 1384              		@ sp needed
 1385 001c 10BD     		pop	{r4, pc}
 1386              	.L55:
 1387 001e C046     		.align	2
 1388              	.L54:
 1389 0020 00000000 		.word	.LANCHOR0
 1390              		.cfi_endproc
 1391              	.LFE2:
 1392              		.size	CapSense_CSXElectrodeCheck, .-CapSense_CSXElectrodeCheck
 1393              		.section	.text.CapSense_CSXSetupWidget,"ax",%progbits
 1394              		.align	2
 1395              		.global	CapSense_CSXSetupWidget
 1396              		.code	16
 1397              		.thumb_func
 1398              		.type	CapSense_CSXSetupWidget, %function
 1399              	CapSense_CSXSetupWidget:
 1400              	.LFB3:
 407:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* variable to access widget details */
 1401              		.loc 1 407 0
 1402              		.cfi_startproc
 1403              		@ args = 0, pretend = 0, frame = 0
 1404              		@ frame_needed = 0, uses_anonymous_args = 0
 1405              	.LVL114:
 1406 0000 70B5     		push	{r4, r5, r6, lr}
 1407              		.cfi_def_cfa_offset 16
 1408              		.cfi_offset 4, -16
 1409              		.cfi_offset 5, -12
 1410              		.cfi_offset 6, -8
 1411              		.cfi_offset 14, -4
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 66


 1412 0002 0400     		movs	r4, r0
 417:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1413              		.loc 1 417 0
 1414 0004 C2B2     		uxtb	r2, r0
 1415 0006 124B     		ldr	r3, .L57
 1416 0008 1A70     		strb	r2, [r3]
 419:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1417              		.loc 1 419 0
 1418 000a 0220     		movs	r0, #2
 1419              	.LVL115:
 1420 000c FFF7FEFF 		bl	CapSense_SsSwitchSensingMode
 1421              	.LVL116:
 425:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1422              		.loc 1 425 0
 1423 0010 FFF7FEFF 		bl	CapSense_CSXElectrodeCheck
 1424              	.LVL117:
 429:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1425              		.loc 1 429 0
 1426 0014 2C20     		movs	r0, #44
 1427 0016 6043     		muls	r0, r4
 1428 0018 0E4B     		ldr	r3, .L57+4
 1429 001a C018     		adds	r0, r0, r3
 1430 001c 0E4B     		ldr	r3, .L57+8
 1431 001e 1860     		str	r0, [r3]
 431:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1432              		.loc 1 431 0
 1433 0020 4568     		ldr	r5, [r0, #4]
 1434              	.LVL118:
 436:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_CSX_COMMON_TX_CLK_EN) */
 1435              		.loc 1 436 0
 1436 0022 6C89     		ldrh	r4, [r5, #10]
 1437              	.LVL119:
 439:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_csxScanPeriod  = CapSense_SsCalcCsxScanPeriod(curRamWdgtBasePtr);
 1438              		.loc 1 439 0
 1439 0024 2A88     		ldrh	r2, [r5]
 1440 0026 0D4B     		ldr	r3, .L57+12
 1441 0028 1A60     		str	r2, [r3]
 440:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1442              		.loc 1 440 0
 1443 002a 2800     		movs	r0, r5
 1444 002c FFF7FEFF 		bl	CapSense_SsCalcCsxScanPeriod
 1445              	.LVL120:
 1446 0030 0B4B     		ldr	r3, .L57+16
 1447 0032 1880     		strh	r0, [r3]
 442:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1448              		.loc 1 442 0
 1449 0034 2B7B     		ldrb	r3, [r5, #12]
 1450              	.LVL121:
 444:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal = (tmpRegVal << CapSense_SENSE_PERIOD_LFSR_SIZE_SHIFT) | snsClkVal;
 1451              		.loc 1 444 0
 1452 0036 013C     		subs	r4, r4, #1
 1453              	.LVL122:
 1454 0038 2405     		lsls	r4, r4, #20
 1455              	.LVL123:
 1456 003a 240D     		lsrs	r4, r4, #20
 1457              	.LVL124:
 445:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SENSE_PERIOD_PTR, tmpRegVal);
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 67


 1458              		.loc 1 445 0
 1459 003c 1B04     		lsls	r3, r3, #16
 1460              	.LVL125:
 1461 003e 1C43     		orrs	r4, r3
 1462              	.LVL126:
 446:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_SsSetModClkClockDivider((uint32)CapSense_dsRam.modCsxClk);
 1463              		.loc 1 446 0
 1464 0040 084B     		ldr	r3, .L57+20
 1465 0042 1C60     		str	r4, [r3]
 447:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #else
 1466              		.loc 1 447 0
 1467 0044 084B     		ldr	r3, .L57+24
 1468 0046 587F     		ldrb	r0, [r3, #29]
 1469 0048 FFF7FEFF 		bl	CapSense_SsSetModClkClockDivider
 1470              	.LVL127:
 476:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1471              		.loc 1 476 0
 1472              		@ sp needed
 1473              	.LVL128:
 1474              	.LVL129:
 1475 004c 70BD     		pop	{r4, r5, r6, pc}
 1476              	.L58:
 1477 004e C046     		.align	2
 1478              	.L57:
 1479 0050 00000000 		.word	CapSense_widgetIndex
 1480 0054 00000000 		.word	CapSense_dsFlash
 1481 0058 00000000 		.word	CapSense_curFlashWdgtPtr
 1482 005c 14030B40 		.word	1074463508
 1483 0060 00000000 		.word	.LANCHOR0
 1484 0064 00020B40 		.word	1074463232
 1485 0068 00000000 		.word	CapSense_dsRam
 1486              		.cfi_endproc
 1487              	.LFE3:
 1488              		.size	CapSense_CSXSetupWidget, .-CapSense_CSXSetupWidget
 1489              		.global	__aeabi_uidivmod
 1490              		.section	.text.CapSense_CSXSetupWidgetExt,"ax",%progbits
 1491              		.align	2
 1492              		.global	CapSense_CSXSetupWidgetExt
 1493              		.code	16
 1494              		.thumb_func
 1495              		.type	CapSense_CSXSetupWidgetExt, %function
 1496              	CapSense_CSXSetupWidgetExt:
 1497              	.LFB4:
 517:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     uint32 txIndex;
 1498              		.loc 1 517 0
 1499              		.cfi_startproc
 1500              		@ args = 0, pretend = 0, frame = 0
 1501              		@ frame_needed = 0, uses_anonymous_args = 0
 1502              	.LVL130:
 1503 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1504              		.cfi_def_cfa_offset 24
 1505              		.cfi_offset 3, -24
 1506              		.cfi_offset 4, -20
 1507              		.cfi_offset 5, -16
 1508              		.cfi_offset 6, -12
 1509              		.cfi_offset 7, -8
 1510              		.cfi_offset 14, -4
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 68


 1511 0002 0C00     		movs	r4, r1
 526:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CapSense_sensorIndex = (uint8)sensorId;
 1512              		.loc 1 526 0
 1513 0004 FFF7FEFF 		bl	CapSense_CSXSetupWidget
 1514              	.LVL131:
 527:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1515              		.loc 1 527 0
 1516 0008 E2B2     		uxtb	r2, r4
 1517 000a 184B     		ldr	r3, .L60
 1518 000c 1A70     		strb	r2, [r3]
 530:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CapSense_curRamSnsPtr = &CapSense_curRamSnsPtr[sensorId];
 1519              		.loc 1 530 0
 1520 000e 184B     		ldr	r3, .L60+4
 1521 0010 1D68     		ldr	r5, [r3]
 531:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1522              		.loc 1 531 0
 1523 0012 A300     		lsls	r3, r4, #2
 1524 0014 1B19     		adds	r3, r3, r4
 1525 0016 5B00     		lsls	r3, r3, #1
 1526 0018 AA68     		ldr	r2, [r5, #8]
 1527 001a 9446     		mov	ip, r2
 1528 001c 6344     		add	r3, r3, ip
 1529 001e 154A     		ldr	r2, .L60+8
 1530 0020 1360     		str	r3, [r2]
 543:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     txIndex = sensorId % CapSense_curFlashWdgtPtr->numRows;
 1531              		.loc 1 543 0
 1532 0022 6F7F     		ldrb	r7, [r5, #29]
 1533 0024 3900     		movs	r1, r7
 1534 0026 2000     		movs	r0, r4
 1535 0028 FFF7FEFF 		bl	__aeabi_uidiv
 1536              	.LVL132:
 1537 002c 0600     		movs	r6, r0
 1538              	.LVL133:
 544:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1539              		.loc 1 544 0
 1540 002e 3900     		movs	r1, r7
 1541 0030 2000     		movs	r0, r4
 1542              	.LVL134:
 1543 0032 FFF7FEFF 		bl	__aeabi_uidivmod
 1544              	.LVL135:
 596:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_curRxIOPtr = &CapSense_curRxIOPtr[rxIndex];
 1545              		.loc 1 596 0
 1546 0036 2A68     		ldr	r2, [r5]
 1547 0038 0F4C     		ldr	r4, .L60+12
 1548              	.LVL136:
 597:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1549              		.loc 1 597 0
 1550 003a F300     		lsls	r3, r6, #3
 1551 003c 9B1B     		subs	r3, r3, r6
 1552 003e 9B00     		lsls	r3, r3, #2
 1553 0040 D318     		adds	r3, r2, r3
 1554 0042 A360     		str	r3, [r4, #8]
 599:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_curTxIOPtr = &CapSense_curTxIOPtr[(CapSense_curFlashWdgtPtr->numCols + txIndex
 1555              		.loc 1 599 0
 1556 0044 E260     		str	r2, [r4, #12]
 600:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1557              		.loc 1 600 0
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 69


 1558 0046 287F     		ldrb	r0, [r5, #28]
 1559 0048 4118     		adds	r1, r0, r1
 1560              	.LVL137:
 1561 004a CB00     		lsls	r3, r1, #3
 1562 004c 581A     		subs	r0, r3, r1
 1563 004e 8000     		lsls	r0, r0, #2
 1564 0050 1018     		adds	r0, r2, r0
 1565 0052 E060     		str	r0, [r4, #12]
 603:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_CSXConnectRx(CapSense_curRxIOPtr);
 1566              		.loc 1 603 0
 1567 0054 FFF7FEFF 		bl	CapSense_CSXConnectTx
 1568              	.LVL138:
 604:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_eleCsxDisconnectFlag = CapSense_DISCONNECT_IO_FLAG;
 1569              		.loc 1 604 0
 1570 0058 A068     		ldr	r0, [r4, #8]
 1571 005a FFF7FEFF 		bl	CapSense_CSXConnectRx
 1572              	.LVL139:
 605:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1573              		.loc 1 605 0
 1574 005e 0123     		movs	r3, #1
 1575 0060 2382     		strh	r3, [r4, #16]
 608:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         }
 1576              		.loc 1 608 0
 1577 0062 064A     		ldr	r2, .L60+16
 1578 0064 064B     		ldr	r3, .L60+20
 1579 0066 1A60     		str	r2, [r3]
 613:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1580              		.loc 1 613 0
 1581              		@ sp needed
 1582              	.LVL140:
 1583 0068 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1584              	.L61:
 1585 006a C046     		.align	2
 1586              	.L60:
 1587 006c 00000000 		.word	CapSense_sensorIndex
 1588 0070 00000000 		.word	CapSense_curFlashWdgtPtr
 1589 0074 00000000 		.word	CapSense_curRamSnsPtr
 1590 0078 00000000 		.word	.LANCHOR0
 1591 007c 00000000 		.word	CapSense_SsCSXPostSingleScan
 1592 0080 00000000 		.word	.LANCHOR1
 1593              		.cfi_endproc
 1594              	.LFE4:
 1595              		.size	CapSense_CSXSetupWidgetExt, .-CapSense_CSXSetupWidgetExt
 1596              		.section	.text.CapSense_SsCSXGetTxClkDivider,"ax",%progbits
 1597              		.align	2
 1598              		.global	CapSense_SsCSXGetTxClkDivider
 1599              		.code	16
 1600              		.thumb_func
 1601              		.type	CapSense_SsCSXGetTxClkDivider, %function
 1602              	CapSense_SsCSXGetTxClkDivider:
 1603              	.LFB15:
1805:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     uint32 retVal;
 1604              		.loc 1 1805 0
 1605              		.cfi_startproc
 1606              		@ args = 0, pretend = 0, frame = 0
 1607              		@ frame_needed = 0, uses_anonymous_args = 0
 1608              		@ link register save eliminated.
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 70


 1609              	.LVL141:
1812:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
 1610              		.loc 1 1812 0
 1611 0000 2C23     		movs	r3, #44
 1612 0002 5843     		muls	r0, r3
 1613              	.LVL142:
 1614 0004 024B     		ldr	r3, .L63
 1615 0006 1818     		adds	r0, r3, r0
 1616 0008 4368     		ldr	r3, [r0, #4]
 1617              	.LVL143:
1815:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #else
 1618              		.loc 1 1815 0
 1619 000a 5889     		ldrh	r0, [r3, #10]
 1620              	.LVL144:
1826:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1621              		.loc 1 1826 0
 1622              		@ sp needed
 1623 000c 7047     		bx	lr
 1624              	.L64:
 1625 000e C046     		.align	2
 1626              	.L63:
 1627 0010 00000000 		.word	CapSense_dsFlash
 1628              		.cfi_endproc
 1629              	.LFE15:
 1630              		.size	CapSense_SsCSXGetTxClkDivider, .-CapSense_SsCSXGetTxClkDivider
 1631              		.global	CapSense_CSXPostScanApiPtr
 1632              		.global	CapSense_csxRawCount
 1633              		.global	CapSense_csxScanPeriod
 1634              		.data
 1635              		.align	2
 1636              		.set	.LANCHOR1,. + 0
 1637              		.type	CapSense_CSXPostScanApiPtr, %object
 1638              		.size	CapSense_CSXPostScanApiPtr, 4
 1639              	CapSense_CSXPostScanApiPtr:
 1640 0000 00000000 		.word	CapSense_SsCSXPostMultiScan
 1641              		.bss
 1642              		.align	2
 1643              		.set	.LANCHOR0,. + 0
 1644              		.type	CapSense_csxScanPeriod, %object
 1645              		.size	CapSense_csxScanPeriod, 2
 1646              	CapSense_csxScanPeriod:
 1647 0000 0000     		.space	2
 1648              		.type	CapSense_csxRawCount, %object
 1649              		.size	CapSense_csxRawCount, 2
 1650              	CapSense_csxRawCount:
 1651 0002 0000     		.space	2
 1652              		.type	CapSense_curWdgtTotalTx, %object
 1653              		.size	CapSense_curWdgtTotalTx, 2
 1654              	CapSense_curWdgtTotalTx:
 1655 0004 0000     		.space	2
 1656              		.type	CapSense_curWdgtTotalRx, %object
 1657              		.size	CapSense_curWdgtTotalRx, 2
 1658              	CapSense_curWdgtTotalRx:
 1659 0006 0000     		.space	2
 1660              		.type	CapSense_curRxIOPtr, %object
 1661              		.size	CapSense_curRxIOPtr, 4
 1662              	CapSense_curRxIOPtr:
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 71


 1663 0008 00000000 		.space	4
 1664              		.type	CapSense_curTxIOPtr, %object
 1665              		.size	CapSense_curTxIOPtr, 4
 1666              	CapSense_curTxIOPtr:
 1667 000c 00000000 		.space	4
 1668              		.type	CapSense_eleCsxDisconnectFlag, %object
 1669              		.size	CapSense_eleCsxDisconnectFlag, 2
 1670              	CapSense_eleCsxDisconnectFlag:
 1671 0010 0000     		.space	2
 1672              		.text
 1673              	.Letext0:
 1674              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 1675              		.file 3 "Generated_Source\\PSoC4\\CapSense_Configuration.h"
 1676              		.file 4 "Generated_Source\\PSoC4\\CapSense_SmartSense_LL.h"
 1677              		.file 5 "Generated_Source\\PSoC4\\CapSense_Structure.h"
 1678              		.file 6 "Generated_Source\\PSoC4\\CapSense_Sensing.h"
 1679              		.file 7 "Generated_Source\\PSoC4\\CyLib.h"
 1680              		.section	.debug_info,"",%progbits
 1681              	.Ldebug_info0:
 1682 0000 F40E0000 		.4byte	0xef4
 1683 0004 0400     		.2byte	0x4
 1684 0006 00000000 		.4byte	.Ldebug_abbrev0
 1685 000a 04       		.byte	0x4
 1686 000b 01       		.uleb128 0x1
 1687 000c 53020000 		.4byte	.LASF173
 1688 0010 0C       		.byte	0xc
 1689 0011 39080000 		.4byte	.LASF174
 1690 0015 D3000000 		.4byte	.LASF175
 1691 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1692 001d 00000000 		.4byte	0
 1693 0021 00000000 		.4byte	.Ldebug_line0
 1694 0025 02       		.uleb128 0x2
 1695 0026 01       		.byte	0x1
 1696 0027 06       		.byte	0x6
 1697 0028 990A0000 		.4byte	.LASF0
 1698 002c 02       		.uleb128 0x2
 1699 002d 01       		.byte	0x1
 1700 002e 08       		.byte	0x8
 1701 002f 54090000 		.4byte	.LASF1
 1702 0033 02       		.uleb128 0x2
 1703 0034 02       		.byte	0x2
 1704 0035 05       		.byte	0x5
 1705 0036 9B070000 		.4byte	.LASF2
 1706 003a 02       		.uleb128 0x2
 1707 003b 02       		.byte	0x2
 1708 003c 07       		.byte	0x7
 1709 003d C10A0000 		.4byte	.LASF3
 1710 0041 02       		.uleb128 0x2
 1711 0042 04       		.byte	0x4
 1712 0043 05       		.byte	0x5
 1713 0044 B9070000 		.4byte	.LASF4
 1714 0048 02       		.uleb128 0x2
 1715 0049 04       		.byte	0x4
 1716 004a 07       		.byte	0x7
 1717 004b DA080000 		.4byte	.LASF5
 1718 004f 02       		.uleb128 0x2
 1719 0050 08       		.byte	0x8
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 72


 1720 0051 05       		.byte	0x5
 1721 0052 26050000 		.4byte	.LASF6
 1722 0056 02       		.uleb128 0x2
 1723 0057 08       		.byte	0x8
 1724 0058 07       		.byte	0x7
 1725 0059 27030000 		.4byte	.LASF7
 1726 005d 03       		.uleb128 0x3
 1727 005e 04       		.byte	0x4
 1728 005f 05       		.byte	0x5
 1729 0060 696E7400 		.ascii	"int\000"
 1730 0064 02       		.uleb128 0x2
 1731 0065 04       		.byte	0x4
 1732 0066 07       		.byte	0x7
 1733 0067 32010000 		.4byte	.LASF8
 1734 006b 04       		.uleb128 0x4
 1735 006c 110B0000 		.4byte	.LASF9
 1736 0070 02       		.byte	0x2
 1737 0071 E401     		.2byte	0x1e4
 1738 0073 2C000000 		.4byte	0x2c
 1739 0077 04       		.uleb128 0x4
 1740 0078 BC040000 		.4byte	.LASF10
 1741 007c 02       		.byte	0x2
 1742 007d E501     		.2byte	0x1e5
 1743 007f 3A000000 		.4byte	0x3a
 1744 0083 04       		.uleb128 0x4
 1745 0084 29060000 		.4byte	.LASF11
 1746 0088 02       		.byte	0x2
 1747 0089 E601     		.2byte	0x1e6
 1748 008b 48000000 		.4byte	0x48
 1749 008f 02       		.uleb128 0x2
 1750 0090 04       		.byte	0x4
 1751 0091 04       		.byte	0x4
 1752 0092 47020000 		.4byte	.LASF12
 1753 0096 02       		.uleb128 0x2
 1754 0097 08       		.byte	0x8
 1755 0098 04       		.byte	0x4
 1756 0099 170B0000 		.4byte	.LASF13
 1757 009d 02       		.uleb128 0x2
 1758 009e 01       		.byte	0x1
 1759 009f 08       		.byte	0x8
 1760 00a0 96040000 		.4byte	.LASF14
 1761 00a4 05       		.uleb128 0x5
 1762 00a5 6B000000 		.4byte	0x6b
 1763 00a9 05       		.uleb128 0x5
 1764 00aa 77000000 		.4byte	0x77
 1765 00ae 04       		.uleb128 0x4
 1766 00af 00070000 		.4byte	.LASF15
 1767 00b3 02       		.byte	0x2
 1768 00b4 9002     		.2byte	0x290
 1769 00b6 BA000000 		.4byte	0xba
 1770 00ba 05       		.uleb128 0x5
 1771 00bb 83000000 		.4byte	0x83
 1772 00bf 06       		.uleb128 0x6
 1773 00c0 04       		.byte	0x4
 1774 00c1 C5000000 		.4byte	0xc5
 1775 00c5 07       		.uleb128 0x7
 1776 00c6 02       		.uleb128 0x2
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 73


 1777 00c7 08       		.byte	0x8
 1778 00c8 04       		.byte	0x4
 1779 00c9 F4060000 		.4byte	.LASF16
 1780 00cd 02       		.uleb128 0x2
 1781 00ce 04       		.byte	0x4
 1782 00cf 07       		.byte	0x7
 1783 00d0 C9080000 		.4byte	.LASF17
 1784 00d4 08       		.uleb128 0x8
 1785 00d5 04       		.byte	0x4
 1786 00d6 04       		.uleb128 0x4
 1787 00d7 DA090000 		.4byte	.LASF18
 1788 00db 03       		.byte	0x3
 1789 00dc 2C01     		.2byte	0x12c
 1790 00de 77000000 		.4byte	0x77
 1791 00e2 04       		.uleb128 0x4
 1792 00e3 E1040000 		.4byte	.LASF19
 1793 00e7 03       		.byte	0x3
 1794 00e8 3001     		.2byte	0x130
 1795 00ea 6B000000 		.4byte	0x6b
 1796 00ee 09       		.uleb128 0x9
 1797 00ef 0C       		.byte	0xc
 1798 00f0 04       		.byte	0x4
 1799 00f1 6E       		.byte	0x6e
 1800 00f2 4B010000 		.4byte	0x14b
 1801 00f6 0A       		.uleb128 0xa
 1802 00f7 2C0B0000 		.4byte	.LASF20
 1803 00fb 04       		.byte	0x4
 1804 00fc 73       		.byte	0x73
 1805 00fd 77000000 		.4byte	0x77
 1806 0101 00       		.byte	0
 1807 0102 0A       		.uleb128 0xa
 1808 0103 330B0000 		.4byte	.LASF21
 1809 0107 04       		.byte	0x4
 1810 0108 77       		.byte	0x77
 1811 0109 77000000 		.4byte	0x77
 1812 010d 02       		.byte	0x2
 1813 010e 0A       		.uleb128 0xa
 1814 010f 3A0B0000 		.4byte	.LASF22
 1815 0113 04       		.byte	0x4
 1816 0114 7B       		.byte	0x7b
 1817 0115 77000000 		.4byte	0x77
 1818 0119 04       		.byte	0x4
 1819 011a 0A       		.uleb128 0xa
 1820 011b 410B0000 		.4byte	.LASF23
 1821 011f 04       		.byte	0x4
 1822 0120 7F       		.byte	0x7f
 1823 0121 77000000 		.4byte	0x77
 1824 0125 06       		.byte	0x6
 1825 0126 0A       		.uleb128 0xa
 1826 0127 480B0000 		.4byte	.LASF24
 1827 012b 04       		.byte	0x4
 1828 012c 83       		.byte	0x83
 1829 012d 77000000 		.4byte	0x77
 1830 0131 08       		.byte	0x8
 1831 0132 0A       		.uleb128 0xa
 1832 0133 4F0B0000 		.4byte	.LASF25
 1833 0137 04       		.byte	0x4
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 74


 1834 0138 87       		.byte	0x87
 1835 0139 6B000000 		.4byte	0x6b
 1836 013d 0A       		.byte	0xa
 1837 013e 0A       		.uleb128 0xa
 1838 013f 560B0000 		.4byte	.LASF26
 1839 0143 04       		.byte	0x4
 1840 0144 8B       		.byte	0x8b
 1841 0145 6B000000 		.4byte	0x6b
 1842 0149 0B       		.byte	0xb
 1843 014a 00       		.byte	0
 1844 014b 0B       		.uleb128 0xb
 1845 014c 60040000 		.4byte	.LASF27
 1846 0150 04       		.byte	0x4
 1847 0151 8C       		.byte	0x8c
 1848 0152 EE000000 		.4byte	0xee
 1849 0156 0C       		.uleb128 0xc
 1850 0157 01       		.byte	0x1
 1851 0158 2C000000 		.4byte	0x2c
 1852 015c 05       		.byte	0x5
 1853 015d 70       		.byte	0x70
 1854 015e 81010000 		.4byte	0x181
 1855 0162 0D       		.uleb128 0xd
 1856 0163 1D010000 		.4byte	.LASF28
 1857 0167 00       		.byte	0
 1858 0168 0D       		.uleb128 0xd
 1859 0169 AD080000 		.4byte	.LASF29
 1860 016d 01       		.byte	0x1
 1861 016e 0D       		.uleb128 0xd
 1862 016f F8070000 		.4byte	.LASF30
 1863 0173 02       		.byte	0x2
 1864 0174 0D       		.uleb128 0xd
 1865 0175 F2090000 		.4byte	.LASF31
 1866 0179 03       		.byte	0x3
 1867 017a 0D       		.uleb128 0xd
 1868 017b BB060000 		.4byte	.LASF32
 1869 017f 04       		.byte	0x4
 1870 0180 00       		.byte	0
 1871 0181 0B       		.uleb128 0xb
 1872 0182 FC040000 		.4byte	.LASF33
 1873 0186 05       		.byte	0x5
 1874 0187 76       		.byte	0x76
 1875 0188 56010000 		.4byte	0x156
 1876 018c 09       		.uleb128 0x9
 1877 018d 12       		.byte	0x12
 1878 018e 05       		.byte	0x5
 1879 018f 8E       		.byte	0x8e
 1880 0190 25020000 		.4byte	0x225
 1881 0194 0A       		.uleb128 0xa
 1882 0195 C3040000 		.4byte	.LASF34
 1883 0199 05       		.byte	0x5
 1884 019a 93       		.byte	0x93
 1885 019b 77000000 		.4byte	0x77
 1886 019f 00       		.byte	0
 1887 01a0 0A       		.uleb128 0xa
 1888 01a1 25090000 		.4byte	.LASF35
 1889 01a5 05       		.byte	0x5
 1890 01a6 98       		.byte	0x98
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 75


 1891 01a7 D6000000 		.4byte	0xd6
 1892 01ab 02       		.byte	0x2
 1893 01ac 0A       		.uleb128 0xa
 1894 01ad 8E040000 		.4byte	.LASF36
 1895 01b1 05       		.byte	0x5
 1896 01b2 9D       		.byte	0x9d
 1897 01b3 6B000000 		.4byte	0x6b
 1898 01b7 04       		.byte	0x4
 1899 01b8 0A       		.uleb128 0xa
 1900 01b9 D5050000 		.4byte	.LASF37
 1901 01bd 05       		.byte	0x5
 1902 01be A2       		.byte	0xa2
 1903 01bf 6B000000 		.4byte	0x6b
 1904 01c3 05       		.byte	0x5
 1905 01c4 0A       		.uleb128 0xa
 1906 01c5 EA030000 		.4byte	.LASF38
 1907 01c9 05       		.byte	0x5
 1908 01ca A8       		.byte	0xa8
 1909 01cb 6B000000 		.4byte	0x6b
 1910 01cf 06       		.byte	0x6
 1911 01d0 0A       		.uleb128 0xa
 1912 01d1 55050000 		.4byte	.LASF39
 1913 01d5 05       		.byte	0x5
 1914 01d6 AE       		.byte	0xae
 1915 01d7 6B000000 		.4byte	0x6b
 1916 01db 07       		.byte	0x7
 1917 01dc 0A       		.uleb128 0xa
 1918 01dd 0E040000 		.4byte	.LASF40
 1919 01e1 05       		.byte	0x5
 1920 01e2 B5       		.byte	0xb5
 1921 01e3 E2000000 		.4byte	0xe2
 1922 01e7 08       		.byte	0x8
 1923 01e8 0A       		.uleb128 0xa
 1924 01e9 F3080000 		.4byte	.LASF41
 1925 01ed 05       		.byte	0x5
 1926 01ee BC       		.byte	0xbc
 1927 01ef 25020000 		.4byte	0x225
 1928 01f3 09       		.byte	0x9
 1929 01f4 0A       		.uleb128 0xa
 1930 01f5 480A0000 		.4byte	.LASF42
 1931 01f9 05       		.byte	0x5
 1932 01fa C4       		.byte	0xc4
 1933 01fb 77000000 		.4byte	0x77
 1934 01ff 0A       		.byte	0xa
 1935 0200 0A       		.uleb128 0xa
 1936 0201 4B070000 		.4byte	.LASF43
 1937 0205 05       		.byte	0x5
 1938 0206 C9       		.byte	0xc9
 1939 0207 6B000000 		.4byte	0x6b
 1940 020b 0C       		.byte	0xc
 1941 020c 0A       		.uleb128 0xa
 1942 020d 7A080000 		.4byte	.LASF44
 1943 0211 05       		.byte	0x5
 1944 0212 CF       		.byte	0xcf
 1945 0213 77000000 		.4byte	0x77
 1946 0217 0E       		.byte	0xe
 1947 0218 0A       		.uleb128 0xa
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 76


 1948 0219 E3030000 		.4byte	.LASF45
 1949 021d 05       		.byte	0x5
 1950 021e D4       		.byte	0xd4
 1951 021f 77000000 		.4byte	0x77
 1952 0223 10       		.byte	0x10
 1953 0224 00       		.byte	0
 1954 0225 0E       		.uleb128 0xe
 1955 0226 6B000000 		.4byte	0x6b
 1956 022a 35020000 		.4byte	0x235
 1957 022e 0F       		.uleb128 0xf
 1958 022f CD000000 		.4byte	0xcd
 1959 0233 00       		.byte	0
 1960 0234 00       		.byte	0
 1961 0235 0B       		.uleb128 0xb
 1962 0236 E9050000 		.4byte	.LASF46
 1963 023a 05       		.byte	0x5
 1964 023b D5       		.byte	0xd5
 1965 023c 8C010000 		.4byte	0x18c
 1966 0240 09       		.uleb128 0x9
 1967 0241 12       		.byte	0x12
 1968 0242 05       		.byte	0x5
 1969 0243 DA       		.byte	0xda
 1970 0244 DF020000 		.4byte	0x2df
 1971 0248 0A       		.uleb128 0xa
 1972 0249 C3040000 		.4byte	.LASF34
 1973 024d 05       		.byte	0x5
 1974 024e DF       		.byte	0xdf
 1975 024f 77000000 		.4byte	0x77
 1976 0253 00       		.byte	0
 1977 0254 0A       		.uleb128 0xa
 1978 0255 25090000 		.4byte	.LASF35
 1979 0259 05       		.byte	0x5
 1980 025a E4       		.byte	0xe4
 1981 025b D6000000 		.4byte	0xd6
 1982 025f 02       		.byte	0x2
 1983 0260 0A       		.uleb128 0xa
 1984 0261 8E040000 		.4byte	.LASF36
 1985 0265 05       		.byte	0x5
 1986 0266 E9       		.byte	0xe9
 1987 0267 6B000000 		.4byte	0x6b
 1988 026b 04       		.byte	0x4
 1989 026c 0A       		.uleb128 0xa
 1990 026d D5050000 		.4byte	.LASF37
 1991 0271 05       		.byte	0x5
 1992 0272 EE       		.byte	0xee
 1993 0273 6B000000 		.4byte	0x6b
 1994 0277 05       		.byte	0x5
 1995 0278 0A       		.uleb128 0xa
 1996 0279 EA030000 		.4byte	.LASF38
 1997 027d 05       		.byte	0x5
 1998 027e F4       		.byte	0xf4
 1999 027f 6B000000 		.4byte	0x6b
 2000 0283 06       		.byte	0x6
 2001 0284 0A       		.uleb128 0xa
 2002 0285 55050000 		.4byte	.LASF39
 2003 0289 05       		.byte	0x5
 2004 028a FA       		.byte	0xfa
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 77


 2005 028b 6B000000 		.4byte	0x6b
 2006 028f 07       		.byte	0x7
 2007 0290 10       		.uleb128 0x10
 2008 0291 0E040000 		.4byte	.LASF40
 2009 0295 05       		.byte	0x5
 2010 0296 0101     		.2byte	0x101
 2011 0298 E2000000 		.4byte	0xe2
 2012 029c 08       		.byte	0x8
 2013 029d 10       		.uleb128 0x10
 2014 029e F3080000 		.4byte	.LASF41
 2015 02a2 05       		.byte	0x5
 2016 02a3 0801     		.2byte	0x108
 2017 02a5 25020000 		.4byte	0x225
 2018 02a9 09       		.byte	0x9
 2019 02aa 10       		.uleb128 0x10
 2020 02ab 480A0000 		.4byte	.LASF42
 2021 02af 05       		.byte	0x5
 2022 02b0 1001     		.2byte	0x110
 2023 02b2 77000000 		.4byte	0x77
 2024 02b6 0A       		.byte	0xa
 2025 02b7 10       		.uleb128 0x10
 2026 02b8 4B070000 		.4byte	.LASF43
 2027 02bc 05       		.byte	0x5
 2028 02bd 1501     		.2byte	0x115
 2029 02bf 6B000000 		.4byte	0x6b
 2030 02c3 0C       		.byte	0xc
 2031 02c4 10       		.uleb128 0x10
 2032 02c5 7A080000 		.4byte	.LASF44
 2033 02c9 05       		.byte	0x5
 2034 02ca 1B01     		.2byte	0x11b
 2035 02cc 77000000 		.4byte	0x77
 2036 02d0 0E       		.byte	0xe
 2037 02d1 10       		.uleb128 0x10
 2038 02d2 E3030000 		.4byte	.LASF45
 2039 02d6 05       		.byte	0x5
 2040 02d7 2001     		.2byte	0x120
 2041 02d9 77000000 		.4byte	0x77
 2042 02dd 10       		.byte	0x10
 2043 02de 00       		.byte	0
 2044 02df 04       		.uleb128 0x4
 2045 02e0 36090000 		.4byte	.LASF47
 2046 02e4 05       		.byte	0x5
 2047 02e5 2101     		.2byte	0x121
 2048 02e7 40020000 		.4byte	0x240
 2049 02eb 11       		.uleb128 0x11
 2050 02ec 14       		.byte	0x14
 2051 02ed 05       		.byte	0x5
 2052 02ee 2601     		.2byte	0x126
 2053 02f0 9E030000 		.4byte	0x39e
 2054 02f4 10       		.uleb128 0x10
 2055 02f5 C3040000 		.4byte	.LASF34
 2056 02f9 05       		.byte	0x5
 2057 02fa 2B01     		.2byte	0x12b
 2058 02fc 77000000 		.4byte	0x77
 2059 0300 00       		.byte	0
 2060 0301 10       		.uleb128 0x10
 2061 0302 25090000 		.4byte	.LASF35
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 78


 2062 0306 05       		.byte	0x5
 2063 0307 3001     		.2byte	0x130
 2064 0309 D6000000 		.4byte	0xd6
 2065 030d 02       		.byte	0x2
 2066 030e 10       		.uleb128 0x10
 2067 030f 8E040000 		.4byte	.LASF36
 2068 0313 05       		.byte	0x5
 2069 0314 3501     		.2byte	0x135
 2070 0316 6B000000 		.4byte	0x6b
 2071 031a 04       		.byte	0x4
 2072 031b 10       		.uleb128 0x10
 2073 031c D5050000 		.4byte	.LASF37
 2074 0320 05       		.byte	0x5
 2075 0321 3A01     		.2byte	0x13a
 2076 0323 6B000000 		.4byte	0x6b
 2077 0327 05       		.byte	0x5
 2078 0328 10       		.uleb128 0x10
 2079 0329 EA030000 		.4byte	.LASF38
 2080 032d 05       		.byte	0x5
 2081 032e 4001     		.2byte	0x140
 2082 0330 6B000000 		.4byte	0x6b
 2083 0334 06       		.byte	0x6
 2084 0335 10       		.uleb128 0x10
 2085 0336 55050000 		.4byte	.LASF39
 2086 033a 05       		.byte	0x5
 2087 033b 4601     		.2byte	0x146
 2088 033d 6B000000 		.4byte	0x6b
 2089 0341 07       		.byte	0x7
 2090 0342 10       		.uleb128 0x10
 2091 0343 0E040000 		.4byte	.LASF40
 2092 0347 05       		.byte	0x5
 2093 0348 4D01     		.2byte	0x14d
 2094 034a E2000000 		.4byte	0xe2
 2095 034e 08       		.byte	0x8
 2096 034f 10       		.uleb128 0x10
 2097 0350 F3080000 		.4byte	.LASF41
 2098 0354 05       		.byte	0x5
 2099 0355 5401     		.2byte	0x154
 2100 0357 25020000 		.4byte	0x225
 2101 035b 09       		.byte	0x9
 2102 035c 10       		.uleb128 0x10
 2103 035d 480A0000 		.4byte	.LASF42
 2104 0361 05       		.byte	0x5
 2105 0362 5C01     		.2byte	0x15c
 2106 0364 77000000 		.4byte	0x77
 2107 0368 0A       		.byte	0xa
 2108 0369 10       		.uleb128 0x10
 2109 036a 4B070000 		.4byte	.LASF43
 2110 036e 05       		.byte	0x5
 2111 036f 6101     		.2byte	0x161
 2112 0371 6B000000 		.4byte	0x6b
 2113 0375 0C       		.byte	0xc
 2114 0376 10       		.uleb128 0x10
 2115 0377 7A080000 		.4byte	.LASF44
 2116 037b 05       		.byte	0x5
 2117 037c 6701     		.2byte	0x167
 2118 037e 77000000 		.4byte	0x77
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 79


 2119 0382 0E       		.byte	0xe
 2120 0383 10       		.uleb128 0x10
 2121 0384 E3030000 		.4byte	.LASF45
 2122 0388 05       		.byte	0x5
 2123 0389 6C01     		.2byte	0x16c
 2124 038b 77000000 		.4byte	0x77
 2125 038f 10       		.byte	0x10
 2126 0390 10       		.uleb128 0x10
 2127 0391 A20B0000 		.4byte	.LASF48
 2128 0395 05       		.byte	0x5
 2129 0396 7101     		.2byte	0x171
 2130 0398 9E030000 		.4byte	0x39e
 2131 039c 12       		.byte	0x12
 2132 039d 00       		.byte	0
 2133 039e 0E       		.uleb128 0xe
 2134 039f 77000000 		.4byte	0x77
 2135 03a3 AE030000 		.4byte	0x3ae
 2136 03a7 0F       		.uleb128 0xf
 2137 03a8 CD000000 		.4byte	0xcd
 2138 03ac 00       		.byte	0
 2139 03ad 00       		.byte	0
 2140 03ae 04       		.uleb128 0x4
 2141 03af 8F080000 		.4byte	.LASF49
 2142 03b3 05       		.byte	0x5
 2143 03b4 7201     		.2byte	0x172
 2144 03b6 EB020000 		.4byte	0x2eb
 2145 03ba 11       		.uleb128 0x11
 2146 03bb 26       		.byte	0x26
 2147 03bc 05       		.byte	0x5
 2148 03bd 7801     		.2byte	0x178
 2149 03bf DE030000 		.4byte	0x3de
 2150 03c3 10       		.uleb128 0x10
 2151 03c4 4F040000 		.4byte	.LASF50
 2152 03c8 05       		.byte	0x5
 2153 03c9 7D01     		.2byte	0x17d
 2154 03cb DF020000 		.4byte	0x2df
 2155 03cf 00       		.byte	0
 2156 03d0 12       		.uleb128 0x12
 2157 03d1 736C6400 		.ascii	"sld\000"
 2158 03d5 05       		.byte	0x5
 2159 03d6 8201     		.2byte	0x182
 2160 03d8 AE030000 		.4byte	0x3ae
 2161 03dc 12       		.byte	0x12
 2162 03dd 00       		.byte	0
 2163 03de 04       		.uleb128 0x4
 2164 03df E5010000 		.4byte	.LASF51
 2165 03e3 05       		.byte	0x5
 2166 03e4 8301     		.2byte	0x183
 2167 03e6 BA030000 		.4byte	0x3ba
 2168 03ea 11       		.uleb128 0x11
 2169 03eb 0A       		.byte	0xa
 2170 03ec 05       		.byte	0x5
 2171 03ed 8901     		.2byte	0x189
 2172 03ef 42040000 		.4byte	0x442
 2173 03f3 12       		.uleb128 0x12
 2174 03f4 72617700 		.ascii	"raw\000"
 2175 03f8 05       		.byte	0x5
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 80


 2176 03f9 8E01     		.2byte	0x18e
 2177 03fb 9E030000 		.4byte	0x39e
 2178 03ff 00       		.byte	0
 2179 0400 10       		.uleb128 0x10
 2180 0401 BC0A0000 		.4byte	.LASF52
 2181 0405 05       		.byte	0x5
 2182 0406 9301     		.2byte	0x193
 2183 0408 9E030000 		.4byte	0x39e
 2184 040c 02       		.byte	0x2
 2185 040d 10       		.uleb128 0x10
 2186 040e 2E090000 		.4byte	.LASF53
 2187 0412 05       		.byte	0x5
 2188 0413 9901     		.2byte	0x199
 2189 0415 25020000 		.4byte	0x225
 2190 0419 04       		.byte	0x4
 2191 041a 10       		.uleb128 0x10
 2192 041b CD070000 		.4byte	.LASF54
 2193 041f 05       		.byte	0x5
 2194 0420 9E01     		.2byte	0x19e
 2195 0422 D6000000 		.4byte	0xd6
 2196 0426 06       		.byte	0x6
 2197 0427 10       		.uleb128 0x10
 2198 0428 1E0B0000 		.4byte	.LASF55
 2199 042c 05       		.byte	0x5
 2200 042d A301     		.2byte	0x1a3
 2201 042f 42040000 		.4byte	0x442
 2202 0433 08       		.byte	0x8
 2203 0434 10       		.uleb128 0x10
 2204 0435 17050000 		.4byte	.LASF56
 2205 0439 05       		.byte	0x5
 2206 043a A801     		.2byte	0x1a8
 2207 043c 25020000 		.4byte	0x225
 2208 0440 09       		.byte	0x9
 2209 0441 00       		.byte	0
 2210 0442 0E       		.uleb128 0xe
 2211 0443 E2000000 		.4byte	0xe2
 2212 0447 52040000 		.4byte	0x452
 2213 044b 0F       		.uleb128 0xf
 2214 044c CD000000 		.4byte	0xcd
 2215 0450 00       		.byte	0
 2216 0451 00       		.byte	0
 2217 0452 04       		.uleb128 0x4
 2218 0453 BE030000 		.4byte	.LASF57
 2219 0457 05       		.byte	0x5
 2220 0458 A901     		.2byte	0x1a9
 2221 045a EA030000 		.4byte	0x3ea
 2222 045e 11       		.uleb128 0x11
 2223 045f 3C       		.byte	0x3c
 2224 0460 05       		.byte	0x5
 2225 0461 AF01     		.2byte	0x1af
 2226 0463 82040000 		.4byte	0x482
 2227 0467 10       		.uleb128 0x10
 2228 0468 4F040000 		.4byte	.LASF50
 2229 046c 05       		.byte	0x5
 2230 046d B401     		.2byte	0x1b4
 2231 046f 82040000 		.4byte	0x482
 2232 0473 00       		.byte	0
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 81


 2233 0474 12       		.uleb128 0x12
 2234 0475 736C6400 		.ascii	"sld\000"
 2235 0479 05       		.byte	0x5
 2236 047a B901     		.2byte	0x1b9
 2237 047c 92040000 		.4byte	0x492
 2238 0480 0A       		.byte	0xa
 2239 0481 00       		.byte	0
 2240 0482 0E       		.uleb128 0xe
 2241 0483 52040000 		.4byte	0x452
 2242 0487 92040000 		.4byte	0x492
 2243 048b 0F       		.uleb128 0xf
 2244 048c CD000000 		.4byte	0xcd
 2245 0490 00       		.byte	0
 2246 0491 00       		.byte	0
 2247 0492 0E       		.uleb128 0xe
 2248 0493 52040000 		.4byte	0x452
 2249 0497 A2040000 		.4byte	0x4a2
 2250 049b 0F       		.uleb128 0xf
 2251 049c CD000000 		.4byte	0xcd
 2252 04a0 04       		.byte	0x4
 2253 04a1 00       		.byte	0
 2254 04a2 04       		.uleb128 0x4
 2255 04a3 AB0B0000 		.4byte	.LASF58
 2256 04a7 05       		.byte	0x5
 2257 04a8 BA01     		.2byte	0x1ba
 2258 04aa 5E040000 		.4byte	0x45e
 2259 04ae 11       		.uleb128 0x11
 2260 04af 88       		.byte	0x88
 2261 04b0 05       		.byte	0x5
 2262 04b1 C001     		.2byte	0x1c0
 2263 04b3 A2050000 		.4byte	0x5a2
 2264 04b7 10       		.uleb128 0x10
 2265 04b8 19070000 		.4byte	.LASF59
 2266 04bc 05       		.byte	0x5
 2267 04bd C701     		.2byte	0x1c7
 2268 04bf 77000000 		.4byte	0x77
 2269 04c3 00       		.byte	0
 2270 04c4 10       		.uleb128 0x10
 2271 04c5 720B0000 		.4byte	.LASF60
 2272 04c9 05       		.byte	0x5
 2273 04ca CC01     		.2byte	0x1cc
 2274 04cc 77000000 		.4byte	0x77
 2275 04d0 02       		.byte	0x2
 2276 04d1 10       		.uleb128 0x10
 2277 04d2 73010000 		.4byte	.LASF61
 2278 04d6 05       		.byte	0x5
 2279 04d7 D101     		.2byte	0x1d1
 2280 04d9 77000000 		.4byte	0x77
 2281 04dd 04       		.byte	0x4
 2282 04de 10       		.uleb128 0x10
 2283 04df EA070000 		.4byte	.LASF62
 2284 04e3 05       		.byte	0x5
 2285 04e4 D701     		.2byte	0x1d7
 2286 04e6 77000000 		.4byte	0x77
 2287 04ea 06       		.byte	0x6
 2288 04eb 10       		.uleb128 0x10
 2289 04ec 67010000 		.4byte	.LASF63
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 82


 2290 04f0 05       		.byte	0x5
 2291 04f1 DC01     		.2byte	0x1dc
 2292 04f3 77000000 		.4byte	0x77
 2293 04f7 08       		.byte	0x8
 2294 04f8 10       		.uleb128 0x10
 2295 04f9 CE040000 		.4byte	.LASF64
 2296 04fd 05       		.byte	0x5
 2297 04fe E101     		.2byte	0x1e1
 2298 0500 BA000000 		.4byte	0xba
 2299 0504 0C       		.byte	0xc
 2300 0505 10       		.uleb128 0x10
 2301 0506 C2070000 		.4byte	.LASF65
 2302 050a 05       		.byte	0x5
 2303 050b E701     		.2byte	0x1e7
 2304 050d A2050000 		.4byte	0x5a2
 2305 0511 10       		.byte	0x10
 2306 0512 10       		.uleb128 0x10
 2307 0513 84080000 		.4byte	.LASF66
 2308 0517 05       		.byte	0x5
 2309 0518 EE01     		.2byte	0x1ee
 2310 051a A2050000 		.4byte	0x5a2
 2311 051e 14       		.byte	0x14
 2312 051f 10       		.uleb128 0x10
 2313 0520 41070000 		.4byte	.LASF67
 2314 0524 05       		.byte	0x5
 2315 0525 FE01     		.2byte	0x1fe
 2316 0527 B2050000 		.4byte	0x5b2
 2317 052b 18       		.byte	0x18
 2318 052c 10       		.uleb128 0x10
 2319 052d DE050000 		.4byte	.LASF68
 2320 0531 05       		.byte	0x5
 2321 0532 0402     		.2byte	0x204
 2322 0534 77000000 		.4byte	0x77
 2323 0538 1A       		.byte	0x1a
 2324 0539 10       		.uleb128 0x10
 2325 053a B4030000 		.4byte	.LASF69
 2326 053e 05       		.byte	0x5
 2327 053f 0902     		.2byte	0x209
 2328 0541 6B000000 		.4byte	0x6b
 2329 0545 1C       		.byte	0x1c
 2330 0546 10       		.uleb128 0x10
 2331 0547 B0090000 		.4byte	.LASF70
 2332 054b 05       		.byte	0x5
 2333 054c 0E02     		.2byte	0x20e
 2334 054e 6B000000 		.4byte	0x6b
 2335 0552 1D       		.byte	0x1d
 2336 0553 10       		.uleb128 0x10
 2337 0554 74050000 		.4byte	.LASF71
 2338 0558 05       		.byte	0x5
 2339 0559 1302     		.2byte	0x213
 2340 055b DE030000 		.4byte	0x3de
 2341 055f 1E       		.byte	0x1e
 2342 0560 10       		.uleb128 0x10
 2343 0561 1F030000 		.4byte	.LASF72
 2344 0565 05       		.byte	0x5
 2345 0566 1802     		.2byte	0x218
 2346 0568 A2040000 		.4byte	0x4a2
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 83


 2347 056c 44       		.byte	0x44
 2348 056d 10       		.uleb128 0x10
 2349 056e C3000000 		.4byte	.LASF73
 2350 0572 05       		.byte	0x5
 2351 0573 1D02     		.2byte	0x21d
 2352 0575 6B000000 		.4byte	0x6b
 2353 0579 80       		.byte	0x80
 2354 057a 10       		.uleb128 0x10
 2355 057b 6C030000 		.4byte	.LASF74
 2356 057f 05       		.byte	0x5
 2357 0580 2202     		.2byte	0x222
 2358 0582 6B000000 		.4byte	0x6b
 2359 0586 81       		.byte	0x81
 2360 0587 10       		.uleb128 0x10
 2361 0588 06070000 		.4byte	.LASF75
 2362 058c 05       		.byte	0x5
 2363 058d 2702     		.2byte	0x227
 2364 058f 77000000 		.4byte	0x77
 2365 0593 82       		.byte	0x82
 2366 0594 10       		.uleb128 0x10
 2367 0595 C5050000 		.4byte	.LASF76
 2368 0599 05       		.byte	0x5
 2369 059a 2C02     		.2byte	0x22c
 2370 059c 9E030000 		.4byte	0x39e
 2371 05a0 84       		.byte	0x84
 2372 05a1 00       		.byte	0
 2373 05a2 0E       		.uleb128 0xe
 2374 05a3 83000000 		.4byte	0x83
 2375 05a7 B2050000 		.4byte	0x5b2
 2376 05ab 0F       		.uleb128 0xf
 2377 05ac CD000000 		.4byte	0xcd
 2378 05b0 00       		.byte	0
 2379 05b1 00       		.byte	0
 2380 05b2 0E       		.uleb128 0xe
 2381 05b3 6B000000 		.4byte	0x6b
 2382 05b7 C2050000 		.4byte	0x5c2
 2383 05bb 0F       		.uleb128 0xf
 2384 05bc CD000000 		.4byte	0xcd
 2385 05c0 01       		.byte	0x1
 2386 05c1 00       		.byte	0
 2387 05c2 04       		.uleb128 0x4
 2388 05c3 A5070000 		.4byte	.LASF77
 2389 05c7 05       		.byte	0x5
 2390 05c8 2D02     		.2byte	0x22d
 2391 05ca AE040000 		.4byte	0x4ae
 2392 05ce 11       		.uleb128 0x11
 2393 05cf 1C       		.byte	0x1c
 2394 05d0 05       		.byte	0x5
 2395 05d1 3302     		.2byte	0x233
 2396 05d3 4D060000 		.4byte	0x64d
 2397 05d7 10       		.uleb128 0x10
 2398 05d8 05060000 		.4byte	.LASF78
 2399 05dc 05       		.byte	0x5
 2400 05dd 3802     		.2byte	0x238
 2401 05df 4D060000 		.4byte	0x64d
 2402 05e3 00       		.byte	0
 2403 05e4 10       		.uleb128 0x10
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 84


 2404 05e5 20050000 		.4byte	.LASF79
 2405 05e9 05       		.byte	0x5
 2406 05ea 3D02     		.2byte	0x23d
 2407 05ec 4D060000 		.4byte	0x64d
 2408 05f0 04       		.byte	0x4
 2409 05f1 10       		.uleb128 0x10
 2410 05f2 DD030000 		.4byte	.LASF80
 2411 05f6 05       		.byte	0x5
 2412 05f7 4202     		.2byte	0x242
 2413 05f9 4D060000 		.4byte	0x64d
 2414 05fd 08       		.byte	0x8
 2415 05fe 10       		.uleb128 0x10
 2416 05ff 14080000 		.4byte	.LASF81
 2417 0603 05       		.byte	0x5
 2418 0604 4702     		.2byte	0x247
 2419 0606 4D060000 		.4byte	0x64d
 2420 060a 0C       		.byte	0xc
 2421 060b 10       		.uleb128 0x10
 2422 060c 170A0000 		.4byte	.LASF82
 2423 0610 05       		.byte	0x5
 2424 0611 4C02     		.2byte	0x24c
 2425 0613 83000000 		.4byte	0x83
 2426 0617 10       		.byte	0x10
 2427 0618 10       		.uleb128 0x10
 2428 0619 58060000 		.4byte	.LASF83
 2429 061d 05       		.byte	0x5
 2430 061e 5102     		.2byte	0x251
 2431 0620 83000000 		.4byte	0x83
 2432 0624 14       		.byte	0x14
 2433 0625 10       		.uleb128 0x10
 2434 0626 B1040000 		.4byte	.LASF84
 2435 062a 05       		.byte	0x5
 2436 062b 5602     		.2byte	0x256
 2437 062d 6B000000 		.4byte	0x6b
 2438 0631 18       		.byte	0x18
 2439 0632 10       		.uleb128 0x10
 2440 0633 D2080000 		.4byte	.LASF85
 2441 0637 05       		.byte	0x5
 2442 0638 5B02     		.2byte	0x25b
 2443 063a 6B000000 		.4byte	0x6b
 2444 063e 19       		.byte	0x19
 2445 063f 10       		.uleb128 0x10
 2446 0640 4D020000 		.4byte	.LASF86
 2447 0644 05       		.byte	0x5
 2448 0645 6002     		.2byte	0x260
 2449 0647 6B000000 		.4byte	0x6b
 2450 064b 1A       		.byte	0x1a
 2451 064c 00       		.byte	0
 2452 064d 06       		.uleb128 0x6
 2453 064e 04       		.byte	0x4
 2454 064f AE000000 		.4byte	0xae
 2455 0653 04       		.uleb128 0x4
 2456 0654 53030000 		.4byte	.LASF87
 2457 0658 05       		.byte	0x5
 2458 0659 6102     		.2byte	0x261
 2459 065b CE050000 		.4byte	0x5ce
 2460 065f 11       		.uleb128 0x11
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 85


 2461 0660 2C       		.byte	0x2c
 2462 0661 05       		.byte	0x5
 2463 0662 9402     		.2byte	0x294
 2464 0664 2C070000 		.4byte	0x72c
 2465 0668 10       		.uleb128 0x10
 2466 0669 040B0000 		.4byte	.LASF88
 2467 066d 05       		.byte	0x5
 2468 066e 9D02     		.2byte	0x29d
 2469 0670 2C070000 		.4byte	0x72c
 2470 0674 00       		.byte	0
 2471 0675 10       		.uleb128 0x10
 2472 0676 CE090000 		.4byte	.LASF89
 2473 067a 05       		.byte	0x5
 2474 067b A402     		.2byte	0x2a4
 2475 067d D4000000 		.4byte	0xd4
 2476 0681 04       		.byte	0x4
 2477 0682 10       		.uleb128 0x10
 2478 0683 22070000 		.4byte	.LASF90
 2479 0687 05       		.byte	0x5
 2480 0688 AA02     		.2byte	0x2aa
 2481 068a 33070000 		.4byte	0x733
 2482 068e 08       		.byte	0x8
 2483 068f 10       		.uleb128 0x10
 2484 0690 30060000 		.4byte	.LASF91
 2485 0694 05       		.byte	0x5
 2486 0695 B002     		.2byte	0x2b0
 2487 0697 D4000000 		.4byte	0xd4
 2488 069b 0C       		.byte	0xc
 2489 069c 10       		.uleb128 0x10
 2490 069d 01090000 		.4byte	.LASF92
 2491 06a1 05       		.byte	0x5
 2492 06a2 B702     		.2byte	0x2b7
 2493 06a4 39070000 		.4byte	0x739
 2494 06a8 10       		.byte	0x10
 2495 06a9 10       		.uleb128 0x10
 2496 06aa 97090000 		.4byte	.LASF93
 2497 06ae 05       		.byte	0x5
 2498 06af BC02     		.2byte	0x2bc
 2499 06b1 83000000 		.4byte	0x83
 2500 06b5 14       		.byte	0x14
 2501 06b6 10       		.uleb128 0x10
 2502 06b7 54040000 		.4byte	.LASF94
 2503 06bb 05       		.byte	0x5
 2504 06bc C302     		.2byte	0x2c3
 2505 06be 77000000 		.4byte	0x77
 2506 06c2 18       		.byte	0x18
 2507 06c3 10       		.uleb128 0x10
 2508 06c4 A1030000 		.4byte	.LASF95
 2509 06c8 05       		.byte	0x5
 2510 06c9 CA02     		.2byte	0x2ca
 2511 06cb 6B000000 		.4byte	0x6b
 2512 06cf 1A       		.byte	0x1a
 2513 06d0 10       		.uleb128 0x10
 2514 06d1 A4090000 		.4byte	.LASF96
 2515 06d5 05       		.byte	0x5
 2516 06d6 D002     		.2byte	0x2d0
 2517 06d8 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 86


 2518 06dc 1B       		.byte	0x1b
 2519 06dd 10       		.uleb128 0x10
 2520 06de 34050000 		.4byte	.LASF97
 2521 06e2 05       		.byte	0x5
 2522 06e3 DA02     		.2byte	0x2da
 2523 06e5 6B000000 		.4byte	0x6b
 2524 06e9 1C       		.byte	0x1c
 2525 06ea 10       		.uleb128 0x10
 2526 06eb 0F0A0000 		.4byte	.LASF98
 2527 06ef 05       		.byte	0x5
 2528 06f0 E202     		.2byte	0x2e2
 2529 06f2 6B000000 		.4byte	0x6b
 2530 06f6 1D       		.byte	0x1d
 2531 06f7 10       		.uleb128 0x10
 2532 06f8 76070000 		.4byte	.LASF99
 2533 06fc 05       		.byte	0x5
 2534 06fd E702     		.2byte	0x2e7
 2535 06ff 77000000 		.4byte	0x77
 2536 0703 1E       		.byte	0x1e
 2537 0704 10       		.uleb128 0x10
 2538 0705 11090000 		.4byte	.LASF100
 2539 0709 05       		.byte	0x5
 2540 070a F002     		.2byte	0x2f0
 2541 070c 83000000 		.4byte	0x83
 2542 0710 20       		.byte	0x20
 2543 0711 10       		.uleb128 0x10
 2544 0712 92030000 		.4byte	.LASF101
 2545 0716 05       		.byte	0x5
 2546 0717 F802     		.2byte	0x2f8
 2547 0719 3F070000 		.4byte	0x73f
 2548 071d 24       		.byte	0x24
 2549 071e 10       		.uleb128 0x10
 2550 071f 01020000 		.4byte	.LASF102
 2551 0723 05       		.byte	0x5
 2552 0724 FD02     		.2byte	0x2fd
 2553 0726 6B000000 		.4byte	0x6b
 2554 072a 28       		.byte	0x28
 2555 072b 00       		.byte	0
 2556 072c 06       		.uleb128 0x6
 2557 072d 04       		.byte	0x4
 2558 072e 32070000 		.4byte	0x732
 2559 0732 13       		.uleb128 0x13
 2560 0733 06       		.uleb128 0x6
 2561 0734 04       		.byte	0x4
 2562 0735 52040000 		.4byte	0x452
 2563 0739 06       		.uleb128 0x6
 2564 073a 04       		.byte	0x4
 2565 073b 6B000000 		.4byte	0x6b
 2566 073f 06       		.uleb128 0x6
 2567 0740 04       		.byte	0x4
 2568 0741 4B010000 		.4byte	0x14b
 2569 0745 04       		.uleb128 0x4
 2570 0746 F5030000 		.4byte	.LASF103
 2571 074a 05       		.byte	0x5
 2572 074b FE02     		.2byte	0x2fe
 2573 074d 5F060000 		.4byte	0x65f
 2574 0751 11       		.uleb128 0x11
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 87


 2575 0752 58       		.byte	0x58
 2576 0753 05       		.byte	0x5
 2577 0754 0403     		.2byte	0x304
 2578 0756 68070000 		.4byte	0x768
 2579 075a 10       		.uleb128 0x10
 2580 075b C80B0000 		.4byte	.LASF104
 2581 075f 05       		.byte	0x5
 2582 0760 0903     		.2byte	0x309
 2583 0762 68070000 		.4byte	0x768
 2584 0766 00       		.byte	0
 2585 0767 00       		.byte	0
 2586 0768 0E       		.uleb128 0xe
 2587 0769 45070000 		.4byte	0x745
 2588 076d 78070000 		.4byte	0x778
 2589 0771 0F       		.uleb128 0xf
 2590 0772 CD000000 		.4byte	0xcd
 2591 0776 01       		.byte	0x1
 2592 0777 00       		.byte	0
 2593 0778 04       		.uleb128 0x4
 2594 0779 92050000 		.4byte	.LASF105
 2595 077d 05       		.byte	0x5
 2596 077e 0A03     		.2byte	0x30a
 2597 0780 51070000 		.4byte	0x751
 2598 0784 14       		.uleb128 0x14
 2599 0785 37000000 		.4byte	.LASF176
 2600 0789 01       		.byte	0x1
 2601 078a 5D05     		.2byte	0x55d
 2602 078c 00000000 		.4byte	.LFB8
 2603 0790 38000000 		.4byte	.LFE8-.LFB8
 2604 0794 01       		.uleb128 0x1
 2605 0795 9C       		.byte	0x9c
 2606 0796 15       		.uleb128 0x15
 2607 0797 32040000 		.4byte	.LASF177
 2608 079b 01       		.byte	0x1
 2609 079c 3707     		.2byte	0x737
 2610 079e 77000000 		.4byte	0x77
 2611 07a2 00000000 		.4byte	.LFB16
 2612 07a6 0C000000 		.4byte	.LFE16-.LFB16
 2613 07aa 01       		.uleb128 0x1
 2614 07ab 9C       		.byte	0x9c
 2615 07ac D1070000 		.4byte	0x7d1
 2616 07b0 16       		.uleb128 0x16
 2617 07b1 62090000 		.4byte	.LASF116
 2618 07b5 01       		.byte	0x1
 2619 07b6 3707     		.2byte	0x737
 2620 07b8 D1070000 		.4byte	0x7d1
 2621 07bc 00000000 		.4byte	.LLST0
 2622 07c0 17       		.uleb128 0x17
 2623 07c1 F3070000 		.4byte	.LASF109
 2624 07c5 01       		.byte	0x1
 2625 07c6 3907     		.2byte	0x739
 2626 07c8 83000000 		.4byte	0x83
 2627 07cc 21000000 		.4byte	.LLST1
 2628 07d0 00       		.byte	0
 2629 07d1 06       		.uleb128 0x6
 2630 07d2 04       		.byte	0x4
 2631 07d3 D7070000 		.4byte	0x7d7
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 88


 2632 07d7 18       		.uleb128 0x18
 2633 07d8 35020000 		.4byte	0x235
 2634 07dc 19       		.uleb128 0x19
 2635 07dd D7060000 		.4byte	.LASF178
 2636 07e1 01       		.byte	0x1
 2637 07e2 DF07     		.2byte	0x7df
 2638 07e4 03       		.byte	0x3
 2639 07e5 0E080000 		.4byte	0x80e
 2640 07e9 1A       		.uleb128 0x1a
 2641 07ea D5040000 		.4byte	.LASF106
 2642 07ee 01       		.byte	0x1
 2643 07ef E107     		.2byte	0x7e1
 2644 07f1 83000000 		.4byte	0x83
 2645 07f5 1A       		.uleb128 0x1a
 2646 07f6 E5020000 		.4byte	.LASF107
 2647 07fa 01       		.byte	0x1
 2648 07fb E207     		.2byte	0x7e2
 2649 07fd 83000000 		.4byte	0x83
 2650 0801 1A       		.uleb128 0x1a
 2651 0802 90060000 		.4byte	.LASF108
 2652 0806 01       		.byte	0x1
 2653 0807 E407     		.2byte	0x7e4
 2654 0809 83000000 		.4byte	0x83
 2655 080d 00       		.byte	0
 2656 080e 1B       		.uleb128 0x1b
 2657 080f 19020000 		.4byte	.LASF132
 2658 0813 01       		.byte	0x1
 2659 0814 2706     		.2byte	0x627
 2660 0816 00000000 		.4byte	.LFB10
 2661 081a 3C010000 		.4byte	.LFE10-.LFB10
 2662 081e 01       		.uleb128 0x1
 2663 081f 9C       		.byte	0x9c
 2664 0820 6B080000 		.4byte	0x86b
 2665 0824 17       		.uleb128 0x17
 2666 0825 2D0A0000 		.4byte	.LASF110
 2667 0829 01       		.byte	0x1
 2668 082a 2906     		.2byte	0x629
 2669 082c 83000000 		.4byte	0x83
 2670 0830 45000000 		.4byte	.LLST2
 2671 0834 1C       		.uleb128 0x1c
 2672 0835 DC070000 		.4byte	0x7dc
 2673 0839 1C000000 		.4byte	.LBB4
 2674 083d B4000000 		.4byte	.LBE4-.LBB4
 2675 0841 01       		.byte	0x1
 2676 0842 3C06     		.2byte	0x63c
 2677 0844 1D       		.uleb128 0x1d
 2678 0845 1C000000 		.4byte	.LBB5
 2679 0849 B4000000 		.4byte	.LBE5-.LBB5
 2680 084d 1E       		.uleb128 0x1e
 2681 084e E9070000 		.4byte	0x7e9
 2682 0852 77000000 		.4byte	.LLST3
 2683 0856 1E       		.uleb128 0x1e
 2684 0857 F5070000 		.4byte	0x7f5
 2685 085b 8A000000 		.4byte	.LLST4
 2686 085f 1E       		.uleb128 0x1e
 2687 0860 01080000 		.4byte	0x801
 2688 0864 AB000000 		.4byte	.LLST5
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 89


 2689 0868 00       		.byte	0
 2690 0869 00       		.byte	0
 2691 086a 00       		.byte	0
 2692 086b 1F       		.uleb128 0x1f
 2693 086c BA090000 		.4byte	.LASF111
 2694 0870 01       		.byte	0x1
 2695 0871 9807     		.2byte	0x798
 2696 0873 00000000 		.4byte	.LFB17
 2697 0877 90000000 		.4byte	.LFE17-.LFB17
 2698 087b 01       		.uleb128 0x1
 2699 087c 9C       		.byte	0x9c
 2700 087d A4080000 		.4byte	0x8a4
 2701 0881 20       		.uleb128 0x20
 2702 0882 08000000 		.4byte	.LVL16
 2703 0886 680E0000 		.4byte	0xe68
 2704 088a 94080000 		.4byte	0x894
 2705 088e 21       		.uleb128 0x21
 2706 088f 01       		.uleb128 0x1
 2707 0890 50       		.byte	0x50
 2708 0891 01       		.uleb128 0x1
 2709 0892 3A       		.byte	0x3a
 2710 0893 00       		.byte	0
 2711 0894 22       		.uleb128 0x22
 2712 0895 62000000 		.4byte	.LVL18
 2713 0899 730E0000 		.4byte	0xe73
 2714 089d 21       		.uleb128 0x21
 2715 089e 01       		.uleb128 0x1
 2716 089f 50       		.byte	0x50
 2717 08a0 01       		.uleb128 0x1
 2718 08a1 3A       		.byte	0x3a
 2719 08a2 00       		.byte	0
 2720 08a3 00       		.byte	0
 2721 08a4 23       		.uleb128 0x23
 2722 08a5 98000000 		.4byte	.LASF112
 2723 08a9 01       		.byte	0x1
 2724 08aa 94       		.byte	0x94
 2725 08ab 00000000 		.4byte	.LFB1
 2726 08af DC010000 		.4byte	.LFE1-.LFB1
 2727 08b3 01       		.uleb128 0x1
 2728 08b4 9C       		.byte	0x9c
 2729 08b5 72090000 		.4byte	0x972
 2730 08b9 24       		.uleb128 0x24
 2731 08ba 8A010000 		.4byte	.LASF113
 2732 08be 01       		.byte	0x1
 2733 08bf 97       		.byte	0x97
 2734 08c0 6B000000 		.4byte	0x6b
 2735 08c4 BE000000 		.4byte	.LLST6
 2736 08c8 24       		.uleb128 0x24
 2737 08c9 2D0A0000 		.4byte	.LASF110
 2738 08cd 01       		.byte	0x1
 2739 08ce 98       		.byte	0x98
 2740 08cf 83000000 		.4byte	0x83
 2741 08d3 08010000 		.4byte	.LLST7
 2742 08d7 25       		.uleb128 0x25
 2743 08d8 5C000000 		.4byte	.LVL19
 2744 08dc 7E0E0000 		.4byte	0xe7e
 2745 08e0 25       		.uleb128 0x25
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 90


 2746 08e1 70000000 		.4byte	.LVL23
 2747 08e5 890E0000 		.4byte	0xe89
 2748 08e9 25       		.uleb128 0x25
 2749 08ea 82000000 		.4byte	.LVL24
 2750 08ee 7E0E0000 		.4byte	0xe7e
 2751 08f2 25       		.uleb128 0x25
 2752 08f3 96000000 		.4byte	.LVL28
 2753 08f7 890E0000 		.4byte	0xe89
 2754 08fb 25       		.uleb128 0x25
 2755 08fc CA000000 		.4byte	.LVL29
 2756 0900 940E0000 		.4byte	0xe94
 2757 0904 25       		.uleb128 0x25
 2758 0905 CE000000 		.4byte	.LVL30
 2759 0909 7E0E0000 		.4byte	0xe7e
 2760 090d 25       		.uleb128 0x25
 2761 090e DC000000 		.4byte	.LVL33
 2762 0912 890E0000 		.4byte	0xe89
 2763 0916 25       		.uleb128 0x25
 2764 0917 E0000000 		.4byte	.LVL34
 2765 091b 7E0E0000 		.4byte	0xe7e
 2766 091f 25       		.uleb128 0x25
 2767 0920 EC000000 		.4byte	.LVL37
 2768 0924 890E0000 		.4byte	0xe89
 2769 0928 25       		.uleb128 0x25
 2770 0929 F0000000 		.4byte	.LVL38
 2771 092d 7E0E0000 		.4byte	0xe7e
 2772 0931 25       		.uleb128 0x25
 2773 0932 04010000 		.4byte	.LVL42
 2774 0936 890E0000 		.4byte	0xe89
 2775 093a 25       		.uleb128 0x25
 2776 093b 08010000 		.4byte	.LVL43
 2777 093f 7E0E0000 		.4byte	0xe7e
 2778 0943 25       		.uleb128 0x25
 2779 0944 1A010000 		.4byte	.LVL47
 2780 0948 890E0000 		.4byte	0xe89
 2781 094c 25       		.uleb128 0x25
 2782 094d 22010000 		.4byte	.LVL48
 2783 0951 9F0E0000 		.4byte	0xe9f
 2784 0955 25       		.uleb128 0x25
 2785 0956 26010000 		.4byte	.LVL49
 2786 095a AA0E0000 		.4byte	0xeaa
 2787 095e 22       		.uleb128 0x22
 2788 095f 2C010000 		.4byte	.LVL50
 2789 0963 B50E0000 		.4byte	0xeb5
 2790 0967 21       		.uleb128 0x21
 2791 0968 01       		.uleb128 0x1
 2792 0969 50       		.byte	0x50
 2793 096a 05       		.uleb128 0x5
 2794 096b 03       		.byte	0x3
 2795 096c 00000000 		.4byte	CapSense_CSXScanISR
 2796 0970 00       		.byte	0
 2797 0971 00       		.byte	0
 2798 0972 26       		.uleb128 0x26
 2799 0973 AF000000 		.4byte	.LASF114
 2800 0977 01       		.byte	0x1
 2801 0978 6603     		.2byte	0x366
 2802 097a 00000000 		.4byte	.LFB6
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 91


 2803 097e 1C000000 		.4byte	.LFE6-.LFB6
 2804 0982 01       		.uleb128 0x1
 2805 0983 9C       		.byte	0x9c
 2806 0984 A5090000 		.4byte	0x9a5
 2807 0988 20       		.uleb128 0x20
 2808 0989 12000000 		.4byte	.LVL51
 2809 098d C00E0000 		.4byte	0xec0
 2810 0991 9B090000 		.4byte	0x99b
 2811 0995 21       		.uleb128 0x21
 2812 0996 01       		.uleb128 0x1
 2813 0997 50       		.byte	0x50
 2814 0998 01       		.uleb128 0x1
 2815 0999 47       		.byte	0x47
 2816 099a 00       		.byte	0
 2817 099b 25       		.uleb128 0x25
 2818 099c 16000000 		.4byte	.LVL52
 2819 09a0 0E080000 		.4byte	0x80e
 2820 09a4 00       		.byte	0
 2821 09a5 1F       		.uleb128 0x1f
 2822 09a6 5D060000 		.4byte	.LASF115
 2823 09aa 01       		.byte	0x1
 2824 09ab B205     		.2byte	0x5b2
 2825 09ad 00000000 		.4byte	.LFB9
 2826 09b1 CC000000 		.4byte	.LFE9-.LFB9
 2827 09b5 01       		.uleb128 0x1
 2828 09b6 9C       		.byte	0x9c
 2829 09b7 5F0A0000 		.4byte	0xa5f
 2830 09bb 16       		.uleb128 0x16
 2831 09bc 7B0B0000 		.4byte	.LASF117
 2832 09c0 01       		.byte	0x1
 2833 09c1 B205     		.2byte	0x5b2
 2834 09c3 83000000 		.4byte	0x83
 2835 09c7 94010000 		.4byte	.LLST8
 2836 09cb 16       		.uleb128 0x16
 2837 09cc D6030000 		.4byte	.LASF118
 2838 09d0 01       		.byte	0x1
 2839 09d1 B205     		.2byte	0x5b2
 2840 09d3 77000000 		.4byte	0x77
 2841 09d7 B3010000 		.4byte	.LLST9
 2842 09db 17       		.uleb128 0x17
 2843 09dc 2F080000 		.4byte	.LASF119
 2844 09e0 01       		.byte	0x1
 2845 09e1 B505     		.2byte	0x5b5
 2846 09e3 83000000 		.4byte	0x83
 2847 09e7 D4010000 		.4byte	.LLST10
 2848 09eb 17       		.uleb128 0x17
 2849 09ec 85040000 		.4byte	.LASF120
 2850 09f0 01       		.byte	0x1
 2851 09f1 B705     		.2byte	0x5b7
 2852 09f3 83000000 		.4byte	0x83
 2853 09f7 03020000 		.4byte	.LLST11
 2854 09fb 17       		.uleb128 0x17
 2855 09fc 6A090000 		.4byte	.LASF121
 2856 0a00 01       		.byte	0x1
 2857 0a01 B905     		.2byte	0x5b9
 2858 0a03 83000000 		.4byte	0x83
 2859 0a07 16020000 		.4byte	.LLST12
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 92


 2860 0a0b 17       		.uleb128 0x17
 2861 0a0c 3B020000 		.4byte	.LASF122
 2862 0a10 01       		.byte	0x1
 2863 0a11 BC05     		.2byte	0x5bc
 2864 0a13 6B000000 		.4byte	0x6b
 2865 0a17 4C020000 		.4byte	.LLST13
 2866 0a1b 17       		.uleb128 0x17
 2867 0a1c 5A010000 		.4byte	.LASF123
 2868 0a20 01       		.byte	0x1
 2869 0a21 BE05     		.2byte	0x5be
 2870 0a23 6B000000 		.4byte	0x6b
 2871 0a27 82020000 		.4byte	.LLST14
 2872 0a2b 20       		.uleb128 0x20
 2873 0a2c 24000000 		.4byte	.LVL56
 2874 0a30 96070000 		.4byte	0x796
 2875 0a34 400A0000 		.4byte	0xa40
 2876 0a38 21       		.uleb128 0x21
 2877 0a39 01       		.uleb128 0x1
 2878 0a3a 50       		.byte	0x50
 2879 0a3b 03       		.uleb128 0x3
 2880 0a3c 74       		.byte	0x74
 2881 0a3d 04       		.sleb128 4
 2882 0a3e 06       		.byte	0x6
 2883 0a3f 00       		.byte	0
 2884 0a40 20       		.uleb128 0x20
 2885 0a41 74000000 		.4byte	.LVL66
 2886 0a45 CB0E0000 		.4byte	0xecb
 2887 0a49 550A0000 		.4byte	0xa55
 2888 0a4d 21       		.uleb128 0x21
 2889 0a4e 01       		.uleb128 0x1
 2890 0a4f 50       		.byte	0x50
 2891 0a50 03       		.uleb128 0x3
 2892 0a51 91       		.byte	0x91
 2893 0a52 64       		.sleb128 -28
 2894 0a53 06       		.byte	0x6
 2895 0a54 00       		.byte	0
 2896 0a55 25       		.uleb128 0x25
 2897 0a56 78000000 		.4byte	.LVL67
 2898 0a5a D60E0000 		.4byte	0xed6
 2899 0a5e 00       		.byte	0
 2900 0a5f 26       		.uleb128 0x26
 2901 0a60 7C030000 		.4byte	.LASF124
 2902 0a64 01       		.byte	0x1
 2903 0a65 8106     		.2byte	0x681
 2904 0a67 00000000 		.4byte	.LFB11
 2905 0a6b 20000000 		.4byte	.LFE11-.LFB11
 2906 0a6f 01       		.uleb128 0x1
 2907 0a70 9C       		.byte	0x9c
 2908 0a71 960A0000 		.4byte	0xa96
 2909 0a75 16       		.uleb128 0x16
 2910 0a76 84010000 		.4byte	.LASF125
 2911 0a7a 01       		.byte	0x1
 2912 0a7b 8106     		.2byte	0x681
 2913 0a7d 960A0000 		.4byte	0xa96
 2914 0a81 B8020000 		.4byte	.LLST15
 2915 0a85 17       		.uleb128 0x17
 2916 0a86 7B010000 		.4byte	.LASF126
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 93


 2917 0a8a 01       		.byte	0x1
 2918 0a8b 8306     		.2byte	0x683
 2919 0a8d 83000000 		.4byte	0x83
 2920 0a91 D9020000 		.4byte	.LLST16
 2921 0a95 00       		.byte	0
 2922 0a96 06       		.uleb128 0x6
 2923 0a97 04       		.byte	0x4
 2924 0a98 9C0A0000 		.4byte	0xa9c
 2925 0a9c 18       		.uleb128 0x18
 2926 0a9d 53060000 		.4byte	0x653
 2927 0aa1 26       		.uleb128 0x26
 2928 0aa2 A1010000 		.4byte	.LASF127
 2929 0aa6 01       		.byte	0x1
 2930 0aa7 A306     		.2byte	0x6a3
 2931 0aa9 00000000 		.4byte	.LFB12
 2932 0aad 20000000 		.4byte	.LFE12-.LFB12
 2933 0ab1 01       		.uleb128 0x1
 2934 0ab2 9C       		.byte	0x9c
 2935 0ab3 D80A0000 		.4byte	0xad8
 2936 0ab7 16       		.uleb128 0x16
 2937 0ab8 FB080000 		.4byte	.LASF128
 2938 0abc 01       		.byte	0x1
 2939 0abd A306     		.2byte	0x6a3
 2940 0abf 960A0000 		.4byte	0xa96
 2941 0ac3 0D030000 		.4byte	.LLST17
 2942 0ac7 17       		.uleb128 0x17
 2943 0ac8 7B010000 		.4byte	.LASF126
 2944 0acc 01       		.byte	0x1
 2945 0acd A506     		.2byte	0x6a5
 2946 0acf 83000000 		.4byte	0x83
 2947 0ad3 2E030000 		.4byte	.LLST18
 2948 0ad7 00       		.byte	0
 2949 0ad8 26       		.uleb128 0x26
 2950 0ad9 370A0000 		.4byte	.LASF129
 2951 0add 01       		.byte	0x1
 2952 0ade 8502     		.2byte	0x285
 2953 0ae0 00000000 		.4byte	.LFB5
 2954 0ae4 6C000000 		.4byte	.LFE5-.LFB5
 2955 0ae8 01       		.uleb128 0x1
 2956 0ae9 9C       		.byte	0x9c
 2957 0aea 1D0B0000 		.4byte	0xb1d
 2958 0aee 25       		.uleb128 0x25
 2959 0aef 2E000000 		.4byte	.LVL87
 2960 0af3 5F0A0000 		.4byte	0xa5f
 2961 0af7 25       		.uleb128 0x25
 2962 0af8 34000000 		.4byte	.LVL88
 2963 0afc A10A0000 		.4byte	0xaa1
 2964 0b00 20       		.uleb128 0x20
 2965 0b01 4A000000 		.4byte	.LVL89
 2966 0b05 C00E0000 		.4byte	0xec0
 2967 0b09 130B0000 		.4byte	0xb13
 2968 0b0d 21       		.uleb128 0x21
 2969 0b0e 01       		.uleb128 0x1
 2970 0b0f 50       		.byte	0x50
 2971 0b10 01       		.uleb128 0x1
 2972 0b11 47       		.byte	0x47
 2973 0b12 00       		.byte	0
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 94


 2974 0b13 25       		.uleb128 0x25
 2975 0b14 4E000000 		.4byte	.LVL90
 2976 0b18 0E080000 		.4byte	0x80e
 2977 0b1c 00       		.byte	0
 2978 0b1d 26       		.uleb128 0x26
 2979 0b1e 3C050000 		.4byte	.LASF130
 2980 0b22 01       		.byte	0x1
 2981 0b23 C606     		.2byte	0x6c6
 2982 0b25 00000000 		.4byte	.LFB13
 2983 0b29 0C000000 		.4byte	.LFE13-.LFB13
 2984 0b2d 01       		.uleb128 0x1
 2985 0b2e 9C       		.byte	0x9c
 2986 0b2f 500B0000 		.4byte	0xb50
 2987 0b33 27       		.uleb128 0x27
 2988 0b34 84010000 		.4byte	.LASF125
 2989 0b38 01       		.byte	0x1
 2990 0b39 C606     		.2byte	0x6c6
 2991 0b3b 960A0000 		.4byte	0xa96
 2992 0b3f 01       		.uleb128 0x1
 2993 0b40 50       		.byte	0x50
 2994 0b41 28       		.uleb128 0x28
 2995 0b42 7B010000 		.4byte	.LASF126
 2996 0b46 01       		.byte	0x1
 2997 0b47 C806     		.2byte	0x6c8
 2998 0b49 83000000 		.4byte	0x83
 2999 0b4d 01       		.uleb128 0x1
 3000 0b4e 53       		.byte	0x53
 3001 0b4f 00       		.byte	0
 3002 0b50 26       		.uleb128 0x26
 3003 0b51 19040000 		.4byte	.LASF131
 3004 0b55 01       		.byte	0x1
 3005 0b56 E506     		.2byte	0x6e5
 3006 0b58 00000000 		.4byte	.LFB14
 3007 0b5c 2E000000 		.4byte	.LFE14-.LFB14
 3008 0b60 01       		.uleb128 0x1
 3009 0b61 9C       		.byte	0x9c
 3010 0b62 850B0000 		.4byte	0xb85
 3011 0b66 27       		.uleb128 0x27
 3012 0b67 FB080000 		.4byte	.LASF128
 3013 0b6b 01       		.byte	0x1
 3014 0b6c E506     		.2byte	0x6e5
 3015 0b6e 960A0000 		.4byte	0xa96
 3016 0b72 01       		.uleb128 0x1
 3017 0b73 50       		.byte	0x50
 3018 0b74 17       		.uleb128 0x17
 3019 0b75 7B010000 		.4byte	.LASF126
 3020 0b79 01       		.byte	0x1
 3021 0b7a E706     		.2byte	0x6e7
 3022 0b7c 83000000 		.4byte	0x83
 3023 0b80 57030000 		.4byte	.LLST19
 3024 0b84 00       		.byte	0
 3025 0b85 29       		.uleb128 0x29
 3026 0b86 7B090000 		.4byte	.LASF133
 3027 0b8a 01       		.byte	0x1
 3028 0b8b 9303     		.2byte	0x393
 3029 0b8d 00000000 		.4byte	.LFB7
 3030 0b91 DC000000 		.4byte	.LFE7-.LFB7
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 95


 3031 0b95 01       		.uleb128 0x1
 3032 0b96 9C       		.byte	0x9c
 3033 0b97 ED0B0000 		.4byte	0xbed
 3034 0b9b 25       		.uleb128 0x25
 3035 0b9c 1C000000 		.4byte	.LVL103
 3036 0ba0 1D0B0000 		.4byte	0xb1d
 3037 0ba4 25       		.uleb128 0x25
 3038 0ba5 3E000000 		.4byte	.LVL104
 3039 0ba9 5F0A0000 		.4byte	0xa5f
 3040 0bad 25       		.uleb128 0x25
 3041 0bae 4A000000 		.4byte	.LVL105
 3042 0bb2 0E080000 		.4byte	0x80e
 3043 0bb6 25       		.uleb128 0x25
 3044 0bb7 62000000 		.4byte	.LVL106
 3045 0bbb 500B0000 		.4byte	0xb50
 3046 0bbf 25       		.uleb128 0x25
 3047 0bc0 6C000000 		.4byte	.LVL107
 3048 0bc4 A10A0000 		.4byte	0xaa1
 3049 0bc8 25       		.uleb128 0x25
 3050 0bc9 88000000 		.4byte	.LVL108
 3051 0bcd 5F0A0000 		.4byte	0xa5f
 3052 0bd1 25       		.uleb128 0x25
 3053 0bd2 94000000 		.4byte	.LVL109
 3054 0bd6 0E080000 		.4byte	0x80e
 3055 0bda 25       		.uleb128 0x25
 3056 0bdb 9E000000 		.4byte	.LVL110
 3057 0bdf 500B0000 		.4byte	0xb50
 3058 0be3 25       		.uleb128 0x25
 3059 0be4 AA000000 		.4byte	.LVL111
 3060 0be8 E10E0000 		.4byte	0xee1
 3061 0bec 00       		.byte	0
 3062 0bed 26       		.uleb128 0x26
 3063 0bee 0E060000 		.4byte	.LASF134
 3064 0bf2 01       		.byte	0x1
 3065 0bf3 3B01     		.2byte	0x13b
 3066 0bf5 00000000 		.4byte	.LFB2
 3067 0bf9 24000000 		.4byte	.LFE2-.LFB2
 3068 0bfd 01       		.uleb128 0x1
 3069 0bfe 9C       		.byte	0x9c
 3070 0bff 160C0000 		.4byte	0xc16
 3071 0c03 25       		.uleb128 0x25
 3072 0c04 12000000 		.4byte	.LVL112
 3073 0c08 1D0B0000 		.4byte	0xb1d
 3074 0c0c 25       		.uleb128 0x25
 3075 0c0d 18000000 		.4byte	.LVL113
 3076 0c11 500B0000 		.4byte	0xb50
 3077 0c15 00       		.byte	0
 3078 0c16 26       		.uleb128 0x26
 3079 0c17 FD020000 		.4byte	.LASF135
 3080 0c1b 01       		.byte	0x1
 3081 0c1c 9601     		.2byte	0x196
 3082 0c1e 00000000 		.4byte	.LFB3
 3083 0c22 6C000000 		.4byte	.LFE3-.LFB3
 3084 0c26 01       		.uleb128 0x1
 3085 0c27 9C       		.byte	0x9c
 3086 0c28 A60C0000 		.4byte	0xca6
 3087 0c2c 16       		.uleb128 0x16
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 96


 3088 0c2d 7B0B0000 		.4byte	.LASF117
 3089 0c31 01       		.byte	0x1
 3090 0c32 9601     		.2byte	0x196
 3091 0c34 83000000 		.4byte	0x83
 3092 0c38 80030000 		.4byte	.LLST20
 3093 0c3c 17       		.uleb128 0x17
 3094 0c3d D40A0000 		.4byte	.LASF136
 3095 0c41 01       		.byte	0x1
 3096 0c42 9901     		.2byte	0x199
 3097 0c44 A60C0000 		.4byte	0xca6
 3098 0c48 AC030000 		.4byte	.LLST21
 3099 0c4c 17       		.uleb128 0x17
 3100 0c4d 2D0A0000 		.4byte	.LASF110
 3101 0c51 01       		.byte	0x1
 3102 0c52 9C01     		.2byte	0x19c
 3103 0c54 83000000 		.4byte	0x83
 3104 0c58 BF030000 		.4byte	.LLST22
 3105 0c5c 17       		.uleb128 0x17
 3106 0c5d AA030000 		.4byte	.LASF137
 3107 0c61 01       		.byte	0x1
 3108 0c62 9D01     		.2byte	0x19d
 3109 0c64 83000000 		.4byte	0x83
 3110 0c68 EF030000 		.4byte	.LLST23
 3111 0c6c 20       		.uleb128 0x20
 3112 0c6d 10000000 		.4byte	.LVL116
 3113 0c71 EC0E0000 		.4byte	0xeec
 3114 0c75 7F0C0000 		.4byte	0xc7f
 3115 0c79 21       		.uleb128 0x21
 3116 0c7a 01       		.uleb128 0x1
 3117 0c7b 50       		.byte	0x50
 3118 0c7c 01       		.uleb128 0x1
 3119 0c7d 32       		.byte	0x32
 3120 0c7e 00       		.byte	0
 3121 0c7f 25       		.uleb128 0x25
 3122 0c80 14000000 		.4byte	.LVL117
 3123 0c84 ED0B0000 		.4byte	0xbed
 3124 0c88 20       		.uleb128 0x20
 3125 0c89 30000000 		.4byte	.LVL120
 3126 0c8d 96070000 		.4byte	0x796
 3127 0c91 9C0C0000 		.4byte	0xc9c
 3128 0c95 21       		.uleb128 0x21
 3129 0c96 01       		.uleb128 0x1
 3130 0c97 50       		.byte	0x50
 3131 0c98 02       		.uleb128 0x2
 3132 0c99 75       		.byte	0x75
 3133 0c9a 00       		.sleb128 0
 3134 0c9b 00       		.byte	0
 3135 0c9c 25       		.uleb128 0x25
 3136 0c9d 4C000000 		.4byte	.LVL127
 3137 0ca1 9F0E0000 		.4byte	0xe9f
 3138 0ca5 00       		.byte	0
 3139 0ca6 06       		.uleb128 0x6
 3140 0ca7 04       		.byte	0x4
 3141 0ca8 35020000 		.4byte	0x235
 3142 0cac 1F       		.uleb128 0x1f
 3143 0cad A0060000 		.4byte	.LASF138
 3144 0cb1 01       		.byte	0x1
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 97


 3145 0cb2 0402     		.2byte	0x204
 3146 0cb4 00000000 		.4byte	.LFB4
 3147 0cb8 84000000 		.4byte	.LFE4-.LFB4
 3148 0cbc 01       		.uleb128 0x1
 3149 0cbd 9C       		.byte	0x9c
 3150 0cbe 2A0D0000 		.4byte	0xd2a
 3151 0cc2 16       		.uleb128 0x16
 3152 0cc3 7B0B0000 		.4byte	.LASF117
 3153 0cc7 01       		.byte	0x1
 3154 0cc8 0402     		.2byte	0x204
 3155 0cca 83000000 		.4byte	0x83
 3156 0cce 1A040000 		.4byte	.LLST24
 3157 0cd2 16       		.uleb128 0x16
 3158 0cd3 10020000 		.4byte	.LASF139
 3159 0cd7 01       		.byte	0x1
 3160 0cd8 0402     		.2byte	0x204
 3161 0cda 83000000 		.4byte	0x83
 3162 0cde 3B040000 		.4byte	.LLST25
 3163 0ce2 17       		.uleb128 0x17
 3164 0ce3 F5020000 		.4byte	.LASF140
 3165 0ce7 01       		.byte	0x1
 3166 0ce8 0602     		.2byte	0x206
 3167 0cea 83000000 		.4byte	0x83
 3168 0cee 67040000 		.4byte	.LLST26
 3169 0cf2 17       		.uleb128 0x17
 3170 0cf3 99010000 		.4byte	.LASF141
 3171 0cf7 01       		.byte	0x1
 3172 0cf8 0702     		.2byte	0x207
 3173 0cfa 83000000 		.4byte	0x83
 3174 0cfe 7A040000 		.4byte	.LLST27
 3175 0d02 20       		.uleb128 0x20
 3176 0d03 08000000 		.4byte	.LVL131
 3177 0d07 160C0000 		.4byte	0xc16
 3178 0d0b 170D0000 		.4byte	0xd17
 3179 0d0f 21       		.uleb128 0x21
 3180 0d10 01       		.uleb128 0x1
 3181 0d11 50       		.byte	0x50
 3182 0d12 03       		.uleb128 0x3
 3183 0d13 F3       		.byte	0xf3
 3184 0d14 01       		.uleb128 0x1
 3185 0d15 50       		.byte	0x50
 3186 0d16 00       		.byte	0
 3187 0d17 25       		.uleb128 0x25
 3188 0d18 58000000 		.4byte	.LVL138
 3189 0d1c 5F0A0000 		.4byte	0xa5f
 3190 0d20 25       		.uleb128 0x25
 3191 0d21 5E000000 		.4byte	.LVL139
 3192 0d25 A10A0000 		.4byte	0xaa1
 3193 0d29 00       		.byte	0
 3194 0d2a 2A       		.uleb128 0x2a
 3195 0d2b 58070000 		.4byte	.LASF179
 3196 0d2f 01       		.byte	0x1
 3197 0d30 0C07     		.2byte	0x70c
 3198 0d32 83000000 		.4byte	0x83
 3199 0d36 00000000 		.4byte	.LFB15
 3200 0d3a 14000000 		.4byte	.LFE15-.LFB15
 3201 0d3e 01       		.uleb128 0x1
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 98


 3202 0d3f 9C       		.byte	0x9c
 3203 0d40 710D0000 		.4byte	0xd71
 3204 0d44 16       		.uleb128 0x16
 3205 0d45 7B0B0000 		.4byte	.LASF117
 3206 0d49 01       		.byte	0x1
 3207 0d4a 0C07     		.2byte	0x70c
 3208 0d4c 83000000 		.4byte	0x83
 3209 0d50 98040000 		.4byte	.LLST28
 3210 0d54 28       		.uleb128 0x28
 3211 0d55 EC080000 		.4byte	.LASF142
 3212 0d59 01       		.byte	0x1
 3213 0d5a 0E07     		.2byte	0x70e
 3214 0d5c 83000000 		.4byte	0x83
 3215 0d60 01       		.uleb128 0x1
 3216 0d61 50       		.byte	0x50
 3217 0d62 28       		.uleb128 0x28
 3218 0d63 33020000 		.4byte	.LASF143
 3219 0d67 01       		.byte	0x1
 3220 0d68 1207     		.2byte	0x712
 3221 0d6a A60C0000 		.4byte	0xca6
 3222 0d6e 01       		.uleb128 0x1
 3223 0d6f 53       		.byte	0x53
 3224 0d70 00       		.byte	0
 3225 0d71 2B       		.uleb128 0x2b
 3226 0d72 2D070000 		.4byte	.LASF144
 3227 0d76 01       		.byte	0x1
 3228 0d77 49       		.byte	0x49
 3229 0d78 960A0000 		.4byte	0xa96
 3230 0d7c 05       		.uleb128 0x5
 3231 0d7d 03       		.byte	0x3
 3232 0d7e 0C000000 		.4byte	CapSense_curTxIOPtr
 3233 0d82 2B       		.uleb128 0x2b
 3234 0d83 60050000 		.4byte	.LASF145
 3235 0d87 01       		.byte	0x1
 3236 0d88 4B       		.byte	0x4b
 3237 0d89 960A0000 		.4byte	0xa96
 3238 0d8d 05       		.uleb128 0x5
 3239 0d8e 03       		.byte	0x3
 3240 0d8f 08000000 		.4byte	CapSense_curRxIOPtr
 3241 0d93 2B       		.uleb128 0x2b
 3242 0d94 40060000 		.4byte	.LASF146
 3243 0d98 01       		.byte	0x1
 3244 0d99 4D       		.byte	0x4d
 3245 0d9a 77000000 		.4byte	0x77
 3246 0d9e 05       		.uleb128 0x5
 3247 0d9f 03       		.byte	0x3
 3248 0da0 06000000 		.4byte	CapSense_curWdgtTotalRx
 3249 0da4 2B       		.uleb128 0x2b
 3250 0da5 D2070000 		.4byte	.LASF147
 3251 0da9 01       		.byte	0x1
 3252 0daa 4F       		.byte	0x4f
 3253 0dab 77000000 		.4byte	0x77
 3254 0daf 05       		.uleb128 0x5
 3255 0db0 03       		.byte	0x3
 3256 0db1 04000000 		.4byte	CapSense_curWdgtTotalTx
 3257 0db5 2B       		.uleb128 0x2b
 3258 0db6 19000000 		.4byte	.LASF148
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 99


 3259 0dba 01       		.byte	0x1
 3260 0dbb 51       		.byte	0x51
 3261 0dbc 77000000 		.4byte	0x77
 3262 0dc0 05       		.uleb128 0x5
 3263 0dc1 03       		.byte	0x3
 3264 0dc2 10000000 		.4byte	CapSense_eleCsxDisconnectFlag
 3265 0dc6 2C       		.uleb128 0x2c
 3266 0dc7 B6050000 		.4byte	.LASF149
 3267 0dcb 05       		.byte	0x5
 3268 0dcc 9E04     		.2byte	0x49e
 3269 0dce C2050000 		.4byte	0x5c2
 3270 0dd2 2C       		.uleb128 0x2c
 3271 0dd3 69080000 		.4byte	.LASF150
 3272 0dd7 05       		.byte	0x5
 3273 0dd8 9F04     		.2byte	0x49f
 3274 0dda DE0D0000 		.4byte	0xdde
 3275 0dde 18       		.uleb128 0x18
 3276 0ddf 78070000 		.4byte	0x778
 3277 0de3 2D       		.uleb128 0x2d
 3278 0de4 79060000 		.4byte	.LASF151
 3279 0de8 01       		.byte	0x1
 3280 0de9 40       		.byte	0x40
 3281 0dea A9000000 		.4byte	0xa9
 3282 0dee 05       		.uleb128 0x5
 3283 0def 03       		.byte	0x3
 3284 0df0 00000000 		.4byte	CapSense_csxScanPeriod
 3285 0df4 2D       		.uleb128 0x2d
 3286 0df5 7D050000 		.4byte	.LASF152
 3287 0df9 01       		.byte	0x1
 3288 0dfa 42       		.byte	0x42
 3289 0dfb A9000000 		.4byte	0xa9
 3290 0dff 05       		.uleb128 0x5
 3291 0e00 03       		.byte	0x3
 3292 0e01 00000000 		.4byte	CapSense_csxRawCount
 3293 0e05 2D       		.uleb128 0x2d
 3294 0e06 3F010000 		.4byte	.LASF153
 3295 0e0a 01       		.byte	0x1
 3296 0e0b 73       		.byte	0x73
 3297 0e0c BF000000 		.4byte	0xbf
 3298 0e10 05       		.uleb128 0x5
 3299 0e11 03       		.byte	0x3
 3300 0e12 00000000 		.4byte	CapSense_CSXPostScanApiPtr
 3301 0e16 2E       		.uleb128 0x2e
 3302 0e17 5D0B0000 		.4byte	.LASF154
 3303 0e1b 06       		.byte	0x6
 3304 0e1c 9D       		.byte	0x9d
 3305 0e1d A4000000 		.4byte	0xa4
 3306 0e21 2E       		.uleb128 0x2e
 3307 0e22 3E030000 		.4byte	.LASF155
 3308 0e26 06       		.byte	0x6
 3309 0e27 9E       		.byte	0x9e
 3310 0e28 A4000000 		.4byte	0xa4
 3311 0e2c 2E       		.uleb128 0x2e
 3312 0e2d 840B0000 		.4byte	.LASF156
 3313 0e31 06       		.byte	0x6
 3314 0e32 9F       		.byte	0x9f
 3315 0e33 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 100


 3316 0e37 2E       		.uleb128 0x2e
 3317 0e38 830A0000 		.4byte	.LASF157
 3318 0e3c 06       		.byte	0x6
 3319 0e3d A1       		.byte	0xa1
 3320 0e3e 33070000 		.4byte	0x733
 3321 0e42 2E       		.uleb128 0x2e
 3322 0e43 A50A0000 		.4byte	.LASF158
 3323 0e47 06       		.byte	0x6
 3324 0e48 A8       		.byte	0xa8
 3325 0e49 4D0E0000 		.4byte	0xe4d
 3326 0e4d 18       		.uleb128 0x18
 3327 0e4e 6B000000 		.4byte	0x6b
 3328 0e52 2E       		.uleb128 0x2e
 3329 0e53 00000000 		.4byte	.LASF159
 3330 0e57 06       		.byte	0x6
 3331 0e58 AE       		.byte	0xae
 3332 0e59 5D0E0000 		.4byte	0xe5d
 3333 0e5d 06       		.uleb128 0x6
 3334 0e5e 04       		.byte	0x4
 3335 0e5f 630E0000 		.4byte	0xe63
 3336 0e63 18       		.uleb128 0x18
 3337 0e64 45070000 		.4byte	0x745
 3338 0e68 2F       		.uleb128 0x2f
 3339 0e69 B7010000 		.4byte	.LASF160
 3340 0e6d B7010000 		.4byte	.LASF160
 3341 0e71 07       		.byte	0x7
 3342 0e72 C5       		.byte	0xc5
 3343 0e73 2F       		.uleb128 0x2f
 3344 0e74 210A0000 		.4byte	.LASF161
 3345 0e78 210A0000 		.4byte	.LASF161
 3346 0e7c 07       		.byte	0x7
 3347 0e7d C3       		.byte	0xc3
 3348 0e7e 2F       		.uleb128 0x2f
 3349 0e7f 6C0A0000 		.4byte	.LASF162
 3350 0e83 6C0A0000 		.4byte	.LASF162
 3351 0e87 07       		.byte	0x7
 3352 0e88 E5       		.byte	0xe5
 3353 0e89 2F       		.uleb128 0x2f
 3354 0e8a 9B040000 		.4byte	.LASF163
 3355 0e8e 9B040000 		.4byte	.LASF163
 3356 0e92 07       		.byte	0x7
 3357 0e93 E6       		.byte	0xe6
 3358 0e94 2F       		.uleb128 0x2f
 3359 0e95 74000000 		.4byte	.LASF164
 3360 0e99 74000000 		.4byte	.LASF164
 3361 0e9d 06       		.byte	0x6
 3362 0e9e 93       		.byte	0x93
 3363 0e9f 2F       		.uleb128 0x2f
 3364 0ea0 C4010000 		.4byte	.LASF165
 3365 0ea4 C4010000 		.4byte	.LASF165
 3366 0ea8 06       		.byte	0x6
 3367 0ea9 68       		.byte	0x68
 3368 0eaa 2F       		.uleb128 0x2f
 3369 0eab 54000000 		.4byte	.LASF166
 3370 0eaf 54000000 		.4byte	.LASF166
 3371 0eb3 06       		.byte	0x6
 3372 0eb4 6D       		.byte	0x6d
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 101


 3373 0eb5 2F       		.uleb128 0x2f
 3374 0eb6 82070000 		.4byte	.LASF167
 3375 0eba 82070000 		.4byte	.LASF167
 3376 0ebe 06       		.byte	0x6
 3377 0ebf 6B       		.byte	0x6b
 3378 0ec0 2F       		.uleb128 0x2f
 3379 0ec1 15030000 		.4byte	.LASF168
 3380 0ec5 15030000 		.4byte	.LASF168
 3381 0ec9 07       		.byte	0x7
 3382 0eca DA       		.byte	0xda
 3383 0ecb 2F       		.uleb128 0x2f
 3384 0ecc 1A080000 		.4byte	.LASF169
 3385 0ed0 1A080000 		.4byte	.LASF169
 3386 0ed4 06       		.byte	0x6
 3387 0ed5 49       		.byte	0x49
 3388 0ed6 2F       		.uleb128 0x2f
 3389 0ed7 A8050000 		.4byte	.LASF170
 3390 0edb A8050000 		.4byte	.LASF170
 3391 0edf 06       		.byte	0x6
 3392 0ee0 4A       		.byte	0x4a
 3393 0ee1 2F       		.uleb128 0x2f
 3394 0ee2 E60A0000 		.4byte	.LASF171
 3395 0ee6 E60A0000 		.4byte	.LASF171
 3396 0eea 06       		.byte	0x6
 3397 0eeb 6C       		.byte	0x6c
 3398 0eec 2F       		.uleb128 0x2f
 3399 0eed 4F0A0000 		.4byte	.LASF172
 3400 0ef1 4F0A0000 		.4byte	.LASF172
 3401 0ef5 06       		.byte	0x6
 3402 0ef6 6E       		.byte	0x6e
 3403 0ef7 00       		.byte	0
 3404              		.section	.debug_abbrev,"",%progbits
 3405              	.Ldebug_abbrev0:
 3406 0000 01       		.uleb128 0x1
 3407 0001 11       		.uleb128 0x11
 3408 0002 01       		.byte	0x1
 3409 0003 25       		.uleb128 0x25
 3410 0004 0E       		.uleb128 0xe
 3411 0005 13       		.uleb128 0x13
 3412 0006 0B       		.uleb128 0xb
 3413 0007 03       		.uleb128 0x3
 3414 0008 0E       		.uleb128 0xe
 3415 0009 1B       		.uleb128 0x1b
 3416 000a 0E       		.uleb128 0xe
 3417 000b 55       		.uleb128 0x55
 3418 000c 17       		.uleb128 0x17
 3419 000d 11       		.uleb128 0x11
 3420 000e 01       		.uleb128 0x1
 3421 000f 10       		.uleb128 0x10
 3422 0010 17       		.uleb128 0x17
 3423 0011 00       		.byte	0
 3424 0012 00       		.byte	0
 3425 0013 02       		.uleb128 0x2
 3426 0014 24       		.uleb128 0x24
 3427 0015 00       		.byte	0
 3428 0016 0B       		.uleb128 0xb
 3429 0017 0B       		.uleb128 0xb
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 102


 3430 0018 3E       		.uleb128 0x3e
 3431 0019 0B       		.uleb128 0xb
 3432 001a 03       		.uleb128 0x3
 3433 001b 0E       		.uleb128 0xe
 3434 001c 00       		.byte	0
 3435 001d 00       		.byte	0
 3436 001e 03       		.uleb128 0x3
 3437 001f 24       		.uleb128 0x24
 3438 0020 00       		.byte	0
 3439 0021 0B       		.uleb128 0xb
 3440 0022 0B       		.uleb128 0xb
 3441 0023 3E       		.uleb128 0x3e
 3442 0024 0B       		.uleb128 0xb
 3443 0025 03       		.uleb128 0x3
 3444 0026 08       		.uleb128 0x8
 3445 0027 00       		.byte	0
 3446 0028 00       		.byte	0
 3447 0029 04       		.uleb128 0x4
 3448 002a 16       		.uleb128 0x16
 3449 002b 00       		.byte	0
 3450 002c 03       		.uleb128 0x3
 3451 002d 0E       		.uleb128 0xe
 3452 002e 3A       		.uleb128 0x3a
 3453 002f 0B       		.uleb128 0xb
 3454 0030 3B       		.uleb128 0x3b
 3455 0031 05       		.uleb128 0x5
 3456 0032 49       		.uleb128 0x49
 3457 0033 13       		.uleb128 0x13
 3458 0034 00       		.byte	0
 3459 0035 00       		.byte	0
 3460 0036 05       		.uleb128 0x5
 3461 0037 35       		.uleb128 0x35
 3462 0038 00       		.byte	0
 3463 0039 49       		.uleb128 0x49
 3464 003a 13       		.uleb128 0x13
 3465 003b 00       		.byte	0
 3466 003c 00       		.byte	0
 3467 003d 06       		.uleb128 0x6
 3468 003e 0F       		.uleb128 0xf
 3469 003f 00       		.byte	0
 3470 0040 0B       		.uleb128 0xb
 3471 0041 0B       		.uleb128 0xb
 3472 0042 49       		.uleb128 0x49
 3473 0043 13       		.uleb128 0x13
 3474 0044 00       		.byte	0
 3475 0045 00       		.byte	0
 3476 0046 07       		.uleb128 0x7
 3477 0047 15       		.uleb128 0x15
 3478 0048 00       		.byte	0
 3479 0049 27       		.uleb128 0x27
 3480 004a 19       		.uleb128 0x19
 3481 004b 00       		.byte	0
 3482 004c 00       		.byte	0
 3483 004d 08       		.uleb128 0x8
 3484 004e 0F       		.uleb128 0xf
 3485 004f 00       		.byte	0
 3486 0050 0B       		.uleb128 0xb
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 103


 3487 0051 0B       		.uleb128 0xb
 3488 0052 00       		.byte	0
 3489 0053 00       		.byte	0
 3490 0054 09       		.uleb128 0x9
 3491 0055 13       		.uleb128 0x13
 3492 0056 01       		.byte	0x1
 3493 0057 0B       		.uleb128 0xb
 3494 0058 0B       		.uleb128 0xb
 3495 0059 3A       		.uleb128 0x3a
 3496 005a 0B       		.uleb128 0xb
 3497 005b 3B       		.uleb128 0x3b
 3498 005c 0B       		.uleb128 0xb
 3499 005d 01       		.uleb128 0x1
 3500 005e 13       		.uleb128 0x13
 3501 005f 00       		.byte	0
 3502 0060 00       		.byte	0
 3503 0061 0A       		.uleb128 0xa
 3504 0062 0D       		.uleb128 0xd
 3505 0063 00       		.byte	0
 3506 0064 03       		.uleb128 0x3
 3507 0065 0E       		.uleb128 0xe
 3508 0066 3A       		.uleb128 0x3a
 3509 0067 0B       		.uleb128 0xb
 3510 0068 3B       		.uleb128 0x3b
 3511 0069 0B       		.uleb128 0xb
 3512 006a 49       		.uleb128 0x49
 3513 006b 13       		.uleb128 0x13
 3514 006c 38       		.uleb128 0x38
 3515 006d 0B       		.uleb128 0xb
 3516 006e 00       		.byte	0
 3517 006f 00       		.byte	0
 3518 0070 0B       		.uleb128 0xb
 3519 0071 16       		.uleb128 0x16
 3520 0072 00       		.byte	0
 3521 0073 03       		.uleb128 0x3
 3522 0074 0E       		.uleb128 0xe
 3523 0075 3A       		.uleb128 0x3a
 3524 0076 0B       		.uleb128 0xb
 3525 0077 3B       		.uleb128 0x3b
 3526 0078 0B       		.uleb128 0xb
 3527 0079 49       		.uleb128 0x49
 3528 007a 13       		.uleb128 0x13
 3529 007b 00       		.byte	0
 3530 007c 00       		.byte	0
 3531 007d 0C       		.uleb128 0xc
 3532 007e 04       		.uleb128 0x4
 3533 007f 01       		.byte	0x1
 3534 0080 0B       		.uleb128 0xb
 3535 0081 0B       		.uleb128 0xb
 3536 0082 49       		.uleb128 0x49
 3537 0083 13       		.uleb128 0x13
 3538 0084 3A       		.uleb128 0x3a
 3539 0085 0B       		.uleb128 0xb
 3540 0086 3B       		.uleb128 0x3b
 3541 0087 0B       		.uleb128 0xb
 3542 0088 01       		.uleb128 0x1
 3543 0089 13       		.uleb128 0x13
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 104


 3544 008a 00       		.byte	0
 3545 008b 00       		.byte	0
 3546 008c 0D       		.uleb128 0xd
 3547 008d 28       		.uleb128 0x28
 3548 008e 00       		.byte	0
 3549 008f 03       		.uleb128 0x3
 3550 0090 0E       		.uleb128 0xe
 3551 0091 1C       		.uleb128 0x1c
 3552 0092 0B       		.uleb128 0xb
 3553 0093 00       		.byte	0
 3554 0094 00       		.byte	0
 3555 0095 0E       		.uleb128 0xe
 3556 0096 01       		.uleb128 0x1
 3557 0097 01       		.byte	0x1
 3558 0098 49       		.uleb128 0x49
 3559 0099 13       		.uleb128 0x13
 3560 009a 01       		.uleb128 0x1
 3561 009b 13       		.uleb128 0x13
 3562 009c 00       		.byte	0
 3563 009d 00       		.byte	0
 3564 009e 0F       		.uleb128 0xf
 3565 009f 21       		.uleb128 0x21
 3566 00a0 00       		.byte	0
 3567 00a1 49       		.uleb128 0x49
 3568 00a2 13       		.uleb128 0x13
 3569 00a3 2F       		.uleb128 0x2f
 3570 00a4 0B       		.uleb128 0xb
 3571 00a5 00       		.byte	0
 3572 00a6 00       		.byte	0
 3573 00a7 10       		.uleb128 0x10
 3574 00a8 0D       		.uleb128 0xd
 3575 00a9 00       		.byte	0
 3576 00aa 03       		.uleb128 0x3
 3577 00ab 0E       		.uleb128 0xe
 3578 00ac 3A       		.uleb128 0x3a
 3579 00ad 0B       		.uleb128 0xb
 3580 00ae 3B       		.uleb128 0x3b
 3581 00af 05       		.uleb128 0x5
 3582 00b0 49       		.uleb128 0x49
 3583 00b1 13       		.uleb128 0x13
 3584 00b2 38       		.uleb128 0x38
 3585 00b3 0B       		.uleb128 0xb
 3586 00b4 00       		.byte	0
 3587 00b5 00       		.byte	0
 3588 00b6 11       		.uleb128 0x11
 3589 00b7 13       		.uleb128 0x13
 3590 00b8 01       		.byte	0x1
 3591 00b9 0B       		.uleb128 0xb
 3592 00ba 0B       		.uleb128 0xb
 3593 00bb 3A       		.uleb128 0x3a
 3594 00bc 0B       		.uleb128 0xb
 3595 00bd 3B       		.uleb128 0x3b
 3596 00be 05       		.uleb128 0x5
 3597 00bf 01       		.uleb128 0x1
 3598 00c0 13       		.uleb128 0x13
 3599 00c1 00       		.byte	0
 3600 00c2 00       		.byte	0
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 105


 3601 00c3 12       		.uleb128 0x12
 3602 00c4 0D       		.uleb128 0xd
 3603 00c5 00       		.byte	0
 3604 00c6 03       		.uleb128 0x3
 3605 00c7 08       		.uleb128 0x8
 3606 00c8 3A       		.uleb128 0x3a
 3607 00c9 0B       		.uleb128 0xb
 3608 00ca 3B       		.uleb128 0x3b
 3609 00cb 05       		.uleb128 0x5
 3610 00cc 49       		.uleb128 0x49
 3611 00cd 13       		.uleb128 0x13
 3612 00ce 38       		.uleb128 0x38
 3613 00cf 0B       		.uleb128 0xb
 3614 00d0 00       		.byte	0
 3615 00d1 00       		.byte	0
 3616 00d2 13       		.uleb128 0x13
 3617 00d3 26       		.uleb128 0x26
 3618 00d4 00       		.byte	0
 3619 00d5 00       		.byte	0
 3620 00d6 00       		.byte	0
 3621 00d7 14       		.uleb128 0x14
 3622 00d8 2E       		.uleb128 0x2e
 3623 00d9 00       		.byte	0
 3624 00da 03       		.uleb128 0x3
 3625 00db 0E       		.uleb128 0xe
 3626 00dc 3A       		.uleb128 0x3a
 3627 00dd 0B       		.uleb128 0xb
 3628 00de 3B       		.uleb128 0x3b
 3629 00df 05       		.uleb128 0x5
 3630 00e0 27       		.uleb128 0x27
 3631 00e1 19       		.uleb128 0x19
 3632 00e2 11       		.uleb128 0x11
 3633 00e3 01       		.uleb128 0x1
 3634 00e4 12       		.uleb128 0x12
 3635 00e5 06       		.uleb128 0x6
 3636 00e6 40       		.uleb128 0x40
 3637 00e7 18       		.uleb128 0x18
 3638 00e8 9742     		.uleb128 0x2117
 3639 00ea 19       		.uleb128 0x19
 3640 00eb 00       		.byte	0
 3641 00ec 00       		.byte	0
 3642 00ed 15       		.uleb128 0x15
 3643 00ee 2E       		.uleb128 0x2e
 3644 00ef 01       		.byte	0x1
 3645 00f0 03       		.uleb128 0x3
 3646 00f1 0E       		.uleb128 0xe
 3647 00f2 3A       		.uleb128 0x3a
 3648 00f3 0B       		.uleb128 0xb
 3649 00f4 3B       		.uleb128 0x3b
 3650 00f5 05       		.uleb128 0x5
 3651 00f6 27       		.uleb128 0x27
 3652 00f7 19       		.uleb128 0x19
 3653 00f8 49       		.uleb128 0x49
 3654 00f9 13       		.uleb128 0x13
 3655 00fa 11       		.uleb128 0x11
 3656 00fb 01       		.uleb128 0x1
 3657 00fc 12       		.uleb128 0x12
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 106


 3658 00fd 06       		.uleb128 0x6
 3659 00fe 40       		.uleb128 0x40
 3660 00ff 18       		.uleb128 0x18
 3661 0100 9742     		.uleb128 0x2117
 3662 0102 19       		.uleb128 0x19
 3663 0103 01       		.uleb128 0x1
 3664 0104 13       		.uleb128 0x13
 3665 0105 00       		.byte	0
 3666 0106 00       		.byte	0
 3667 0107 16       		.uleb128 0x16
 3668 0108 05       		.uleb128 0x5
 3669 0109 00       		.byte	0
 3670 010a 03       		.uleb128 0x3
 3671 010b 0E       		.uleb128 0xe
 3672 010c 3A       		.uleb128 0x3a
 3673 010d 0B       		.uleb128 0xb
 3674 010e 3B       		.uleb128 0x3b
 3675 010f 05       		.uleb128 0x5
 3676 0110 49       		.uleb128 0x49
 3677 0111 13       		.uleb128 0x13
 3678 0112 02       		.uleb128 0x2
 3679 0113 17       		.uleb128 0x17
 3680 0114 00       		.byte	0
 3681 0115 00       		.byte	0
 3682 0116 17       		.uleb128 0x17
 3683 0117 34       		.uleb128 0x34
 3684 0118 00       		.byte	0
 3685 0119 03       		.uleb128 0x3
 3686 011a 0E       		.uleb128 0xe
 3687 011b 3A       		.uleb128 0x3a
 3688 011c 0B       		.uleb128 0xb
 3689 011d 3B       		.uleb128 0x3b
 3690 011e 05       		.uleb128 0x5
 3691 011f 49       		.uleb128 0x49
 3692 0120 13       		.uleb128 0x13
 3693 0121 02       		.uleb128 0x2
 3694 0122 17       		.uleb128 0x17
 3695 0123 00       		.byte	0
 3696 0124 00       		.byte	0
 3697 0125 18       		.uleb128 0x18
 3698 0126 26       		.uleb128 0x26
 3699 0127 00       		.byte	0
 3700 0128 49       		.uleb128 0x49
 3701 0129 13       		.uleb128 0x13
 3702 012a 00       		.byte	0
 3703 012b 00       		.byte	0
 3704 012c 19       		.uleb128 0x19
 3705 012d 2E       		.uleb128 0x2e
 3706 012e 01       		.byte	0x1
 3707 012f 03       		.uleb128 0x3
 3708 0130 0E       		.uleb128 0xe
 3709 0131 3A       		.uleb128 0x3a
 3710 0132 0B       		.uleb128 0xb
 3711 0133 3B       		.uleb128 0x3b
 3712 0134 05       		.uleb128 0x5
 3713 0135 27       		.uleb128 0x27
 3714 0136 19       		.uleb128 0x19
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 107


 3715 0137 20       		.uleb128 0x20
 3716 0138 0B       		.uleb128 0xb
 3717 0139 01       		.uleb128 0x1
 3718 013a 13       		.uleb128 0x13
 3719 013b 00       		.byte	0
 3720 013c 00       		.byte	0
 3721 013d 1A       		.uleb128 0x1a
 3722 013e 34       		.uleb128 0x34
 3723 013f 00       		.byte	0
 3724 0140 03       		.uleb128 0x3
 3725 0141 0E       		.uleb128 0xe
 3726 0142 3A       		.uleb128 0x3a
 3727 0143 0B       		.uleb128 0xb
 3728 0144 3B       		.uleb128 0x3b
 3729 0145 05       		.uleb128 0x5
 3730 0146 49       		.uleb128 0x49
 3731 0147 13       		.uleb128 0x13
 3732 0148 00       		.byte	0
 3733 0149 00       		.byte	0
 3734 014a 1B       		.uleb128 0x1b
 3735 014b 2E       		.uleb128 0x2e
 3736 014c 01       		.byte	0x1
 3737 014d 03       		.uleb128 0x3
 3738 014e 0E       		.uleb128 0xe
 3739 014f 3A       		.uleb128 0x3a
 3740 0150 0B       		.uleb128 0xb
 3741 0151 3B       		.uleb128 0x3b
 3742 0152 05       		.uleb128 0x5
 3743 0153 27       		.uleb128 0x27
 3744 0154 19       		.uleb128 0x19
 3745 0155 11       		.uleb128 0x11
 3746 0156 01       		.uleb128 0x1
 3747 0157 12       		.uleb128 0x12
 3748 0158 06       		.uleb128 0x6
 3749 0159 40       		.uleb128 0x40
 3750 015a 18       		.uleb128 0x18
 3751 015b 9642     		.uleb128 0x2116
 3752 015d 19       		.uleb128 0x19
 3753 015e 01       		.uleb128 0x1
 3754 015f 13       		.uleb128 0x13
 3755 0160 00       		.byte	0
 3756 0161 00       		.byte	0
 3757 0162 1C       		.uleb128 0x1c
 3758 0163 1D       		.uleb128 0x1d
 3759 0164 01       		.byte	0x1
 3760 0165 31       		.uleb128 0x31
 3761 0166 13       		.uleb128 0x13
 3762 0167 11       		.uleb128 0x11
 3763 0168 01       		.uleb128 0x1
 3764 0169 12       		.uleb128 0x12
 3765 016a 06       		.uleb128 0x6
 3766 016b 58       		.uleb128 0x58
 3767 016c 0B       		.uleb128 0xb
 3768 016d 59       		.uleb128 0x59
 3769 016e 05       		.uleb128 0x5
 3770 016f 00       		.byte	0
 3771 0170 00       		.byte	0
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 108


 3772 0171 1D       		.uleb128 0x1d
 3773 0172 0B       		.uleb128 0xb
 3774 0173 01       		.byte	0x1
 3775 0174 11       		.uleb128 0x11
 3776 0175 01       		.uleb128 0x1
 3777 0176 12       		.uleb128 0x12
 3778 0177 06       		.uleb128 0x6
 3779 0178 00       		.byte	0
 3780 0179 00       		.byte	0
 3781 017a 1E       		.uleb128 0x1e
 3782 017b 34       		.uleb128 0x34
 3783 017c 00       		.byte	0
 3784 017d 31       		.uleb128 0x31
 3785 017e 13       		.uleb128 0x13
 3786 017f 02       		.uleb128 0x2
 3787 0180 17       		.uleb128 0x17
 3788 0181 00       		.byte	0
 3789 0182 00       		.byte	0
 3790 0183 1F       		.uleb128 0x1f
 3791 0184 2E       		.uleb128 0x2e
 3792 0185 01       		.byte	0x1
 3793 0186 3F       		.uleb128 0x3f
 3794 0187 19       		.uleb128 0x19
 3795 0188 03       		.uleb128 0x3
 3796 0189 0E       		.uleb128 0xe
 3797 018a 3A       		.uleb128 0x3a
 3798 018b 0B       		.uleb128 0xb
 3799 018c 3B       		.uleb128 0x3b
 3800 018d 05       		.uleb128 0x5
 3801 018e 27       		.uleb128 0x27
 3802 018f 19       		.uleb128 0x19
 3803 0190 11       		.uleb128 0x11
 3804 0191 01       		.uleb128 0x1
 3805 0192 12       		.uleb128 0x12
 3806 0193 06       		.uleb128 0x6
 3807 0194 40       		.uleb128 0x40
 3808 0195 18       		.uleb128 0x18
 3809 0196 9642     		.uleb128 0x2116
 3810 0198 19       		.uleb128 0x19
 3811 0199 01       		.uleb128 0x1
 3812 019a 13       		.uleb128 0x13
 3813 019b 00       		.byte	0
 3814 019c 00       		.byte	0
 3815 019d 20       		.uleb128 0x20
 3816 019e 898201   		.uleb128 0x4109
 3817 01a1 01       		.byte	0x1
 3818 01a2 11       		.uleb128 0x11
 3819 01a3 01       		.uleb128 0x1
 3820 01a4 31       		.uleb128 0x31
 3821 01a5 13       		.uleb128 0x13
 3822 01a6 01       		.uleb128 0x1
 3823 01a7 13       		.uleb128 0x13
 3824 01a8 00       		.byte	0
 3825 01a9 00       		.byte	0
 3826 01aa 21       		.uleb128 0x21
 3827 01ab 8A8201   		.uleb128 0x410a
 3828 01ae 00       		.byte	0
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 109


 3829 01af 02       		.uleb128 0x2
 3830 01b0 18       		.uleb128 0x18
 3831 01b1 9142     		.uleb128 0x2111
 3832 01b3 18       		.uleb128 0x18
 3833 01b4 00       		.byte	0
 3834 01b5 00       		.byte	0
 3835 01b6 22       		.uleb128 0x22
 3836 01b7 898201   		.uleb128 0x4109
 3837 01ba 01       		.byte	0x1
 3838 01bb 11       		.uleb128 0x11
 3839 01bc 01       		.uleb128 0x1
 3840 01bd 31       		.uleb128 0x31
 3841 01be 13       		.uleb128 0x13
 3842 01bf 00       		.byte	0
 3843 01c0 00       		.byte	0
 3844 01c1 23       		.uleb128 0x23
 3845 01c2 2E       		.uleb128 0x2e
 3846 01c3 01       		.byte	0x1
 3847 01c4 3F       		.uleb128 0x3f
 3848 01c5 19       		.uleb128 0x19
 3849 01c6 03       		.uleb128 0x3
 3850 01c7 0E       		.uleb128 0xe
 3851 01c8 3A       		.uleb128 0x3a
 3852 01c9 0B       		.uleb128 0xb
 3853 01ca 3B       		.uleb128 0x3b
 3854 01cb 0B       		.uleb128 0xb
 3855 01cc 27       		.uleb128 0x27
 3856 01cd 19       		.uleb128 0x19
 3857 01ce 11       		.uleb128 0x11
 3858 01cf 01       		.uleb128 0x1
 3859 01d0 12       		.uleb128 0x12
 3860 01d1 06       		.uleb128 0x6
 3861 01d2 40       		.uleb128 0x40
 3862 01d3 18       		.uleb128 0x18
 3863 01d4 9742     		.uleb128 0x2117
 3864 01d6 19       		.uleb128 0x19
 3865 01d7 01       		.uleb128 0x1
 3866 01d8 13       		.uleb128 0x13
 3867 01d9 00       		.byte	0
 3868 01da 00       		.byte	0
 3869 01db 24       		.uleb128 0x24
 3870 01dc 34       		.uleb128 0x34
 3871 01dd 00       		.byte	0
 3872 01de 03       		.uleb128 0x3
 3873 01df 0E       		.uleb128 0xe
 3874 01e0 3A       		.uleb128 0x3a
 3875 01e1 0B       		.uleb128 0xb
 3876 01e2 3B       		.uleb128 0x3b
 3877 01e3 0B       		.uleb128 0xb
 3878 01e4 49       		.uleb128 0x49
 3879 01e5 13       		.uleb128 0x13
 3880 01e6 02       		.uleb128 0x2
 3881 01e7 17       		.uleb128 0x17
 3882 01e8 00       		.byte	0
 3883 01e9 00       		.byte	0
 3884 01ea 25       		.uleb128 0x25
 3885 01eb 898201   		.uleb128 0x4109
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 110


 3886 01ee 00       		.byte	0
 3887 01ef 11       		.uleb128 0x11
 3888 01f0 01       		.uleb128 0x1
 3889 01f1 31       		.uleb128 0x31
 3890 01f2 13       		.uleb128 0x13
 3891 01f3 00       		.byte	0
 3892 01f4 00       		.byte	0
 3893 01f5 26       		.uleb128 0x26
 3894 01f6 2E       		.uleb128 0x2e
 3895 01f7 01       		.byte	0x1
 3896 01f8 3F       		.uleb128 0x3f
 3897 01f9 19       		.uleb128 0x19
 3898 01fa 03       		.uleb128 0x3
 3899 01fb 0E       		.uleb128 0xe
 3900 01fc 3A       		.uleb128 0x3a
 3901 01fd 0B       		.uleb128 0xb
 3902 01fe 3B       		.uleb128 0x3b
 3903 01ff 05       		.uleb128 0x5
 3904 0200 27       		.uleb128 0x27
 3905 0201 19       		.uleb128 0x19
 3906 0202 11       		.uleb128 0x11
 3907 0203 01       		.uleb128 0x1
 3908 0204 12       		.uleb128 0x12
 3909 0205 06       		.uleb128 0x6
 3910 0206 40       		.uleb128 0x40
 3911 0207 18       		.uleb128 0x18
 3912 0208 9742     		.uleb128 0x2117
 3913 020a 19       		.uleb128 0x19
 3914 020b 01       		.uleb128 0x1
 3915 020c 13       		.uleb128 0x13
 3916 020d 00       		.byte	0
 3917 020e 00       		.byte	0
 3918 020f 27       		.uleb128 0x27
 3919 0210 05       		.uleb128 0x5
 3920 0211 00       		.byte	0
 3921 0212 03       		.uleb128 0x3
 3922 0213 0E       		.uleb128 0xe
 3923 0214 3A       		.uleb128 0x3a
 3924 0215 0B       		.uleb128 0xb
 3925 0216 3B       		.uleb128 0x3b
 3926 0217 05       		.uleb128 0x5
 3927 0218 49       		.uleb128 0x49
 3928 0219 13       		.uleb128 0x13
 3929 021a 02       		.uleb128 0x2
 3930 021b 18       		.uleb128 0x18
 3931 021c 00       		.byte	0
 3932 021d 00       		.byte	0
 3933 021e 28       		.uleb128 0x28
 3934 021f 34       		.uleb128 0x34
 3935 0220 00       		.byte	0
 3936 0221 03       		.uleb128 0x3
 3937 0222 0E       		.uleb128 0xe
 3938 0223 3A       		.uleb128 0x3a
 3939 0224 0B       		.uleb128 0xb
 3940 0225 3B       		.uleb128 0x3b
 3941 0226 05       		.uleb128 0x5
 3942 0227 49       		.uleb128 0x49
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 111


 3943 0228 13       		.uleb128 0x13
 3944 0229 02       		.uleb128 0x2
 3945 022a 18       		.uleb128 0x18
 3946 022b 00       		.byte	0
 3947 022c 00       		.byte	0
 3948 022d 29       		.uleb128 0x29
 3949 022e 2E       		.uleb128 0x2e
 3950 022f 01       		.byte	0x1
 3951 0230 03       		.uleb128 0x3
 3952 0231 0E       		.uleb128 0xe
 3953 0232 3A       		.uleb128 0x3a
 3954 0233 0B       		.uleb128 0xb
 3955 0234 3B       		.uleb128 0x3b
 3956 0235 05       		.uleb128 0x5
 3957 0236 27       		.uleb128 0x27
 3958 0237 19       		.uleb128 0x19
 3959 0238 11       		.uleb128 0x11
 3960 0239 01       		.uleb128 0x1
 3961 023a 12       		.uleb128 0x12
 3962 023b 06       		.uleb128 0x6
 3963 023c 40       		.uleb128 0x40
 3964 023d 18       		.uleb128 0x18
 3965 023e 9742     		.uleb128 0x2117
 3966 0240 19       		.uleb128 0x19
 3967 0241 01       		.uleb128 0x1
 3968 0242 13       		.uleb128 0x13
 3969 0243 00       		.byte	0
 3970 0244 00       		.byte	0
 3971 0245 2A       		.uleb128 0x2a
 3972 0246 2E       		.uleb128 0x2e
 3973 0247 01       		.byte	0x1
 3974 0248 3F       		.uleb128 0x3f
 3975 0249 19       		.uleb128 0x19
 3976 024a 03       		.uleb128 0x3
 3977 024b 0E       		.uleb128 0xe
 3978 024c 3A       		.uleb128 0x3a
 3979 024d 0B       		.uleb128 0xb
 3980 024e 3B       		.uleb128 0x3b
 3981 024f 05       		.uleb128 0x5
 3982 0250 27       		.uleb128 0x27
 3983 0251 19       		.uleb128 0x19
 3984 0252 49       		.uleb128 0x49
 3985 0253 13       		.uleb128 0x13
 3986 0254 11       		.uleb128 0x11
 3987 0255 01       		.uleb128 0x1
 3988 0256 12       		.uleb128 0x12
 3989 0257 06       		.uleb128 0x6
 3990 0258 40       		.uleb128 0x40
 3991 0259 18       		.uleb128 0x18
 3992 025a 9742     		.uleb128 0x2117
 3993 025c 19       		.uleb128 0x19
 3994 025d 01       		.uleb128 0x1
 3995 025e 13       		.uleb128 0x13
 3996 025f 00       		.byte	0
 3997 0260 00       		.byte	0
 3998 0261 2B       		.uleb128 0x2b
 3999 0262 34       		.uleb128 0x34
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 112


 4000 0263 00       		.byte	0
 4001 0264 03       		.uleb128 0x3
 4002 0265 0E       		.uleb128 0xe
 4003 0266 3A       		.uleb128 0x3a
 4004 0267 0B       		.uleb128 0xb
 4005 0268 3B       		.uleb128 0x3b
 4006 0269 0B       		.uleb128 0xb
 4007 026a 49       		.uleb128 0x49
 4008 026b 13       		.uleb128 0x13
 4009 026c 02       		.uleb128 0x2
 4010 026d 18       		.uleb128 0x18
 4011 026e 00       		.byte	0
 4012 026f 00       		.byte	0
 4013 0270 2C       		.uleb128 0x2c
 4014 0271 34       		.uleb128 0x34
 4015 0272 00       		.byte	0
 4016 0273 03       		.uleb128 0x3
 4017 0274 0E       		.uleb128 0xe
 4018 0275 3A       		.uleb128 0x3a
 4019 0276 0B       		.uleb128 0xb
 4020 0277 3B       		.uleb128 0x3b
 4021 0278 05       		.uleb128 0x5
 4022 0279 49       		.uleb128 0x49
 4023 027a 13       		.uleb128 0x13
 4024 027b 3F       		.uleb128 0x3f
 4025 027c 19       		.uleb128 0x19
 4026 027d 3C       		.uleb128 0x3c
 4027 027e 19       		.uleb128 0x19
 4028 027f 00       		.byte	0
 4029 0280 00       		.byte	0
 4030 0281 2D       		.uleb128 0x2d
 4031 0282 34       		.uleb128 0x34
 4032 0283 00       		.byte	0
 4033 0284 03       		.uleb128 0x3
 4034 0285 0E       		.uleb128 0xe
 4035 0286 3A       		.uleb128 0x3a
 4036 0287 0B       		.uleb128 0xb
 4037 0288 3B       		.uleb128 0x3b
 4038 0289 0B       		.uleb128 0xb
 4039 028a 49       		.uleb128 0x49
 4040 028b 13       		.uleb128 0x13
 4041 028c 3F       		.uleb128 0x3f
 4042 028d 19       		.uleb128 0x19
 4043 028e 02       		.uleb128 0x2
 4044 028f 18       		.uleb128 0x18
 4045 0290 00       		.byte	0
 4046 0291 00       		.byte	0
 4047 0292 2E       		.uleb128 0x2e
 4048 0293 34       		.uleb128 0x34
 4049 0294 00       		.byte	0
 4050 0295 03       		.uleb128 0x3
 4051 0296 0E       		.uleb128 0xe
 4052 0297 3A       		.uleb128 0x3a
 4053 0298 0B       		.uleb128 0xb
 4054 0299 3B       		.uleb128 0x3b
 4055 029a 0B       		.uleb128 0xb
 4056 029b 49       		.uleb128 0x49
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 113


 4057 029c 13       		.uleb128 0x13
 4058 029d 3F       		.uleb128 0x3f
 4059 029e 19       		.uleb128 0x19
 4060 029f 3C       		.uleb128 0x3c
 4061 02a0 19       		.uleb128 0x19
 4062 02a1 00       		.byte	0
 4063 02a2 00       		.byte	0
 4064 02a3 2F       		.uleb128 0x2f
 4065 02a4 2E       		.uleb128 0x2e
 4066 02a5 00       		.byte	0
 4067 02a6 3F       		.uleb128 0x3f
 4068 02a7 19       		.uleb128 0x19
 4069 02a8 3C       		.uleb128 0x3c
 4070 02a9 19       		.uleb128 0x19
 4071 02aa 6E       		.uleb128 0x6e
 4072 02ab 0E       		.uleb128 0xe
 4073 02ac 03       		.uleb128 0x3
 4074 02ad 0E       		.uleb128 0xe
 4075 02ae 3A       		.uleb128 0x3a
 4076 02af 0B       		.uleb128 0xb
 4077 02b0 3B       		.uleb128 0x3b
 4078 02b1 0B       		.uleb128 0xb
 4079 02b2 00       		.byte	0
 4080 02b3 00       		.byte	0
 4081 02b4 00       		.byte	0
 4082              		.section	.debug_loc,"",%progbits
 4083              	.Ldebug_loc0:
 4084              	.LLST0:
 4085 0000 00000000 		.4byte	.LVL0
 4086 0004 06000000 		.4byte	.LVL2
 4087 0008 0100     		.2byte	0x1
 4088 000a 50       		.byte	0x50
 4089 000b 06000000 		.4byte	.LVL2
 4090 000f 0C000000 		.4byte	.LFE16
 4091 0013 0400     		.2byte	0x4
 4092 0015 F3       		.byte	0xf3
 4093 0016 01       		.uleb128 0x1
 4094 0017 50       		.byte	0x50
 4095 0018 9F       		.byte	0x9f
 4096 0019 00000000 		.4byte	0
 4097 001d 00000000 		.4byte	0
 4098              	.LLST1:
 4099 0021 02000000 		.4byte	.LVL1
 4100 0025 0A000000 		.4byte	.LVL3
 4101 0029 0100     		.2byte	0x1
 4102 002b 53       		.byte	0x53
 4103 002c 0A000000 		.4byte	.LVL3
 4104 0030 0C000000 		.4byte	.LFE16
 4105 0034 0700     		.2byte	0x7
 4106 0036 70       		.byte	0x70
 4107 0037 00       		.sleb128 0
 4108 0038 0A       		.byte	0xa
 4109 0039 FFFF     		.2byte	0xffff
 4110 003b 1A       		.byte	0x1a
 4111 003c 9F       		.byte	0x9f
 4112 003d 00000000 		.4byte	0
 4113 0041 00000000 		.4byte	0
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 114


 4114              	.LLST2:
 4115 0045 0E000000 		.4byte	.LVL4
 4116 0049 12000000 		.4byte	.LVL5
 4117 004d 0600     		.2byte	0x6
 4118 004f 73       		.byte	0x73
 4119 0050 00       		.sleb128 0
 4120 0051 08       		.byte	0x8
 4121 0052 FF       		.byte	0xff
 4122 0053 1A       		.byte	0x1a
 4123 0054 9F       		.byte	0x9f
 4124 0055 12000000 		.4byte	.LVL5
 4125 0059 1A000000 		.4byte	.LVL6
 4126 005d 0100     		.2byte	0x1
 4127 005f 53       		.byte	0x53
 4128 0060 1A000000 		.4byte	.LVL6
 4129 0064 1C000000 		.4byte	.LVL7
 4130 0068 0500     		.2byte	0x5
 4131 006a 0C       		.byte	0xc
 4132 006b C0010B40 		.4byte	0x400b01c0
 4133 006f 00000000 		.4byte	0
 4134 0073 00000000 		.4byte	0
 4135              	.LLST3:
 4136 0077 96000000 		.4byte	.LVL13
 4137 007b 9A000000 		.4byte	.LVL14
 4138 007f 0100     		.2byte	0x1
 4139 0081 53       		.byte	0x53
 4140 0082 00000000 		.4byte	0
 4141 0086 00000000 		.4byte	0
 4142              	.LLST4:
 4143 008a 52000000 		.4byte	.LVL8
 4144 008e 58000000 		.4byte	.LVL9
 4145 0092 0400     		.2byte	0x4
 4146 0094 0A       		.byte	0xa
 4147 0095 C003     		.2byte	0x3c0
 4148 0097 9F       		.byte	0x9f
 4149 0098 58000000 		.4byte	.LVL9
 4150 009c 68000000 		.4byte	.LVL11
 4151 00a0 0100     		.2byte	0x1
 4152 00a2 53       		.byte	0x53
 4153 00a3 00000000 		.4byte	0
 4154 00a7 00000000 		.4byte	0
 4155              	.LLST5:
 4156 00ab 80000000 		.4byte	.LVL12
 4157 00af B4000000 		.4byte	.LVL15
 4158 00b3 0100     		.2byte	0x1
 4159 00b5 50       		.byte	0x50
 4160 00b6 00000000 		.4byte	0
 4161 00ba 00000000 		.4byte	0
 4162              	.LLST6:
 4163 00be 5C000000 		.4byte	.LVL19
 4164 00c2 6F000000 		.4byte	.LVL23-1
 4165 00c6 0100     		.2byte	0x1
 4166 00c8 50       		.byte	0x50
 4167 00c9 82000000 		.4byte	.LVL24
 4168 00cd 95000000 		.4byte	.LVL28-1
 4169 00d1 0100     		.2byte	0x1
 4170 00d3 50       		.byte	0x50
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 115


 4171 00d4 CE000000 		.4byte	.LVL30
 4172 00d8 DB000000 		.4byte	.LVL33-1
 4173 00dc 0100     		.2byte	0x1
 4174 00de 50       		.byte	0x50
 4175 00df E0000000 		.4byte	.LVL34
 4176 00e3 EB000000 		.4byte	.LVL37-1
 4177 00e7 0100     		.2byte	0x1
 4178 00e9 50       		.byte	0x50
 4179 00ea F0000000 		.4byte	.LVL38
 4180 00ee 03010000 		.4byte	.LVL42-1
 4181 00f2 0100     		.2byte	0x1
 4182 00f4 50       		.byte	0x50
 4183 00f5 08010000 		.4byte	.LVL43
 4184 00f9 19010000 		.4byte	.LVL47-1
 4185 00fd 0100     		.2byte	0x1
 4186 00ff 50       		.byte	0x50
 4187 0100 00000000 		.4byte	0
 4188 0104 00000000 		.4byte	0
 4189              	.LLST7:
 4190 0108 60000000 		.4byte	.LVL20
 4191 010c 64000000 		.4byte	.LVL21
 4192 0110 0100     		.2byte	0x1
 4193 0112 51       		.byte	0x51
 4194 0113 64000000 		.4byte	.LVL21
 4195 0117 6F000000 		.4byte	.LVL23-1
 4196 011b 0100     		.2byte	0x1
 4197 011d 53       		.byte	0x53
 4198 011e 86000000 		.4byte	.LVL25
 4199 0122 8A000000 		.4byte	.LVL26
 4200 0126 0100     		.2byte	0x1
 4201 0128 51       		.byte	0x51
 4202 0129 8A000000 		.4byte	.LVL26
 4203 012d 95000000 		.4byte	.LVL28-1
 4204 0131 0100     		.2byte	0x1
 4205 0133 53       		.byte	0x53
 4206 0134 D2000000 		.4byte	.LVL31
 4207 0138 D6000000 		.4byte	.LVL32
 4208 013c 0100     		.2byte	0x1
 4209 013e 52       		.byte	0x52
 4210 013f D6000000 		.4byte	.LVL32
 4211 0143 DB000000 		.4byte	.LVL33-1
 4212 0147 0100     		.2byte	0x1
 4213 0149 53       		.byte	0x53
 4214 014a E2000000 		.4byte	.LVL35
 4215 014e E6000000 		.4byte	.LVL36
 4216 0152 0100     		.2byte	0x1
 4217 0154 52       		.byte	0x52
 4218 0155 E6000000 		.4byte	.LVL36
 4219 0159 EB000000 		.4byte	.LVL37-1
 4220 015d 0100     		.2byte	0x1
 4221 015f 53       		.byte	0x53
 4222 0160 F4000000 		.4byte	.LVL39
 4223 0164 F8000000 		.4byte	.LVL40
 4224 0168 0100     		.2byte	0x1
 4225 016a 52       		.byte	0x52
 4226 016b F8000000 		.4byte	.LVL40
 4227 016f 03010000 		.4byte	.LVL42-1
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 116


 4228 0173 0100     		.2byte	0x1
 4229 0175 53       		.byte	0x53
 4230 0176 0A010000 		.4byte	.LVL44
 4231 017a 0E010000 		.4byte	.LVL45
 4232 017e 0100     		.2byte	0x1
 4233 0180 52       		.byte	0x52
 4234 0181 0E010000 		.4byte	.LVL45
 4235 0185 19010000 		.4byte	.LVL47-1
 4236 0189 0100     		.2byte	0x1
 4237 018b 53       		.byte	0x53
 4238 018c 00000000 		.4byte	0
 4239 0190 00000000 		.4byte	0
 4240              	.LLST8:
 4241 0194 00000000 		.4byte	.LVL53
 4242 0198 20000000 		.4byte	.LVL55
 4243 019c 0100     		.2byte	0x1
 4244 019e 50       		.byte	0x50
 4245 019f 20000000 		.4byte	.LVL55
 4246 01a3 CC000000 		.4byte	.LFE9
 4247 01a7 0200     		.2byte	0x2
 4248 01a9 91       		.byte	0x91
 4249 01aa 64       		.sleb128 -28
 4250 01ab 00000000 		.4byte	0
 4251 01af 00000000 		.4byte	0
 4252              	.LLST9:
 4253 01b3 00000000 		.4byte	.LVL53
 4254 01b7 23000000 		.4byte	.LVL56-1
 4255 01bb 0100     		.2byte	0x1
 4256 01bd 51       		.byte	0x51
 4257 01be 23000000 		.4byte	.LVL56-1
 4258 01c2 CC000000 		.4byte	.LFE9
 4259 01c6 0400     		.2byte	0x4
 4260 01c8 F3       		.byte	0xf3
 4261 01c9 01       		.uleb128 0x1
 4262 01ca 51       		.byte	0x51
 4263 01cb 9F       		.byte	0x9f
 4264 01cc 00000000 		.4byte	0
 4265 01d0 00000000 		.4byte	0
 4266              	.LLST10:
 4267 01d4 2A000000 		.4byte	.LVL57
 4268 01d8 2C000000 		.4byte	.LVL58
 4269 01dc 0700     		.2byte	0x7
 4270 01de 70       		.byte	0x70
 4271 01df 00       		.sleb128 0
 4272 01e0 0A       		.byte	0xa
 4273 01e1 FFFF     		.2byte	0xffff
 4274 01e3 1A       		.byte	0x1a
 4275 01e4 9F       		.byte	0x9f
 4276 01e5 34000000 		.4byte	.LVL60
 4277 01e9 4E000000 		.4byte	.LVL62
 4278 01ed 0100     		.2byte	0x1
 4279 01ef 50       		.byte	0x50
 4280 01f0 4E000000 		.4byte	.LVL62
 4281 01f4 B6000000 		.4byte	.LVL74
 4282 01f8 0100     		.2byte	0x1
 4283 01fa 57       		.byte	0x57
 4284 01fb 00000000 		.4byte	0
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 117


 4285 01ff 00000000 		.4byte	0
 4286              	.LLST11:
 4287 0203 4A000000 		.4byte	.LVL61
 4288 0207 B4000000 		.4byte	.LVL73
 4289 020b 0100     		.2byte	0x1
 4290 020d 56       		.byte	0x56
 4291 020e 00000000 		.4byte	0
 4292 0212 00000000 		.4byte	0
 4293              	.LLST12:
 4294 0216 4A000000 		.4byte	.LVL61
 4295 021a 4E000000 		.4byte	.LVL62
 4296 021e 0200     		.2byte	0x2
 4297 0220 30       		.byte	0x30
 4298 0221 9F       		.byte	0x9f
 4299 0222 4E000000 		.4byte	.LVL62
 4300 0226 73000000 		.4byte	.LVL66-1
 4301 022a 0100     		.2byte	0x1
 4302 022c 51       		.byte	0x51
 4303 022d 86000000 		.4byte	.LVL68
 4304 0231 8A000000 		.4byte	.LVL69
 4305 0235 0200     		.2byte	0x2
 4306 0237 30       		.byte	0x30
 4307 0238 9F       		.byte	0x9f
 4308 0239 8A000000 		.4byte	.LVL69
 4309 023d B4000000 		.4byte	.LVL73
 4310 0241 0100     		.2byte	0x1
 4311 0243 51       		.byte	0x51
 4312 0244 00000000 		.4byte	0
 4313 0248 00000000 		.4byte	0
 4314              	.LLST13:
 4315 024c 0C000000 		.4byte	.LVL54
 4316 0250 6C000000 		.4byte	.LVL64
 4317 0254 0300     		.2byte	0x3
 4318 0256 08       		.byte	0x8
 4319 0257 40       		.byte	0x40
 4320 0258 9F       		.byte	0x9f
 4321 0259 6C000000 		.4byte	.LVL64
 4322 025d 6E000000 		.4byte	.LVL65
 4323 0261 0100     		.2byte	0x1
 4324 0263 54       		.byte	0x54
 4325 0264 6E000000 		.4byte	.LVL65
 4326 0268 AC000000 		.4byte	.LVL71
 4327 026c 0100     		.2byte	0x1
 4328 026e 55       		.byte	0x55
 4329 026f AC000000 		.4byte	.LVL71
 4330 0273 B4000000 		.4byte	.LVL73
 4331 0277 0100     		.2byte	0x1
 4332 0279 54       		.byte	0x54
 4333 027a 00000000 		.4byte	0
 4334 027e 00000000 		.4byte	0
 4335              	.LLST14:
 4336 0282 0C000000 		.4byte	.LVL54
 4337 0286 6C000000 		.4byte	.LVL64
 4338 028a 0300     		.2byte	0x3
 4339 028c 08       		.byte	0x8
 4340 028d 20       		.byte	0x20
 4341 028e 9F       		.byte	0x9f
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 118


 4342 028f 6C000000 		.4byte	.LVL64
 4343 0293 6E000000 		.4byte	.LVL65
 4344 0297 0100     		.2byte	0x1
 4345 0299 53       		.byte	0x53
 4346 029a 6E000000 		.4byte	.LVL65
 4347 029e B0000000 		.4byte	.LVL72
 4348 02a2 0100     		.2byte	0x1
 4349 02a4 54       		.byte	0x54
 4350 02a5 B0000000 		.4byte	.LVL72
 4351 02a9 B4000000 		.4byte	.LVL73
 4352 02ad 0100     		.2byte	0x1
 4353 02af 53       		.byte	0x53
 4354 02b0 00000000 		.4byte	0
 4355 02b4 00000000 		.4byte	0
 4356              	.LLST15:
 4357 02b8 00000000 		.4byte	.LVL75
 4358 02bc 16000000 		.4byte	.LVL79
 4359 02c0 0100     		.2byte	0x1
 4360 02c2 50       		.byte	0x50
 4361 02c3 16000000 		.4byte	.LVL79
 4362 02c7 20000000 		.4byte	.LFE11
 4363 02cb 0400     		.2byte	0x4
 4364 02cd F3       		.byte	0xf3
 4365 02ce 01       		.uleb128 0x1
 4366 02cf 50       		.byte	0x50
 4367 02d0 9F       		.byte	0x9f
 4368 02d1 00000000 		.4byte	0
 4369 02d5 00000000 		.4byte	0
 4370              	.LLST16:
 4371 02d9 06000000 		.4byte	.LVL76
 4372 02dd 0E000000 		.4byte	.LVL77
 4373 02e1 0100     		.2byte	0x1
 4374 02e3 51       		.byte	0x51
 4375 02e4 0E000000 		.4byte	.LVL77
 4376 02e8 14000000 		.4byte	.LVL78
 4377 02ec 0100     		.2byte	0x1
 4378 02ee 53       		.byte	0x53
 4379 02ef 14000000 		.4byte	.LVL78
 4380 02f3 1C000000 		.4byte	.LVL80
 4381 02f7 0100     		.2byte	0x1
 4382 02f9 51       		.byte	0x51
 4383 02fa 1C000000 		.4byte	.LVL80
 4384 02fe 20000000 		.4byte	.LFE11
 4385 0302 0100     		.2byte	0x1
 4386 0304 53       		.byte	0x53
 4387 0305 00000000 		.4byte	0
 4388 0309 00000000 		.4byte	0
 4389              	.LLST17:
 4390 030d 00000000 		.4byte	.LVL81
 4391 0311 16000000 		.4byte	.LVL85
 4392 0315 0100     		.2byte	0x1
 4393 0317 50       		.byte	0x50
 4394 0318 16000000 		.4byte	.LVL85
 4395 031c 20000000 		.4byte	.LFE12
 4396 0320 0400     		.2byte	0x4
 4397 0322 F3       		.byte	0xf3
 4398 0323 01       		.uleb128 0x1
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 119


 4399 0324 50       		.byte	0x50
 4400 0325 9F       		.byte	0x9f
 4401 0326 00000000 		.4byte	0
 4402 032a 00000000 		.4byte	0
 4403              	.LLST18:
 4404 032e 06000000 		.4byte	.LVL82
 4405 0332 14000000 		.4byte	.LVL84
 4406 0336 0100     		.2byte	0x1
 4407 0338 53       		.byte	0x53
 4408 0339 14000000 		.4byte	.LVL84
 4409 033d 1C000000 		.4byte	.LVL86
 4410 0341 0100     		.2byte	0x1
 4411 0343 51       		.byte	0x51
 4412 0344 1C000000 		.4byte	.LVL86
 4413 0348 20000000 		.4byte	.LFE12
 4414 034c 0100     		.2byte	0x1
 4415 034e 53       		.byte	0x53
 4416 034f 00000000 		.4byte	0
 4417 0353 00000000 		.4byte	0
 4418              	.LLST19:
 4419 0357 06000000 		.4byte	.LVL95
 4420 035b 18000000 		.4byte	.LVL98
 4421 035f 0100     		.2byte	0x1
 4422 0361 53       		.byte	0x53
 4423 0362 1A000000 		.4byte	.LVL99
 4424 0366 20000000 		.4byte	.LVL100
 4425 036a 0100     		.2byte	0x1
 4426 036c 52       		.byte	0x52
 4427 036d 20000000 		.4byte	.LVL100
 4428 0371 2E000000 		.4byte	.LFE14
 4429 0375 0100     		.2byte	0x1
 4430 0377 53       		.byte	0x53
 4431 0378 00000000 		.4byte	0
 4432 037c 00000000 		.4byte	0
 4433              	.LLST20:
 4434 0380 00000000 		.4byte	.LVL114
 4435 0384 0C000000 		.4byte	.LVL115
 4436 0388 0100     		.2byte	0x1
 4437 038a 50       		.byte	0x50
 4438 038b 0C000000 		.4byte	.LVL115
 4439 038f 24000000 		.4byte	.LVL119
 4440 0393 0100     		.2byte	0x1
 4441 0395 54       		.byte	0x54
 4442 0396 24000000 		.4byte	.LVL119
 4443 039a 6C000000 		.4byte	.LFE3
 4444 039e 0400     		.2byte	0x4
 4445 03a0 F3       		.byte	0xf3
 4446 03a1 01       		.uleb128 0x1
 4447 03a2 50       		.byte	0x50
 4448 03a3 9F       		.byte	0x9f
 4449 03a4 00000000 		.4byte	0
 4450 03a8 00000000 		.4byte	0
 4451              	.LLST21:
 4452 03ac 22000000 		.4byte	.LVL118
 4453 03b0 4C000000 		.4byte	.LVL129
 4454 03b4 0100     		.2byte	0x1
 4455 03b6 55       		.byte	0x55
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 120


 4456 03b7 00000000 		.4byte	0
 4457 03bb 00000000 		.4byte	0
 4458              	.LLST22:
 4459 03bf 36000000 		.4byte	.LVL121
 4460 03c3 3E000000 		.4byte	.LVL125
 4461 03c7 0100     		.2byte	0x1
 4462 03c9 53       		.byte	0x53
 4463 03ca 3E000000 		.4byte	.LVL125
 4464 03ce 40000000 		.4byte	.LVL126
 4465 03d2 0800     		.2byte	0x8
 4466 03d4 75       		.byte	0x75
 4467 03d5 0C       		.sleb128 12
 4468 03d6 94       		.byte	0x94
 4469 03d7 01       		.byte	0x1
 4470 03d8 08       		.byte	0x8
 4471 03d9 FF       		.byte	0xff
 4472 03da 1A       		.byte	0x1a
 4473 03db 9F       		.byte	0x9f
 4474 03dc 40000000 		.4byte	.LVL126
 4475 03e0 4C000000 		.4byte	.LVL128
 4476 03e4 0100     		.2byte	0x1
 4477 03e6 54       		.byte	0x54
 4478 03e7 00000000 		.4byte	0
 4479 03eb 00000000 		.4byte	0
 4480              	.LLST23:
 4481 03ef 24000000 		.4byte	.LVL119
 4482 03f3 38000000 		.4byte	.LVL122
 4483 03f7 0100     		.2byte	0x1
 4484 03f9 54       		.byte	0x54
 4485 03fa 38000000 		.4byte	.LVL122
 4486 03fe 3A000000 		.4byte	.LVL123
 4487 0402 0300     		.2byte	0x3
 4488 0404 74       		.byte	0x74
 4489 0405 01       		.sleb128 1
 4490 0406 9F       		.byte	0x9f
 4491 0407 3C000000 		.4byte	.LVL124
 4492 040b 40000000 		.4byte	.LVL126
 4493 040f 0100     		.2byte	0x1
 4494 0411 54       		.byte	0x54
 4495 0412 00000000 		.4byte	0
 4496 0416 00000000 		.4byte	0
 4497              	.LLST24:
 4498 041a 00000000 		.4byte	.LVL130
 4499 041e 07000000 		.4byte	.LVL131-1
 4500 0422 0100     		.2byte	0x1
 4501 0424 50       		.byte	0x50
 4502 0425 07000000 		.4byte	.LVL131-1
 4503 0429 84000000 		.4byte	.LFE4
 4504 042d 0400     		.2byte	0x4
 4505 042f F3       		.byte	0xf3
 4506 0430 01       		.uleb128 0x1
 4507 0431 50       		.byte	0x50
 4508 0432 9F       		.byte	0x9f
 4509 0433 00000000 		.4byte	0
 4510 0437 00000000 		.4byte	0
 4511              	.LLST25:
 4512 043b 00000000 		.4byte	.LVL130
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 121


 4513 043f 07000000 		.4byte	.LVL131-1
 4514 0443 0100     		.2byte	0x1
 4515 0445 51       		.byte	0x51
 4516 0446 07000000 		.4byte	.LVL131-1
 4517 044a 3A000000 		.4byte	.LVL136
 4518 044e 0100     		.2byte	0x1
 4519 0450 54       		.byte	0x54
 4520 0451 3A000000 		.4byte	.LVL136
 4521 0455 84000000 		.4byte	.LFE4
 4522 0459 0400     		.2byte	0x4
 4523 045b F3       		.byte	0xf3
 4524 045c 01       		.uleb128 0x1
 4525 045d 51       		.byte	0x51
 4526 045e 9F       		.byte	0x9f
 4527 045f 00000000 		.4byte	0
 4528 0463 00000000 		.4byte	0
 4529              	.LLST26:
 4530 0467 36000000 		.4byte	.LVL135
 4531 046b 4A000000 		.4byte	.LVL137
 4532 046f 0100     		.2byte	0x1
 4533 0471 51       		.byte	0x51
 4534 0472 00000000 		.4byte	0
 4535 0476 00000000 		.4byte	0
 4536              	.LLST27:
 4537 047a 2E000000 		.4byte	.LVL133
 4538 047e 32000000 		.4byte	.LVL134
 4539 0482 0100     		.2byte	0x1
 4540 0484 50       		.byte	0x50
 4541 0485 32000000 		.4byte	.LVL134
 4542 0489 68000000 		.4byte	.LVL140
 4543 048d 0100     		.2byte	0x1
 4544 048f 56       		.byte	0x56
 4545 0490 00000000 		.4byte	0
 4546 0494 00000000 		.4byte	0
 4547              	.LLST28:
 4548 0498 00000000 		.4byte	.LVL141
 4549 049c 04000000 		.4byte	.LVL142
 4550 04a0 0100     		.2byte	0x1
 4551 04a2 50       		.byte	0x50
 4552 04a3 04000000 		.4byte	.LVL142
 4553 04a7 14000000 		.4byte	.LFE15
 4554 04ab 0400     		.2byte	0x4
 4555 04ad F3       		.byte	0xf3
 4556 04ae 01       		.uleb128 0x1
 4557 04af 50       		.byte	0x50
 4558 04b0 9F       		.byte	0x9f
 4559 04b1 00000000 		.4byte	0
 4560 04b5 00000000 		.4byte	0
 4561              		.section	.debug_aranges,"",%progbits
 4562 0000 9C000000 		.4byte	0x9c
 4563 0004 0200     		.2byte	0x2
 4564 0006 00000000 		.4byte	.Ldebug_info0
 4565 000a 04       		.byte	0x4
 4566 000b 00       		.byte	0
 4567 000c 0000     		.2byte	0
 4568 000e 0000     		.2byte	0
 4569 0010 00000000 		.4byte	.LFB8
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 122


 4570 0014 38000000 		.4byte	.LFE8-.LFB8
 4571 0018 00000000 		.4byte	.LFB16
 4572 001c 0C000000 		.4byte	.LFE16-.LFB16
 4573 0020 00000000 		.4byte	.LFB10
 4574 0024 3C010000 		.4byte	.LFE10-.LFB10
 4575 0028 00000000 		.4byte	.LFB17
 4576 002c 90000000 		.4byte	.LFE17-.LFB17
 4577 0030 00000000 		.4byte	.LFB1
 4578 0034 DC010000 		.4byte	.LFE1-.LFB1
 4579 0038 00000000 		.4byte	.LFB6
 4580 003c 1C000000 		.4byte	.LFE6-.LFB6
 4581 0040 00000000 		.4byte	.LFB9
 4582 0044 CC000000 		.4byte	.LFE9-.LFB9
 4583 0048 00000000 		.4byte	.LFB11
 4584 004c 20000000 		.4byte	.LFE11-.LFB11
 4585 0050 00000000 		.4byte	.LFB12
 4586 0054 20000000 		.4byte	.LFE12-.LFB12
 4587 0058 00000000 		.4byte	.LFB5
 4588 005c 6C000000 		.4byte	.LFE5-.LFB5
 4589 0060 00000000 		.4byte	.LFB13
 4590 0064 0C000000 		.4byte	.LFE13-.LFB13
 4591 0068 00000000 		.4byte	.LFB14
 4592 006c 2E000000 		.4byte	.LFE14-.LFB14
 4593 0070 00000000 		.4byte	.LFB7
 4594 0074 DC000000 		.4byte	.LFE7-.LFB7
 4595 0078 00000000 		.4byte	.LFB2
 4596 007c 24000000 		.4byte	.LFE2-.LFB2
 4597 0080 00000000 		.4byte	.LFB3
 4598 0084 6C000000 		.4byte	.LFE3-.LFB3
 4599 0088 00000000 		.4byte	.LFB4
 4600 008c 84000000 		.4byte	.LFE4-.LFB4
 4601 0090 00000000 		.4byte	.LFB15
 4602 0094 14000000 		.4byte	.LFE15-.LFB15
 4603 0098 00000000 		.4byte	0
 4604 009c 00000000 		.4byte	0
 4605              		.section	.debug_ranges,"",%progbits
 4606              	.Ldebug_ranges0:
 4607 0000 00000000 		.4byte	.LFB8
 4608 0004 38000000 		.4byte	.LFE8
 4609 0008 00000000 		.4byte	.LFB16
 4610 000c 0C000000 		.4byte	.LFE16
 4611 0010 00000000 		.4byte	.LFB10
 4612 0014 3C010000 		.4byte	.LFE10
 4613 0018 00000000 		.4byte	.LFB17
 4614 001c 90000000 		.4byte	.LFE17
 4615 0020 00000000 		.4byte	.LFB1
 4616 0024 DC010000 		.4byte	.LFE1
 4617 0028 00000000 		.4byte	.LFB6
 4618 002c 1C000000 		.4byte	.LFE6
 4619 0030 00000000 		.4byte	.LFB9
 4620 0034 CC000000 		.4byte	.LFE9
 4621 0038 00000000 		.4byte	.LFB11
 4622 003c 20000000 		.4byte	.LFE11
 4623 0040 00000000 		.4byte	.LFB12
 4624 0044 20000000 		.4byte	.LFE12
 4625 0048 00000000 		.4byte	.LFB5
 4626 004c 6C000000 		.4byte	.LFE5
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 123


 4627 0050 00000000 		.4byte	.LFB13
 4628 0054 0C000000 		.4byte	.LFE13
 4629 0058 00000000 		.4byte	.LFB14
 4630 005c 2E000000 		.4byte	.LFE14
 4631 0060 00000000 		.4byte	.LFB7
 4632 0064 DC000000 		.4byte	.LFE7
 4633 0068 00000000 		.4byte	.LFB2
 4634 006c 24000000 		.4byte	.LFE2
 4635 0070 00000000 		.4byte	.LFB3
 4636 0074 6C000000 		.4byte	.LFE3
 4637 0078 00000000 		.4byte	.LFB4
 4638 007c 84000000 		.4byte	.LFE4
 4639 0080 00000000 		.4byte	.LFB15
 4640 0084 14000000 		.4byte	.LFE15
 4641 0088 00000000 		.4byte	0
 4642 008c 00000000 		.4byte	0
 4643              		.section	.debug_line,"",%progbits
 4644              	.Ldebug_line0:
 4645 0000 51030000 		.section	.debug_str,"MS",%progbits,1
 4645      0200C400 
 4645      00000201 
 4645      FB0E0D00 
 4645      01010101 
 4646              	.LASF159:
 4647 0000 43617053 		.ascii	"CapSense_curFlashWdgtPtr\000"
 4647      656E7365 
 4647      5F637572 
 4647      466C6173 
 4647      68576467 
 4648              	.LASF148:
 4649 0019 43617053 		.ascii	"CapSense_eleCsxDisconnectFlag\000"
 4649      656E7365 
 4649      5F656C65 
 4649      43737844 
 4649      6973636F 
 4650              	.LASF176:
 4651 0037 43617053 		.ascii	"CapSense_SsCSXPostSingleScan\000"
 4651      656E7365 
 4651      5F537343 
 4651      5358506F 
 4651      73745369 
 4652              	.LASF166:
 4653 0054 43617053 		.ascii	"CapSense_SsSetIOsInDefaultState\000"
 4653      656E7365 
 4653      5F537353 
 4653      6574494F 
 4653      73496E44 
 4654              	.LASF164:
 4655 0074 43617053 		.ascii	"CapSense_BistDischargeExtCapacitors\000"
 4655      656E7365 
 4655      5F426973 
 4655      74446973 
 4655      63686172 
 4656              	.LASF112:
 4657 0098 43617053 		.ascii	"CapSense_CSXInitialize\000"
 4657      656E7365 
 4657      5F435358 
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 124


 4657      496E6974 
 4657      69616C69 
 4658              	.LASF114:
 4659 00af 43617053 		.ascii	"CapSense_CSXScanExt\000"
 4659      656E7365 
 4659      5F435358 
 4659      5363616E 
 4659      45787400 
 4660              	.LASF73:
 4661 00c3 736E7254 		.ascii	"snrTestWidgetId\000"
 4661      65737457 
 4661      69646765 
 4661      74496400 
 4662              	.LASF175:
 4663 00d3 433A5C55 		.ascii	"C:\\Users\\dmytro.fedorchenko\\Documents\\PSoC Crea"
 4663      73657273 
 4663      5C646D79 
 4663      74726F2E 
 4663      6665646F 
 4664 0102 746F725C 		.ascii	"tor\\PWM01\\midiPlayer.cydsn\000"
 4664      50574D30 
 4664      315C6D69 
 4664      6469506C 
 4664      61796572 
 4665              	.LASF28:
 4666 011d 43617053 		.ascii	"CapSense_UNDEFINED_E\000"
 4666      656E7365 
 4666      5F554E44 
 4666      4546494E 
 4666      45445F45 
 4667              	.LASF8:
 4668 0132 756E7369 		.ascii	"unsigned int\000"
 4668      676E6564 
 4668      20696E74 
 4668      00
 4669              	.LASF153:
 4670 013f 43617053 		.ascii	"CapSense_CSXPostScanApiPtr\000"
 4670      656E7365 
 4670      5F435358 
 4670      506F7374 
 4670      5363616E 
 4671              	.LASF123:
 4672 015a 6E657874 		.ascii	"nextIdacMask\000"
 4672      49646163 
 4672      4D61736B 
 4672      00
 4673              	.LASF63:
 4674 0167 7363616E 		.ascii	"scanCounter\000"
 4674      436F756E 
 4674      74657200 
 4675              	.LASF61:
 4676 0173 6877436C 		.ascii	"hwClock\000"
 4676      6F636B00 
 4677              	.LASF126:
 4678 017b 72656756 		.ascii	"regValue\000"
 4678      616C7565 
 4678      00
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 125


 4679              	.LASF125:
 4680 0184 74785074 		.ascii	"txPtr\000"
 4680      7200
 4681              	.LASF113:
 4682 018a 696E7465 		.ascii	"interruptState\000"
 4682      72727570 
 4682      74537461 
 4682      746500
 4683              	.LASF141:
 4684 0199 7278496E 		.ascii	"rxIndex\000"
 4684      64657800 
 4685              	.LASF127:
 4686 01a1 43617053 		.ascii	"CapSense_CSXConnectRx\000"
 4686      656E7365 
 4686      5F435358 
 4686      436F6E6E 
 4686      65637452 
 4687              	.LASF160:
 4688 01b7 4379496E 		.ascii	"CyIntDisable\000"
 4688      74446973 
 4688      61626C65 
 4688      00
 4689              	.LASF165:
 4690 01c4 43617053 		.ascii	"CapSense_SsSetModClkClockDivider\000"
 4690      656E7365 
 4690      5F537353 
 4690      65744D6F 
 4690      64436C6B 
 4691              	.LASF51:
 4692 01e5 43617053 		.ascii	"CapSense_RAM_WD_LIST_STRUCT\000"
 4692      656E7365 
 4692      5F52414D 
 4692      5F57445F 
 4692      4C495354 
 4693              	.LASF102:
 4694 0201 69697246 		.ascii	"iirFilterCoeff\000"
 4694      696C7465 
 4694      72436F65 
 4694      666600
 4695              	.LASF139:
 4696 0210 73656E73 		.ascii	"sensorId\000"
 4696      6F724964 
 4696      00
 4697              	.LASF132:
 4698 0219 43617053 		.ascii	"CapSense_SsCSXStartSample\000"
 4698      656E7365 
 4698      5F537343 
 4698      53585374 
 4698      61727453 
 4699              	.LASF143:
 4700 0233 70747257 		.ascii	"ptrWdgt\000"
 4700      64677400 
 4701              	.LASF122:
 4702 023b 63757249 		.ascii	"curIdacMask\000"
 4702      6461634D 
 4702      61736B00 
 4703              	.LASF12:
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 126


 4704 0247 666C6F61 		.ascii	"float\000"
 4704      7400
 4705              	.LASF86:
 4706 024d 73686966 		.ascii	"shift\000"
 4706      7400
 4707              	.LASF173:
 4708 0253 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4708      43313120 
 4708      352E342E 
 4708      31203230 
 4708      31363036 
 4709 0286 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0plus -mthumb -"
 4709      20726576 
 4709      6973696F 
 4709      6E203233 
 4709      37373135 
 4710 02b9 67202D4F 		.ascii	"g -Og -ffunction-sections -ffat-lto-objects\000"
 4710      67202D66 
 4710      66756E63 
 4710      74696F6E 
 4710      2D736563 
 4711              	.LASF107:
 4712 02e5 77617463 		.ascii	"watchdogCounter\000"
 4712      68646F67 
 4712      436F756E 
 4712      74657200 
 4713              	.LASF140:
 4714 02f5 7478496E 		.ascii	"txIndex\000"
 4714      64657800 
 4715              	.LASF135:
 4716 02fd 43617053 		.ascii	"CapSense_CSXSetupWidget\000"
 4716      656E7365 
 4716      5F435358 
 4716      53657475 
 4716      70576964 
 4717              	.LASF168:
 4718 0315 43794465 		.ascii	"CyDelayUs\000"
 4718      6C617955 
 4718      7300
 4719              	.LASF72:
 4720 031f 736E734C 		.ascii	"snsList\000"
 4720      69737400 
 4721              	.LASF7:
 4722 0327 6C6F6E67 		.ascii	"long long unsigned int\000"
 4722      206C6F6E 
 4722      6720756E 
 4722      7369676E 
 4722      65642069 
 4723              	.LASF155:
 4724 033e 43617053 		.ascii	"CapSense_sensorIndex\000"
 4724      656E7365 
 4724      5F73656E 
 4724      736F7249 
 4724      6E646578 
 4725              	.LASF87:
 4726 0353 43617053 		.ascii	"CapSense_FLASH_IO_STRUCT\000"
 4726      656E7365 
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 127


 4726      5F464C41 
 4726      53485F49 
 4726      4F5F5354 
 4727              	.LASF74:
 4728 036c 736E7254 		.ascii	"snrTestSensorId\000"
 4728      65737453 
 4728      656E736F 
 4728      72496400 
 4729              	.LASF124:
 4730 037c 43617053 		.ascii	"CapSense_CSXConnectTx\000"
 4730      656E7365 
 4730      5F435358 
 4730      436F6E6E 
 4730      65637454 
 4731              	.LASF101:
 4732 0392 70747232 		.ascii	"ptr2NoiseEnvlp\000"
 4732      4E6F6973 
 4732      65456E76 
 4732      6C7000
 4733              	.LASF95:
 4734 03a1 77646774 		.ascii	"wdgtType\000"
 4734      54797065 
 4734      00
 4735              	.LASF137:
 4736 03aa 736E7343 		.ascii	"snsClkVal\000"
 4736      6C6B5661 
 4736      6C00
 4737              	.LASF69:
 4738 03b4 6D6F6443 		.ascii	"modCsdClk\000"
 4738      7364436C 
 4738      6B00
 4739              	.LASF57:
 4740 03be 43617053 		.ascii	"CapSense_RAM_SNS_STRUCT\000"
 4740      656E7365 
 4740      5F52414D 
 4740      5F534E53 
 4740      5F535452 
 4741              	.LASF118:
 4742 03d6 74617267 		.ascii	"target\000"
 4742      657400
 4743              	.LASF80:
 4744 03dd 64725074 		.ascii	"drPtr\000"
 4744      7200
 4745              	.LASF45:
 4746 03e3 73696750 		.ascii	"sigPFC\000"
 4746      464300
 4747              	.LASF38:
 4748 03ea 68797374 		.ascii	"hysteresis\000"
 4748      65726573 
 4748      697300
 4749              	.LASF103:
 4750 03f5 43617053 		.ascii	"CapSense_FLASH_WD_STRUCT\000"
 4750      656E7365 
 4750      5F464C41 
 4750      53485F57 
 4750      445F5354 
 4751              	.LASF40:
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 128


 4752 040e 6C6F7742 		.ascii	"lowBslnRst\000"
 4752      736C6E52 
 4752      737400
 4753              	.LASF131:
 4754 0419 43617053 		.ascii	"CapSense_CSXDisconnectRx\000"
 4754      656E7365 
 4754      5F435358 
 4754      44697363 
 4754      6F6E6E65 
 4755              	.LASF177:
 4756 0432 43617053 		.ascii	"CapSense_SsCalcCsxScanPeriod\000"
 4756      656E7365 
 4756      5F537343 
 4756      616C6343 
 4756      73785363 
 4757              	.LASF50:
 4758 044f 62746E32 		.ascii	"btn2\000"
 4758      00
 4759              	.LASF94:
 4760 0454 746F7461 		.ascii	"totalNumSns\000"
 4760      6C4E756D 
 4760      536E7300 
 4761              	.LASF27:
 4762 0460 534D4152 		.ascii	"SMARTSENSE_CSD_NOISE_ENVELOPE_STRUCT\000"
 4762      5453454E 
 4762      53455F43 
 4762      53445F4E 
 4762      4F495345 
 4763              	.LASF120:
 4764 0485 746F7461 		.ascii	"totalSns\000"
 4764      6C536E73 
 4764      00
 4765              	.LASF36:
 4766 048e 6E6F6973 		.ascii	"noiseTh\000"
 4766      65546800 
 4767              	.LASF14:
 4768 0496 63686172 		.ascii	"char\000"
 4768      00
 4769              	.LASF163:
 4770 049b 43794578 		.ascii	"CyExitCriticalSection\000"
 4770      69744372 
 4770      69746963 
 4770      616C5365 
 4770      6374696F 
 4771              	.LASF84:
 4772 04b1 6873696F 		.ascii	"hsiomShift\000"
 4772      6D536869 
 4772      667400
 4773              	.LASF10:
 4774 04bc 75696E74 		.ascii	"uint16\000"
 4774      313600
 4775              	.LASF34:
 4776 04c3 7265736F 		.ascii	"resolution\000"
 4776      6C757469 
 4776      6F6E00
 4777              	.LASF64:
 4778 04ce 73746174 		.ascii	"status\000"
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 129


 4778      757300
 4779              	.LASF106:
 4780 04d5 66696C74 		.ascii	"filterDelay\000"
 4780      65724465 
 4780      6C617900 
 4781              	.LASF19:
 4782 04e1 43617053 		.ascii	"CapSense_LOW_BSLN_RST_TYPE\000"
 4782      656E7365 
 4782      5F4C4F57 
 4782      5F42534C 
 4782      4E5F5253 
 4783              	.LASF33:
 4784 04fc 43617053 		.ascii	"CapSense_SENSE_METHOD_ENUM\000"
 4784      656E7365 
 4784      5F53454E 
 4784      53455F4D 
 4784      4554484F 
 4785              	.LASF56:
 4786 0517 69646163 		.ascii	"idacComp\000"
 4786      436F6D70 
 4786      00
 4787              	.LASF79:
 4788 0520 70635074 		.ascii	"pcPtr\000"
 4788      7200
 4789              	.LASF6:
 4790 0526 6C6F6E67 		.ascii	"long long int\000"
 4790      206C6F6E 
 4790      6720696E 
 4790      7400
 4791              	.LASF97:
 4792 0534 6E756D43 		.ascii	"numCols\000"
 4792      6F6C7300 
 4793              	.LASF130:
 4794 053c 43617053 		.ascii	"CapSense_CSXDisconnectTx\000"
 4794      656E7365 
 4794      5F435358 
 4794      44697363 
 4794      6F6E6E65 
 4795              	.LASF39:
 4796 0555 6F6E4465 		.ascii	"onDebounce\000"
 4796      626F756E 
 4796      636500
 4797              	.LASF145:
 4798 0560 43617053 		.ascii	"CapSense_curRxIOPtr\000"
 4798      656E7365 
 4798      5F637572 
 4798      5278494F 
 4798      50747200 
 4799              	.LASF71:
 4800 0574 77646774 		.ascii	"wdgtList\000"
 4800      4C697374 
 4800      00
 4801              	.LASF152:
 4802 057d 43617053 		.ascii	"CapSense_csxRawCount\000"
 4802      656E7365 
 4802      5F637378 
 4802      52617743 
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 130


 4802      6F756E74 
 4803              	.LASF105:
 4804 0592 43617053 		.ascii	"CapSense_FLASH_STRUCT\000"
 4804      656E7365 
 4804      5F464C41 
 4804      53485F53 
 4804      54525543 
 4805              	.LASF170:
 4806 05a8 43617053 		.ascii	"CapSense_Scan\000"
 4806      656E7365 
 4806      5F536361 
 4806      6E00
 4807              	.LASF149:
 4808 05b6 43617053 		.ascii	"CapSense_dsRam\000"
 4808      656E7365 
 4808      5F647352 
 4808      616D00
 4809              	.LASF76:
 4810 05c5 736E7254 		.ascii	"snrTestRawCount\000"
 4810      65737452 
 4810      6177436F 
 4810      756E7400 
 4811              	.LASF37:
 4812 05d5 6E4E6F69 		.ascii	"nNoiseTh\000"
 4812      73655468 
 4812      00
 4813              	.LASF68:
 4814 05de 63736430 		.ascii	"csd0Config\000"
 4814      436F6E66 
 4814      696700
 4815              	.LASF46:
 4816 05e9 43617053 		.ascii	"CapSense_RAM_WD_BASE_STRUCT\000"
 4816      656E7365 
 4816      5F52414D 
 4816      5F57445F 
 4816      42415345 
 4817              	.LASF78:
 4818 0605 6873696F 		.ascii	"hsiomPtr\000"
 4818      6D507472 
 4818      00
 4819              	.LASF134:
 4820 060e 43617053 		.ascii	"CapSense_CSXElectrodeCheck\000"
 4820      656E7365 
 4820      5F435358 
 4820      456C6563 
 4820      74726F64 
 4821              	.LASF11:
 4822 0629 75696E74 		.ascii	"uint32\000"
 4822      333200
 4823              	.LASF91:
 4824 0630 70747232 		.ascii	"ptr2FltrHistory\000"
 4824      466C7472 
 4824      48697374 
 4824      6F727900 
 4825              	.LASF146:
 4826 0640 43617053 		.ascii	"CapSense_curWdgtTotalRx\000"
 4826      656E7365 
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 131


 4826      5F637572 
 4826      57646774 
 4826      546F7461 
 4827              	.LASF83:
 4828 0658 6D61736B 		.ascii	"mask\000"
 4828      00
 4829              	.LASF115:
 4830 065d 43617053 		.ascii	"CapSense_CSXCalibrateWidget\000"
 4830      656E7365 
 4830      5F435358 
 4830      43616C69 
 4830      62726174 
 4831              	.LASF151:
 4832 0679 43617053 		.ascii	"CapSense_csxScanPeriod\000"
 4832      656E7365 
 4832      5F637378 
 4832      5363616E 
 4832      50657269 
 4833              	.LASF108:
 4834 0690 73616D70 		.ascii	"sampleClkFreqHz\000"
 4834      6C65436C 
 4834      6B467265 
 4834      71487A00 
 4835              	.LASF138:
 4836 06a0 43617053 		.ascii	"CapSense_CSXSetupWidgetExt\000"
 4836      656E7365 
 4836      5F435358 
 4836      53657475 
 4836      70576964 
 4837              	.LASF32:
 4838 06bb 43617053 		.ascii	"CapSense_SENSE_METHOD_ISX_E\000"
 4838      656E7365 
 4838      5F53454E 
 4838      53455F4D 
 4838      4554484F 
 4839              	.LASF178:
 4840 06d7 43617053 		.ascii	"CapSense_SsCSXStartSampleExt\000"
 4840      656E7365 
 4840      5F537343 
 4840      53585374 
 4840      61727453 
 4841              	.LASF16:
 4842 06f4 6C6F6E67 		.ascii	"long double\000"
 4842      20646F75 
 4842      626C6500 
 4843              	.LASF15:
 4844 0700 72656733 		.ascii	"reg32\000"
 4844      3200
 4845              	.LASF75:
 4846 0706 736E7254 		.ascii	"snrTestScanCounter\000"
 4846      65737453 
 4846      63616E43 
 4846      6F756E74 
 4846      657200
 4847              	.LASF59:
 4848 0719 636F6E66 		.ascii	"configId\000"
 4848      69674964 
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 132


 4848      00
 4849              	.LASF90:
 4850 0722 70747232 		.ascii	"ptr2SnsRam\000"
 4850      536E7352 
 4850      616D00
 4851              	.LASF144:
 4852 072d 43617053 		.ascii	"CapSense_curTxIOPtr\000"
 4852      656E7365 
 4852      5F637572 
 4852      5478494F 
 4852      50747200 
 4853              	.LASF67:
 4854 0741 736E7353 		.ascii	"snsStatus\000"
 4854      74617475 
 4854      7300
 4855              	.LASF43:
 4856 074b 736E7343 		.ascii	"snsClkSource\000"
 4856      6C6B536F 
 4856      75726365 
 4856      00
 4857              	.LASF179:
 4858 0758 43617053 		.ascii	"CapSense_SsCSXGetTxClkDivider\000"
 4858      656E7365 
 4858      5F537343 
 4858      53584765 
 4858      74547843 
 4859              	.LASF99:
 4860 0776 78526573 		.ascii	"xResolution\000"
 4860      6F6C7574 
 4860      696F6E00 
 4861              	.LASF167:
 4862 0782 43617053 		.ascii	"CapSense_SsIsrInitialize\000"
 4862      656E7365 
 4862      5F537349 
 4862      7372496E 
 4862      69746961 
 4863              	.LASF2:
 4864 079b 73686F72 		.ascii	"short int\000"
 4864      7420696E 
 4864      7400
 4865              	.LASF77:
 4866 07a5 43617053 		.ascii	"CapSense_RAM_STRUCT\000"
 4866      656E7365 
 4866      5F52414D 
 4866      5F535452 
 4866      55435400 
 4867              	.LASF4:
 4868 07b9 6C6F6E67 		.ascii	"long int\000"
 4868      20696E74 
 4868      00
 4869              	.LASF65:
 4870 07c2 77646774 		.ascii	"wdgtEnable\000"
 4870      456E6162 
 4870      6C6500
 4871              	.LASF54:
 4872 07cd 64696666 		.ascii	"diff\000"
 4872      00
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 133


 4873              	.LASF147:
 4874 07d2 43617053 		.ascii	"CapSense_curWdgtTotalTx\000"
 4874      656E7365 
 4874      5F637572 
 4874      57646774 
 4874      546F7461 
 4875              	.LASF62:
 4876 07ea 74756E65 		.ascii	"tunerCmd\000"
 4876      72436D64 
 4876      00
 4877              	.LASF109:
 4878 07f3 74656D70 		.ascii	"temp\000"
 4878      00
 4879              	.LASF30:
 4880 07f8 43617053 		.ascii	"CapSense_SENSE_METHOD_CSX_E\000"
 4880      656E7365 
 4880      5F53454E 
 4880      53455F4D 
 4880      4554484F 
 4881              	.LASF81:
 4882 0814 70735074 		.ascii	"psPtr\000"
 4882      7200
 4883              	.LASF169:
 4884 081a 43617053 		.ascii	"CapSense_SetupWidget\000"
 4884      656E7365 
 4884      5F536574 
 4884      75705769 
 4884      64676574 
 4885              	.LASF119:
 4886 082f 72617754 		.ascii	"rawTarget\000"
 4886      61726765 
 4886      7400
 4887              	.LASF174:
 4888 0839 47656E65 		.ascii	"Generated_Source\\PSoC4\\CapSense_SensingCSX_LL.c\000"
 4888      72617465 
 4888      645F536F 
 4888      75726365 
 4888      5C50536F 
 4889              	.LASF150:
 4890 0869 43617053 		.ascii	"CapSense_dsFlash\000"
 4890      656E7365 
 4890      5F647346 
 4890      6C617368 
 4890      00
 4891              	.LASF44:
 4892 087a 66696E67 		.ascii	"fingerCap\000"
 4892      65724361 
 4892      7000
 4893              	.LASF66:
 4894 0884 77646774 		.ascii	"wdgtStatus\000"
 4894      53746174 
 4894      757300
 4895              	.LASF49:
 4896 088f 43617053 		.ascii	"CapSense_RAM_WD_SLIDER_STRUCT\000"
 4896      656E7365 
 4896      5F52414D 
 4896      5F57445F 
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 134


 4896      534C4944 
 4897              	.LASF29:
 4898 08ad 43617053 		.ascii	"CapSense_SENSE_METHOD_CSD_E\000"
 4898      656E7365 
 4898      5F53454E 
 4898      53455F4D 
 4898      4554484F 
 4899              	.LASF17:
 4900 08c9 73697A65 		.ascii	"sizetype\000"
 4900      74797065 
 4900      00
 4901              	.LASF85:
 4902 08d2 64725368 		.ascii	"drShift\000"
 4902      69667400 
 4903              	.LASF5:
 4904 08da 6C6F6E67 		.ascii	"long unsigned int\000"
 4904      20756E73 
 4904      69676E65 
 4904      6420696E 
 4904      7400
 4905              	.LASF142:
 4906 08ec 72657456 		.ascii	"retVal\000"
 4906      616C00
 4907              	.LASF41:
 4908 08f3 69646163 		.ascii	"idacMod\000"
 4908      4D6F6400 
 4909              	.LASF128:
 4910 08fb 72785074 		.ascii	"rxPtr\000"
 4910      7200
 4911              	.LASF92:
 4912 0901 70747232 		.ascii	"ptr2DebounceArr\000"
 4912      4465626F 
 4912      756E6365 
 4912      41727200 
 4913              	.LASF100:
 4914 0911 7843656E 		.ascii	"xCentroidMultiplier\000"
 4914      74726F69 
 4914      644D756C 
 4914      7469706C 
 4914      69657200 
 4915              	.LASF35:
 4916 0925 66696E67 		.ascii	"fingerTh\000"
 4916      65725468 
 4916      00
 4917              	.LASF53:
 4918 092e 62736C6E 		.ascii	"bslnExt\000"
 4918      45787400 
 4919              	.LASF47:
 4920 0936 43617053 		.ascii	"CapSense_RAM_WD_BUTTON_STRUCT\000"
 4920      656E7365 
 4920      5F52414D 
 4920      5F57445F 
 4920      42555454 
 4921              	.LASF1:
 4922 0954 756E7369 		.ascii	"unsigned char\000"
 4922      676E6564 
 4922      20636861 
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 135


 4922      7200
 4923              	.LASF116:
 4924 0962 77646774 		.ascii	"wdgtPtr\000"
 4924      50747200 
 4925              	.LASF121:
 4926 096a 63616C69 		.ascii	"calibrationIndex\000"
 4926      62726174 
 4926      696F6E49 
 4926      6E646578 
 4926      00
 4927              	.LASF133:
 4928 097b 43617053 		.ascii	"CapSense_SsCSXPostMultiScan\000"
 4928      656E7365 
 4928      5F537343 
 4928      5358506F 
 4928      73744D75 
 4929              	.LASF93:
 4930 0997 73746174 		.ascii	"staticConfig\000"
 4930      6963436F 
 4930      6E666967 
 4930      00
 4931              	.LASF96:
 4932 09a4 73656E73 		.ascii	"senseMethod\000"
 4932      654D6574 
 4932      686F6400 
 4933              	.LASF70:
 4934 09b0 6D6F6443 		.ascii	"modCsxClk\000"
 4934      7378436C 
 4934      6B00
 4935              	.LASF111:
 4936 09ba 43617053 		.ascii	"CapSense_CSXScanISR\000"
 4936      656E7365 
 4936      5F435358 
 4936      5363616E 
 4936      49535200 
 4937              	.LASF89:
 4938 09ce 70747232 		.ascii	"ptr2WdgtRam\000"
 4938      57646774 
 4938      52616D00 
 4939              	.LASF18:
 4940 09da 43617053 		.ascii	"CapSense_THRESHOLD_TYPE\000"
 4940      656E7365 
 4940      5F544852 
 4940      4553484F 
 4940      4C445F54 
 4941              	.LASF31:
 4942 09f2 43617053 		.ascii	"CapSense_SENSE_METHOD_BIST_E\000"
 4942      656E7365 
 4942      5F53454E 
 4942      53455F4D 
 4942      4554484F 
 4943              	.LASF98:
 4944 0a0f 6E756D52 		.ascii	"numRows\000"
 4944      6F777300 
 4945              	.LASF82:
 4946 0a17 6873696F 		.ascii	"hsiomMask\000"
 4946      6D4D6173 
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 136


 4946      6B00
 4947              	.LASF161:
 4948 0a21 4379496E 		.ascii	"CyIntEnable\000"
 4948      74456E61 
 4948      626C6500 
 4949              	.LASF110:
 4950 0a2d 746D7052 		.ascii	"tmpRegVal\000"
 4950      65675661 
 4950      6C00
 4951              	.LASF129:
 4952 0a37 43617053 		.ascii	"CapSense_CSXScan\000"
 4952      656E7365 
 4952      5F435358 
 4952      5363616E 
 4952      00
 4953              	.LASF42:
 4954 0a48 736E7343 		.ascii	"snsClk\000"
 4954      6C6B00
 4955              	.LASF172:
 4956 0a4f 43617053 		.ascii	"CapSense_SsSwitchSensingMode\000"
 4956      656E7365 
 4956      5F537353 
 4956      77697463 
 4956      6853656E 
 4957              	.LASF162:
 4958 0a6c 4379456E 		.ascii	"CyEnterCriticalSection\000"
 4958      74657243 
 4958      72697469 
 4958      63616C53 
 4958      65637469 
 4959              	.LASF157:
 4960 0a83 43617053 		.ascii	"CapSense_curRamSnsPtr\000"
 4960      656E7365 
 4960      5F637572 
 4960      52616D53 
 4960      6E735074 
 4961              	.LASF0:
 4962 0a99 7369676E 		.ascii	"signed char\000"
 4962      65642063 
 4962      68617200 
 4963              	.LASF158:
 4964 0aa5 43617053 		.ascii	"CapSense_scanFreqIndex\000"
 4964      656E7365 
 4964      5F736361 
 4964      6E467265 
 4964      71496E64 
 4965              	.LASF52:
 4966 0abc 62736C6E 		.ascii	"bsln\000"
 4966      00
 4967              	.LASF3:
 4968 0ac1 73686F72 		.ascii	"short unsigned int\000"
 4968      7420756E 
 4968      7369676E 
 4968      65642069 
 4968      6E7400
 4969              	.LASF136:
 4970 0ad4 63757252 		.ascii	"curRamWdgtBasePtr\000"
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 137


 4970      616D5764 
 4970      67744261 
 4970      73655074 
 4970      7200
 4971              	.LASF171:
 4972 0ae6 43617053 		.ascii	"CapSense_SsPostAllWidgetsScan\000"
 4972      656E7365 
 4972      5F537350 
 4972      6F737441 
 4972      6C6C5769 
 4973              	.LASF88:
 4974 0b04 70747232 		.ascii	"ptr2SnsFlash\000"
 4974      536E7346 
 4974      6C617368 
 4974      00
 4975              	.LASF9:
 4976 0b11 75696E74 		.ascii	"uint8\000"
 4976      3800
 4977              	.LASF13:
 4978 0b17 646F7562 		.ascii	"double\000"
 4978      6C6500
 4979              	.LASF55:
 4980 0b1e 6E656742 		.ascii	"negBslnRstCnt\000"
 4980      736C6E52 
 4980      7374436E 
 4980      7400
 4981              	.LASF20:
 4982 0b2c 70617261 		.ascii	"param0\000"
 4982      6D3000
 4983              	.LASF21:
 4984 0b33 70617261 		.ascii	"param1\000"
 4984      6D3100
 4985              	.LASF22:
 4986 0b3a 70617261 		.ascii	"param2\000"
 4986      6D3200
 4987              	.LASF23:
 4988 0b41 70617261 		.ascii	"param3\000"
 4988      6D3300
 4989              	.LASF24:
 4990 0b48 70617261 		.ascii	"param4\000"
 4990      6D3400
 4991              	.LASF25:
 4992 0b4f 70617261 		.ascii	"param5\000"
 4992      6D3500
 4993              	.LASF26:
 4994 0b56 70617261 		.ascii	"param6\000"
 4994      6D3600
 4995              	.LASF154:
 4996 0b5d 43617053 		.ascii	"CapSense_widgetIndex\000"
 4996      656E7365 
 4996      5F776964 
 4996      67657449 
 4996      6E646578 
 4997              	.LASF60:
 4998 0b72 64657669 		.ascii	"deviceId\000"
 4998      63654964 
 4998      00
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccQIaDg9.s 			page 138


 4999              	.LASF117:
 5000 0b7b 77696467 		.ascii	"widgetId\000"
 5000      65744964 
 5000      00
 5001              	.LASF156:
 5002 0b84 43617053 		.ascii	"CapSense_requestScanAllWidget\000"
 5002      656E7365 
 5002      5F726571 
 5002      75657374 
 5002      5363616E 
 5003              	.LASF48:
 5004 0ba2 706F7369 		.ascii	"position\000"
 5004      74696F6E 
 5004      00
 5005              	.LASF58:
 5006 0bab 43617053 		.ascii	"CapSense_RAM_SNS_LIST_STRUCT\000"
 5006      656E7365 
 5006      5F52414D 
 5006      5F534E53 
 5006      5F4C4953 
 5007              	.LASF104:
 5008 0bc8 77646774 		.ascii	"wdgtArray\000"
 5008      41727261 
 5008      7900
 5009              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
