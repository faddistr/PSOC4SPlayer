ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0plus
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CapSense_Sensing.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	__aeabi_uidivmod
  20              		.section	.text.CapSense_SsCalcLfsrSize,"ax",%progbits
  21              		.align	2
  22              		.code	16
  23              		.thumb_func
  24              		.type	CapSense_SsCalcLfsrSize, %function
  25              	CapSense_SsCalcLfsrSize:
  26              	.LFB20:
  27              		.file 1 "Generated_Source\\PSoC4\\CapSense_Sensing.c"
   1:Generated_Source\PSoC4/CapSense_Sensing.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CapSense_Sensing.c **** * \file CapSense_Sensing.c
   3:Generated_Source\PSoC4/CapSense_Sensing.c **** * \version 5.10
   4:Generated_Source\PSoC4/CapSense_Sensing.c **** *
   5:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
   6:Generated_Source\PSoC4/CapSense_Sensing.c **** *   This file contains the source of functions common for
   7:Generated_Source\PSoC4/CapSense_Sensing.c **** *   different sensing methods.
   8:Generated_Source\PSoC4/CapSense_Sensing.c **** *
   9:Generated_Source\PSoC4/CapSense_Sensing.c **** * \see CapSense v5.10 Datasheet
  10:Generated_Source\PSoC4/CapSense_Sensing.c **** *
  11:Generated_Source\PSoC4/CapSense_Sensing.c **** *//*****************************************************************************
  12:Generated_Source\PSoC4/CapSense_Sensing.c **** * Copyright (2016-2018), Cypress Semiconductor Corporation.
  13:Generated_Source\PSoC4/CapSense_Sensing.c **** ********************************************************************************
  14:Generated_Source\PSoC4/CapSense_Sensing.c **** * This software is owned by Cypress Semiconductor Corporation (Cypress) and is
  15:Generated_Source\PSoC4/CapSense_Sensing.c **** * protected by and subject to worldwide patent protection (United States and
  16:Generated_Source\PSoC4/CapSense_Sensing.c **** * foreign), United States copyright laws and international treaty provisions.
  17:Generated_Source\PSoC4/CapSense_Sensing.c **** * Cypress hereby grants to licensee a personal, non-exclusive, non-transferable
  18:Generated_Source\PSoC4/CapSense_Sensing.c **** * license to copy, use, modify, create derivative works of, and compile the
  19:Generated_Source\PSoC4/CapSense_Sensing.c **** * Cypress Source Code and derivative works for the sole purpose of creating
  20:Generated_Source\PSoC4/CapSense_Sensing.c **** * custom software in support of licensee product to be used only in conjunction
  21:Generated_Source\PSoC4/CapSense_Sensing.c **** * with a Cypress integrated circuit as specified in the applicable agreement.
  22:Generated_Source\PSoC4/CapSense_Sensing.c **** * Any reproduction, modification, translation, compilation, or representation of
  23:Generated_Source\PSoC4/CapSense_Sensing.c **** * this software except as specified above is prohibited without the express
  24:Generated_Source\PSoC4/CapSense_Sensing.c **** * written permission of Cypress.
  25:Generated_Source\PSoC4/CapSense_Sensing.c **** *
  26:Generated_Source\PSoC4/CapSense_Sensing.c **** * Disclaimer: CYPRESS MAKES NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, WITH
  27:Generated_Source\PSoC4/CapSense_Sensing.c **** * REGARD TO THIS MATERIAL, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  28:Generated_Source\PSoC4/CapSense_Sensing.c **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  29:Generated_Source\PSoC4/CapSense_Sensing.c **** * Cypress reserves the right to make changes without further notice to the
  30:Generated_Source\PSoC4/CapSense_Sensing.c **** * materials described herein. Cypress does not assume any liability arising out
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 2


  31:Generated_Source\PSoC4/CapSense_Sensing.c **** * of the application or use of any product or circuit described herein. Cypress
  32:Generated_Source\PSoC4/CapSense_Sensing.c **** * does not authorize its products for use as critical components in life-support
  33:Generated_Source\PSoC4/CapSense_Sensing.c **** * systems where a malfunction or failure may reasonably be expected to result in
  34:Generated_Source\PSoC4/CapSense_Sensing.c **** * significant injury to the user. The inclusion of Cypress' product in a life-
  35:Generated_Source\PSoC4/CapSense_Sensing.c **** * support systems application implies that the manufacturer assumes all risk of
  36:Generated_Source\PSoC4/CapSense_Sensing.c **** * such use and in doing so indemnifies Cypress against all charges. Use may be
  37:Generated_Source\PSoC4/CapSense_Sensing.c **** * limited by and subject to the applicable Cypress software license agreement.
  38:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
  39:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  40:Generated_Source\PSoC4/CapSense_Sensing.c **** #include "cyfitter.h"
  41:Generated_Source\PSoC4/CapSense_Sensing.c **** #include "CapSense_Configuration.h"
  42:Generated_Source\PSoC4/CapSense_Sensing.c **** #include "CapSense_Structure.h"
  43:Generated_Source\PSoC4/CapSense_Sensing.c **** #include "CapSense_Sensing.h"
  44:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSX_EN)
  45:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_SensingCSX_LL.h"
  46:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
  47:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_ISX_EN)
  48:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_SensingISX_LL.h"
  49:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
  50:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
  51:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_SensingCSD_LL.h"
  52:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
  53:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE)
  54:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_SmartSense_LL.h"
  55:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif  /* (CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE) */
  56:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_ADC_EN)
  57:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_Adc.h"
  58:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_ADC_EN) */
  59:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
  60:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_SelfTest.h"
  61:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
  62:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  63:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (0u != CapSense_ISX_EN)
  64:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_DigPrt2.h"
  65:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_USES_PORT_3)
  66:Generated_Source\PSoC4/CapSense_Sensing.c ****         #include "CapSense_DigPrt3.h"
  67:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif
  68:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (0u != CapSense_ISX_EN) */
  69:Generated_Source\PSoC4/CapSense_Sensing.c **** /***************************************
  70:Generated_Source\PSoC4/CapSense_Sensing.c **** * API Constants
  71:Generated_Source\PSoC4/CapSense_Sensing.c **** ***************************************/
  72:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  73:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_IMO_FREQUENCY_OFFSET_MIN               (0u)
  74:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_IMO_FREQUENCY_OFFSET_MAX               (255u)
  75:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_CALIBRATION_RESOLUTION                 (12u)
  76:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_CALIBRATION_FREQ_KHZ                   (1500u)
  77:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_CSD_AUTOTUNE_CAL_LEVEL                 (CapSense_CSD_RAWCOUNT_CAL_LEVEL)
  78:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_CSD_AUTOTUNE_CAL_UNITS                 (1000u)
  79:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_CP_MIN                                 (0u)
  80:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_CP_MAX                                 (65000Lu)
  81:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_CP_ERROR                               (4000Lu)
  82:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_CLK_SOURCE_LFSR_SCALE_OFFSET           (4u)
  83:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  84:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSDV2)
  85:Generated_Source\PSoC4/CapSense_Sensing.c ****     #define CapSense_CSD_SNS_FREQ_KHZ_MAX               (6000u)
  86:Generated_Source\PSoC4/CapSense_Sensing.c **** #else
  87:Generated_Source\PSoC4/CapSense_Sensing.c ****     #define CapSense_CSD_SNS_FREQ_KHZ_MAX               (12600u)
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 3


  88:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
  89:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  90:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_FLIP_FLOP_DIV                          (1u)
  91:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  92:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_MOD_CSD_CLK_12000KHZ                   (12000uL)
  93:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_MOD_CSD_CLK_24000KHZ                   (24000uL)
  94:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_MOD_CSD_CLK_48000KHZ                   (48000uL)
  95:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  96:Generated_Source\PSoC4/CapSense_Sensing.c **** /*****************************************************************************/
  97:Generated_Source\PSoC4/CapSense_Sensing.c **** /* Enumeration types definition                                              */
  98:Generated_Source\PSoC4/CapSense_Sensing.c **** /*****************************************************************************/
  99:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 100:Generated_Source\PSoC4/CapSense_Sensing.c **** typedef enum
 101:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 102:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_RES_PULLUP_E   = 0x02u,
 103:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_RES_PULLDOWN_E = 0x03u
 104:Generated_Source\PSoC4/CapSense_Sensing.c **** } CapSense_PORT_TEST_DM;
 105:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 106:Generated_Source\PSoC4/CapSense_Sensing.c **** typedef enum
 107:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 108:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_STS_RESET      = 0x01u,
 109:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_STS_NO_RESET   = 0x02u
 110:Generated_Source\PSoC4/CapSense_Sensing.c **** } CapSense_TEST_TYPE;
 111:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 112:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 113:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 114:Generated_Source\PSoC4/CapSense_Sensing.c **** * Static Function Prototypes
 115:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 116:Generated_Source\PSoC4/CapSense_Sensing.c **** /**
 117:Generated_Source\PSoC4/CapSense_Sensing.c **** * \cond SECTION_C_INTERNAL
 118:Generated_Source\PSoC4/CapSense_Sensing.c **** * \addtogroup group_c_internal
 119:Generated_Source\PSoC4/CapSense_Sensing.c **** * \{
 120:Generated_Source\PSoC4/CapSense_Sensing.c **** */
 121:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 122:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_DISABLE == CapSense_CSDV2)
 123:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsTrimIdacs(void);
 124:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if ((CapSense_ENABLE == CapSense_CSX_EN) || \
 125:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_ENABLE == CapSense_ISX_EN) || \
 126:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG))
 127:Generated_Source\PSoC4/CapSense_Sensing.c ****         static void CapSense_SsTrimIdacsSinking(void);
 128:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSX_EN) || \
 129:Generated_Source\PSoC4/CapSense_Sensing.c ****                (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG)) */
 130:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if ((CapSense_ENABLE == CapSense_CSX_EN) || \
 131:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_ENABLE == CapSense_ISX_EN) || \
 132:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_IDAC_SOURCING == CapSense_CSD_IDAC_CONFIG))
 133:Generated_Source\PSoC4/CapSense_Sensing.c ****         static void CapSense_SsTrimIdacsSourcing(void);
 134:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSX_EN) || \
 135:Generated_Source\PSoC4/CapSense_Sensing.c ****                (CapSense_IDAC_SOURCING == CapSense_CSD_IDAC_CONFIG)) */
 136:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 137:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 138:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
 139:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsCSDDisableMode(void);
 140:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 141:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSX_EN)
 142:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsDisableCSXMode(void);
 143:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
 144:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_ISX_EN)
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 4


 145:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsDisableISXMode(void);
 146:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
 147:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 148:Generated_Source\PSoC4/CapSense_Sensing.c **** #if(((CapSense_ENABLE == CapSense_CSX_EN) && \
 149:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSDV2) && \
 150:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE) && \
 151:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_DISABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES)) ||\
 152:Generated_Source\PSoC4/CapSense_Sensing.c ****     ((CapSense_ENABLE == CapSense_CSD_EN) && \
 153:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSDV2) && \
 154:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)))
 155:Generated_Source\PSoC4/CapSense_Sensing.c ****     static uint8 CapSense_SsCalcLfsrSize(uint32 snsClkDivider, uint32 conversionsNum);
 156:Generated_Source\PSoC4/CapSense_Sensing.c ****     static uint8 CapSense_SsCalcLfsrScale(uint32 snsClkDivider, uint8 lfsrSize);
 157:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 158:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 159:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
 160:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsSetWidgetSenseClkSrc(uint32 wdgtIndex, CapSense_RAM_WD_BASE_STRUCT * ptr
 161:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 162:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 163:Generated_Source\PSoC4/CapSense_Sensing.c **** #if ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2))
 164:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsSetWidgetTxClkSrc(uint32 wdgtIndex, CapSense_RAM_WD_BASE_STRUCT * ptrWdg
 165:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 166:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 167:Generated_Source\PSoC4/CapSense_Sensing.c **** /** \}
 168:Generated_Source\PSoC4/CapSense_Sensing.c **** * \endcond */
 169:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 170:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 171:Generated_Source\PSoC4/CapSense_Sensing.c **** * Defines module variables
 172:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 173:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 174:Generated_Source\PSoC4/CapSense_Sensing.c **** CapSense_SENSE_METHOD_ENUM CapSense_currentSenseMethod = CapSense_UNDEFINED_E;
 175:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 176:Generated_Source\PSoC4/CapSense_Sensing.c **** #if(CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
 177:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Module variable keep track of multi-frequency scan channel index */
 178:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8 CapSense_scanFreqIndex = 0u;
 179:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Variable keep frequency offsets */
 180:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8 CapSense_immunity[CapSense_NUM_SCAN_FREQS] = {0u, 0u, 0u};
 181:Generated_Source\PSoC4/CapSense_Sensing.c **** #else
 182:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* const allows C-compiler to do optimization */
 183:Generated_Source\PSoC4/CapSense_Sensing.c ****     const uint8 CapSense_scanFreqIndex = 0u;
 184:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 185:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 186:Generated_Source\PSoC4/CapSense_Sensing.c **** /* Global software variables */
 187:Generated_Source\PSoC4/CapSense_Sensing.c **** volatile uint8 CapSense_widgetIndex = 0u;    /* Index of the scanning widget */
 188:Generated_Source\PSoC4/CapSense_Sensing.c **** volatile uint8 CapSense_sensorIndex = 0u;    /* Index of the scanning sensor */
 189:Generated_Source\PSoC4/CapSense_Sensing.c **** uint8 CapSense_requestScanAllWidget = 0u;
 190:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 191:Generated_Source\PSoC4/CapSense_Sensing.c **** /* Pointer to RAM_SNS_STRUCT structure */
 192:Generated_Source\PSoC4/CapSense_Sensing.c **** CapSense_RAM_SNS_STRUCT *CapSense_curRamSnsPtr;
 193:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 194:Generated_Source\PSoC4/CapSense_Sensing.c **** #if ((CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN) || \
 195:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSX_EN) || \
 196:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_ISX_EN))
 197:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Pointer to Flash structure holding configuration of widget to be scanned */
 198:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_FLASH_WD_STRUCT const *CapSense_curFlashWdgtPtr = 0u;
 199:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 200:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 201:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 5


 202:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Pointer to Flash structure holding info of sensor to be scanned */
 203:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_FLASH_SNS_STRUCT const *CapSense_curFlashSnsPtr = 0u;
 204:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 205:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 206:Generated_Source\PSoC4/CapSense_Sensing.c **** /* Pointer to Flash structure to hold Sns electrode that was connected previously */
 207:Generated_Source\PSoC4/CapSense_Sensing.c **** CapSense_FLASH_IO_STRUCT const *CapSense_curSnsIOPtr;
 208:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 209:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 210:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 211:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_IsBusy
 212:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 213:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 214:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 215:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the current status of the Component (Scan is completed or Scan is in
 216:Generated_Source\PSoC4/CapSense_Sensing.c **** *  progress).
 217:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 218:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 219:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function returns a status of the hardware block whether a scan is
 220:Generated_Source\PSoC4/CapSense_Sensing.c **** *  currently in progress or not. If the Component is busy, no new scan or setup
 221:Generated_Source\PSoC4/CapSense_Sensing.c **** *  widgets is made. The critical section (i.e. disable global interrupt)
 222:Generated_Source\PSoC4/CapSense_Sensing.c **** *  is recommended for the application when the device transitions from
 223:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the active mode to sleep or deep sleep modes.
 224:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 225:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
 226:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the current status of the Component:
 227:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CapSense_NOT_BUSY - No scan is in progress and a next scan
 228:Generated_Source\PSoC4/CapSense_Sensing.c **** *      can be initiated.
 229:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CapSense_SW_STS_BUSY - The previous scanning is not completed
 230:Generated_Source\PSoC4/CapSense_Sensing.c **** *      and the hardware block is busy.
 231:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 232:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 233:Generated_Source\PSoC4/CapSense_Sensing.c **** uint32 CapSense_IsBusy(void)
 234:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 235:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (CapSense_dsRam.status & CapSense_SW_STS_BUSY);
 236:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 237:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 238:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 239:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SetupWidget
 240:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 241:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 242:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 243:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Performs the initialization required to scan the specified widget.
 244:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 245:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 246:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function prepares the Component to scan all the sensors in the specified
 247:Generated_Source\PSoC4/CapSense_Sensing.c **** *  widget by executing the following tasks:
 248:Generated_Source\PSoC4/CapSense_Sensing.c **** *    1. Re-initialize the hardware if it is not configured to perform the
 249:Generated_Source\PSoC4/CapSense_Sensing.c **** *       sensing method used by the specified widget, this happens only if multiple
 250:Generated_Source\PSoC4/CapSense_Sensing.c **** *       sensing methods are used in the Component.
 251:Generated_Source\PSoC4/CapSense_Sensing.c **** *    2. Initialize the hardware with specific sensing configuration (e.g.
 252:Generated_Source\PSoC4/CapSense_Sensing.c **** *       sensor clock, scan resolution) used by the widget.
 253:Generated_Source\PSoC4/CapSense_Sensing.c **** *    3. Disconnect all previously connected electrodes, if the electrodes
 254:Generated_Source\PSoC4/CapSense_Sensing.c **** *       connected by the
 255:Generated_Source\PSoC4/CapSense_Sensing.c **** *       \if SECTION_C_HIGH_LEVEL
 256:Generated_Source\PSoC4/CapSense_Sensing.c **** *       CapSense_CSDSetupWidgetExt(), CapSense_CSXSetupWidgetExt(),
 257:Generated_Source\PSoC4/CapSense_Sensing.c **** *       CapSense_CSDConnectSns() functions and not disconnected.
 258:Generated_Source\PSoC4/CapSense_Sensing.c **** *       \endif
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 6


 259:Generated_Source\PSoC4/CapSense_Sensing.c **** *       \if SECTION_I_REP
 260:Generated_Source\PSoC4/CapSense_Sensing.c **** *       CapSense_ISXSetupWidgetExt() function and not disconnected.
 261:Generated_Source\PSoC4/CapSense_Sensing.c **** *       \endif
 262:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 263:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function does not start sensor scanning, the CapSense_Scan()
 264:Generated_Source\PSoC4/CapSense_Sensing.c **** *  function must be called to start the scan sensors in the widget. If this
 265:Generated_Source\PSoC4/CapSense_Sensing.c **** *  function is called more than once, it does not break the Component operation,
 266:Generated_Source\PSoC4/CapSense_Sensing.c **** *  but only the last initialized widget is in effect.
 267:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 268:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param widgetId
 269:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the ID number of the widget to be initialized for scanning.
 270:Generated_Source\PSoC4/CapSense_Sensing.c **** *  A macro for the widget ID can be found in the
 271:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense Configuration header file defined as
 272:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_<WidgetName>_WDGT_ID.
 273:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 274:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
 275:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the status of the widget setting up operation:
 276:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CYRET_SUCCESS - The operation is successfully completed.
 277:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CYRET_BAD_PARAM - The widget is invalid or if the specified widget is
 278:Generated_Source\PSoC4/CapSense_Sensing.c **** *      disabled
 279:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CYRET_INVALID_STATE - The previous scanning is not completed and the
 280:Generated_Source\PSoC4/CapSense_Sensing.c **** *      hardware block is busy.
 281:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CYRET_UNKNOWN - An unknown sensing method is used by the widget or any
 282:Generated_Source\PSoC4/CapSense_Sensing.c **** *      other spurious error occurred.
 283:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 284:Generated_Source\PSoC4/CapSense_Sensing.c **** **********************************************************************************/
 285:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_SetupWidget(uint32 widgetId)
 286:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 287:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus widgetStatus;
 288:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 289:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_WDGT_SW_STS_BUSY == (CapSense_dsRam.status & CapSense_WDGT_SW_STS_BUSY))
 290:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 291:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 292:Generated_Source\PSoC4/CapSense_Sensing.c ****         widgetStatus = CYRET_INVALID_STATE;
 293:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 294:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
 295:Generated_Source\PSoC4/CapSense_Sensing.c ****      *  Check if widget id is valid, specified widget is enabled and widget did not
 296:Generated_Source\PSoC4/CapSense_Sensing.c ****      *  detect any fault conditions if BIST is enabled. If all conditions are met,
 297:Generated_Source\PSoC4/CapSense_Sensing.c ****      *  set widgetStatus as good, if not, set widgetStatus as bad.
 298:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
 299:Generated_Source\PSoC4/CapSense_Sensing.c ****     else if ((CapSense_TOTAL_WIDGETS > widgetId) &&
 300:Generated_Source\PSoC4/CapSense_Sensing.c ****         (0uL != CapSense_GET_WIDGET_EN_STATUS(widgetId)))
 301:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 302:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 303:Generated_Source\PSoC4/CapSense_Sensing.c ****         widgetStatus = CYRET_SUCCESS;
 304:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 305:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
 306:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 307:Generated_Source\PSoC4/CapSense_Sensing.c ****         widgetStatus = CYRET_BAD_PARAM;
 308:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 309:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 310:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
 311:Generated_Source\PSoC4/CapSense_Sensing.c ****      * Check widgetStatus flag that is set earlier, if flag is good, then set up only
 312:Generated_Source\PSoC4/CapSense_Sensing.c ****      * widget
 313:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
 314:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CYRET_SUCCESS == widgetStatus)
 315:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 7


 316:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch (CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[widgetId]))
 317:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 318:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
 319:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSX_E:
 320:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set up widget for CSX scan */
 321:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSXSetupWidget(widgetId);
 322:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 323:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 324:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
 325:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSD_E:
 326:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set up widget for CSD scan */
 327:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSDSetupWidget(widgetId);
 328:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 329:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 330:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_ISX_EN)
 331:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_ISX_E:
 332:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set up widget for ISX scan */
 333:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ISXSetupWidget(widgetId);
 334:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 335:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 336:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
 337:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Sensing method is invalid, return error to caller */
 338:Generated_Source\PSoC4/CapSense_Sensing.c ****             widgetStatus = CYRET_UNKNOWN;
 339:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 340:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 341:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 342:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (widgetStatus);
 343:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 344:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 345:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 346:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 347:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_Scan
 348:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 349:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 350:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 351:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Initiates scanning of all the sensors in the widget initialized by
 352:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_SetupWidget(), if no scan is in progress.
 353:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 354:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 355:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function is called only after the CapSense_SetupWidget()
 356:Generated_Source\PSoC4/CapSense_Sensing.c **** *  function is called to start the scanning of the sensors in the widget. The
 357:Generated_Source\PSoC4/CapSense_Sensing.c **** *  status of a sensor scan must be checked using the CapSense_IsBusy()
 358:Generated_Source\PSoC4/CapSense_Sensing.c **** *  API prior to starting a next scan or setting up another widget.
 359:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 360:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
 361:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the status of the scan initiation operation:
 362:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_SUCCESS - Scanning is successfully started.
 363:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_INVALID_STATE - The previous scanning is not completed and the
 364:Generated_Source\PSoC4/CapSense_Sensing.c **** *    hardware block is busy.
 365:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_UNKNOWN - An unknown sensing method is used by the widget.
 366:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 367:Generated_Source\PSoC4/CapSense_Sensing.c **** ********************************************************************************/
 368:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_Scan(void)
 369:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 370:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus scanStatus = CYRET_SUCCESS;
 371:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 372:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_WDGT_SW_STS_BUSY == (CapSense_dsRam.status & CapSense_WDGT_SW_STS_BUSY))
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 8


 373:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 374:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 375:Generated_Source\PSoC4/CapSense_Sensing.c ****         scanStatus = CYRET_INVALID_STATE;
 376:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 377:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
 378:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 379:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch (CapSense_currentSenseMethod)
 380:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 381:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
 382:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSX_E:
 383:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSXScan();
 384:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 385:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 386:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
 387:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSD_E:
 388:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSDScan();
 389:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 390:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 391:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_ISX_EN)
 392:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_ISX_E:
 393:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ISXScan();
 394:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 395:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 396:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
 397:Generated_Source\PSoC4/CapSense_Sensing.c ****             scanStatus = CYRET_UNKNOWN;
 398:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 399:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 400:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 401:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (scanStatus);
 402:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 403:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 404:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 405:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 406:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_ScanAllWidgets
 407:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 408:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 409:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 410:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Initializes the first enabled widget and scanning of all the sensors in the
 411:Generated_Source\PSoC4/CapSense_Sensing.c **** *  widget, then the same process is repeated for all the widgets in the Component,
 412:Generated_Source\PSoC4/CapSense_Sensing.c **** *  i.e. scanning of all the widgets in the Component.
 413:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 414:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 415:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function initializes a widget and scans all the sensors in the widget,
 416:Generated_Source\PSoC4/CapSense_Sensing.c **** *  and then repeats the same for all the widgets in the Component. The tasks of
 417:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the CapSense_SetupWidget() and CapSense_Scan() functions are
 418:Generated_Source\PSoC4/CapSense_Sensing.c **** *  executed by these functions. The status of a sensor scan must be checked
 419:Generated_Source\PSoC4/CapSense_Sensing.c **** *  using the CapSense_IsBusy() API prior to starting a next scan
 420:Generated_Source\PSoC4/CapSense_Sensing.c **** *  or setting up another widget.
 421:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 422:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
 423:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the status of the operation:
 424:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_SUCCESS - Scanning is successfully started.
 425:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_BAD_PARAM - All the widgets are disabled.
 426:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_INVALID_STATE - The previous scanning is not completed and the HW block is busy.
 427:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_UNKNOWN - There are unknown errors.
 428:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 429:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 9


 430:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_ScanAllWidgets(void)
 431:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 432:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus scanStatus = CYRET_UNKNOWN;
 433:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 434:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 wdgtIndex;
 435:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 436:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_SW_STS_BUSY == (CapSense_dsRam.status & CapSense_SW_STS_BUSY))
 437:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 438:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 439:Generated_Source\PSoC4/CapSense_Sensing.c ****         scanStatus = CYRET_INVALID_STATE;
 440:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 441:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
 442:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 443:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
 444:Generated_Source\PSoC4/CapSense_Sensing.c ****          *  Set up widget first widget.
 445:Generated_Source\PSoC4/CapSense_Sensing.c ****          *  If widget returned error, set up next, continue same until widget does not return error
 446:Generated_Source\PSoC4/CapSense_Sensing.c ****          */
 447:Generated_Source\PSoC4/CapSense_Sensing.c ****         for (wdgtIndex = 0u;
 448:Generated_Source\PSoC4/CapSense_Sensing.c ****              wdgtIndex < CapSense_TOTAL_WIDGETS;
 449:Generated_Source\PSoC4/CapSense_Sensing.c ****              wdgtIndex++)
 450:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 451:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 452:Generated_Source\PSoC4/CapSense_Sensing.c ****             scanStatus = CapSense_SetupWidget(wdgtIndex);
 453:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 454:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CYRET_SUCCESS == scanStatus)
 455:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
 456:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (0u != (CapSense_TOTAL_WIDGETS - 1u))
 457:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* If there are more than one widget to be scanned, request callback to scan ne
 458:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if ((CapSense_TOTAL_WIDGETS - 1u) > wdgtIndex)
 459:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
 460:Generated_Source\PSoC4/CapSense_Sensing.c ****                          /* Request callback to scan next widget in ISR */
 461:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_requestScanAllWidget = CapSense_ENABLE;
 462:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
 463:Generated_Source\PSoC4/CapSense_Sensing.c ****                     else
 464:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
 465:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Request to exit in ISR (Do not scan the next widgets) */
 466:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_requestScanAllWidget = CapSense_DISABLE;
 467:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
 468:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #else
 469:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
 470:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Request to exit in ISR (We have only one widget) */
 471:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_requestScanAllWidget = CapSense_DISABLE;
 472:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
 473:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif  /* (0u != (CapSense_TOTAL_WIDGETS - 1u)) */
 474:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 475:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Initiate scan and quit loop */
 476:Generated_Source\PSoC4/CapSense_Sensing.c ****                 scanStatus = CapSense_Scan();
 477:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 478:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 479:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
 480:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 481:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 482:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 483:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (scanStatus);
 484:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 485:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 486:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 10


 487:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 488:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsInitialize
 489:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 490:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 491:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 492:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Performs hardware and firmware initialization required for proper operation
 493:Generated_Source\PSoC4/CapSense_Sensing.c **** *  of the CapSense Component. This function is called from
 494:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the CapSense_Start() API prior to calling any other APIs of the Component.
 495:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 496:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 497:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Performs hardware and firmware initialization required for proper operation
 498:Generated_Source\PSoC4/CapSense_Sensing.c **** *  of the CapSense Component. This function is called from
 499:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the CapSense_Start() API prior to calling any other APIs of the Component.
 500:Generated_Source\PSoC4/CapSense_Sensing.c **** *  1. Depending on the configuration, the function initializes the CSD block
 501:Generated_Source\PSoC4/CapSense_Sensing.c **** *     for the corresponding sensing mode.
 502:Generated_Source\PSoC4/CapSense_Sensing.c **** *  2. The function updates the dsRam.wdgtWorking variable with 1 when Self-test
 503:Generated_Source\PSoC4/CapSense_Sensing.c **** *     is enabled.
 504:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 505:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Calling the CapSense_Start API is the recommended method to initialize
 506:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the CapSense Component at power-up. The CapSense_SsInitialize()
 507:Generated_Source\PSoC4/CapSense_Sensing.c **** *  API should not be used for initialization, resume, or wake-up operations.
 508:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The dsRam.wdgtWorking variable is updated.
 509:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 510:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return status
 511:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns status of operation:
 512:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - Zero        - Indicates successful initialization.
 513:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - Non-zero    - One or more errors occurred in the initialization process.
 514:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 515:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 516:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_SsInitialize(void)
 517:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 518:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus initStatus;
 519:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 520:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if ((CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) &&\
 521:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_MFS_IMO == CapSense_MFS_METHOD))
 522:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 centerFreqTrim;
 523:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 524:Generated_Source\PSoC4/CapSense_Sensing.c ****         centerFreqTrim = (uint8)CY_GET_REG32(CY_SYS_CLK_IMO_TRIM1_PTR);
 525:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_immunity[CapSense_FREQ_CHANNEL_0] = centerFreqTrim;
 526:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 527:Generated_Source\PSoC4/CapSense_Sensing.c ****         if (centerFreqTrim < CapSense_IMO_FREQUENCY_OFFSET_F1)
 528:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 529:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_1] = centerFreqTrim + CapSense_IMO_FREQUENCY_OF
 530:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_2] = centerFreqTrim + (CapSense_IMO_FREQUENCY_O
 531:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                                                            CapSense
 532:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 533:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (centerFreqTrim > (CapSense_IMO_FREQUENCY_OFFSET_MAX - CapSense_IMO_FREQUENCY_OFFSE
 534:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 535:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_1] = centerFreqTrim - CapSense_IMO_FREQUENCY_OF
 536:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_2] = centerFreqTrim - (CapSense_IMO_FREQUENCY_O
 537:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                                                            CapSense
 538:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 539:Generated_Source\PSoC4/CapSense_Sensing.c ****         else
 540:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 541:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_1] = centerFreqTrim - CapSense_IMO_FREQUENCY_OF
 542:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_2] = centerFreqTrim + CapSense_IMO_FREQUENCY_OF
 543:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 11


 544:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 545:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) &&\
 546:Generated_Source\PSoC4/CapSense_Sensing.c ****                (CapSense_MFS_IMO == CapSense_MFS_METHOD)) */
 547:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 548:Generated_Source\PSoC4/CapSense_Sensing.c ****     initStatus = CYRET_SUCCESS;
 549:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 550:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_DISABLE == CapSense_CSDV2)
 551:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsTrimIdacs();
 552:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 553:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 554:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if((CapSense_ENABLE == CapSense_CSD_EN) ||\
 555:Generated_Source\PSoC4/CapSense_Sensing.c ****     ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2)))
 556:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsInitializeSourceSenseClk();
 557:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) ||\
 558:Generated_Source\PSoC4/CapSense_Sensing.c ****               ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2))) */
 559:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 560:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Set all IO states to the default state */
 561:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_SsSetIOsInDefaultState();
 562:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 563:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_ENABLE == CapSense_MANY_SENSE_MODES_EN)
 564:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Initialize CSD block for ADC scanning */
 565:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsSwitchSensingMode(CapSense_UNDEFINED_E);
 566:Generated_Source\PSoC4/CapSense_Sensing.c ****     #elif (CapSense_ENABLE == CapSense_CSD_EN)
 567:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsSwitchSensingMode(CapSense_SENSE_METHOD_CSD_E);
 568:Generated_Source\PSoC4/CapSense_Sensing.c ****     #elif (CapSense_ENABLE == CapSense_CSX_EN)
 569:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsSwitchSensingMode(CapSense_SENSE_METHOD_CSX_E);
 570:Generated_Source\PSoC4/CapSense_Sensing.c ****     #elif (CapSense_ENABLE == CapSense_ISX_EN)
 571:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsSwitchSensingMode(CapSense_SENSE_METHOD_ISX_E);
 572:Generated_Source\PSoC4/CapSense_Sensing.c ****     #else
 573:Generated_Source\PSoC4/CapSense_Sensing.c ****         #error "No sensing method enabled, Component cannot work in this mode"
 574:Generated_Source\PSoC4/CapSense_Sensing.c ****         initStatus = CYRET_UNKNOWN;
 575:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif
 576:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 577:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (initStatus);
 578:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 579:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 580:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 581:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 582:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SetPinState
 583:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 584:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 585:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 586:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets the state (drive mode and output state) of the port pin used by a sensor.
 587:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The possible states are GND, Shield, High-Z, Tx or Rx, Sensor. If the sensor
 588:Generated_Source\PSoC4/CapSense_Sensing.c **** *  specified in the input parameter is a ganged sensor, then the state of all pins
 589:Generated_Source\PSoC4/CapSense_Sensing.c **** *  associated with the ganged sensor is updated.
 590:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 591:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 592:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function sets a specified state for a specified sensor element. For the
 593:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CSD widgets, sensor element is a sensor ID, for the CSX widgets, it is either
 594:Generated_Source\PSoC4/CapSense_Sensing.c **** *  an Rx or Tx electrode ID. If the specified sensor is a ganged sensor, then
 595:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the specified state is set for all the electrodes belong to the sensor.
 596:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function must not be called while the Component is in the busy state.
 597:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 598:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function accepts the CapSense_SHIELD and
 599:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_SENSOR states as an input only if there is at least
 600:Generated_Source\PSoC4/CapSense_Sensing.c **** *  one CSD widget. Similarly, this function accepts the CapSense_TX_PIN
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 12


 601:Generated_Source\PSoC4/CapSense_Sensing.c **** *  and CapSense_RX_PIN states as an input only if there is at least
 602:Generated_Source\PSoC4/CapSense_Sensing.c **** *  one CSX widget in the project.
 603:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 604:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Calling this function directly from the application layer is not
 605:Generated_Source\PSoC4/CapSense_Sensing.c **** *  recommended. This function is used to implement only the custom-specific
 606:Generated_Source\PSoC4/CapSense_Sensing.c **** *  use cases. Functions that perform a setup and scan of a sensor/widget
 607:Generated_Source\PSoC4/CapSense_Sensing.c **** *  automatically set the required pin states. They ignore changes
 608:Generated_Source\PSoC4/CapSense_Sensing.c **** *  in the design made by the CapSense_SetPinState() function.
 609:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function neither check wdgtIndex nor sensorElement for the correctness.
 610:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 611:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param widgetId
 612:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the ID of the widget to change the pin state of the specified
 613:Generated_Source\PSoC4/CapSense_Sensing.c **** *  sensor.
 614:Generated_Source\PSoC4/CapSense_Sensing.c **** *  A macro for the widget ID can be found in the CapSense Configuration
 615:Generated_Source\PSoC4/CapSense_Sensing.c **** *  header file defined as CapSense_<WidgetName>_WDGT_ID.
 616:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 617:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param sensorElement
 618:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the ID of the sensor element within the widget to change
 619:Generated_Source\PSoC4/CapSense_Sensing.c **** *  its pin state.
 620:Generated_Source\PSoC4/CapSense_Sensing.c **** *  \if SECTION_C_LOW_LEVEL
 621:Generated_Source\PSoC4/CapSense_Sensing.c **** *  For the CSD widgets, sensorElement is the sensor ID and can be found in the
 622:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense Configuration header file defined as
 623:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_<WidgetName>_SNS<SensorNumber>_ID.
 624:Generated_Source\PSoC4/CapSense_Sensing.c **** *  For the CSX widgets, sensorElement is defined either as Rx ID or Tx ID.
 625:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The first Rx in a widget corresponds to sensorElement = 0, the second
 626:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Rx in a widget corresponds to sensorElement = 1, and so on.
 627:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The last Tx in a widget corresponds to sensorElement = (RxNum + TxNum).
 628:Generated_Source\PSoC4/CapSense_Sensing.c **** *  \endif
 629:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Macros for Rx and Tx IDs can be found in the
 630:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense Configuration header file defined as:
 631:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_<WidgetName>_RX<RXNumber>_ID
 632:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_<WidgetName>_TX<TXNumber>_ID.
 633:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 634:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param state
 635:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the state of the sensor to be set:
 636:Generated_Source\PSoC4/CapSense_Sensing.c **** *     1. CapSense_GROUND - The pin is connected to the ground.
 637:Generated_Source\PSoC4/CapSense_Sensing.c **** *     2. CapSense_HIGHZ - The drive mode of the pin is set to High-Z
 638:Generated_Source\PSoC4/CapSense_Sensing.c **** *        Analog.
 639:Generated_Source\PSoC4/CapSense_Sensing.c **** *     3. CapSense_SHIELD - The shield signal is routed to the pin
 640:Generated_Source\PSoC4/CapSense_Sensing.c **** *        (available only if CSD sensing method with shield electrode is enabled).
 641:Generated_Source\PSoC4/CapSense_Sensing.c **** *     4. CapSense_SENSOR - The pin is connected to the scanning bus
 642:Generated_Source\PSoC4/CapSense_Sensing.c **** *        (available only if CSD sensing method is enabled).
 643:Generated_Source\PSoC4/CapSense_Sensing.c **** *     5. CapSense_TX_PIN - The Tx signal is routed to the sensor
 644:Generated_Source\PSoC4/CapSense_Sensing.c **** *        (available only if CSX sensing method is enabled).
 645:Generated_Source\PSoC4/CapSense_Sensing.c **** *     6. CapSense_RX_PIN - The pin is connected to the scanning bus
 646:Generated_Source\PSoC4/CapSense_Sensing.c **** *        (available only if CSX sensing method is enabled).
 647:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 648:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 649:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SetPinState(uint32 widgetId, uint32 sensorElement, uint32 state)
 650:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 651:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 eltdNum;
 652:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 eltdIndex;
 653:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8  interruptState;
 654:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_FLASH_IO_STRUCT const *ioPtr;
 655:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_ENABLE == CapSense_GANGED_SNS_EN)
 656:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_FLASH_SNS_STRUCT const *curFlashSnsPtr;
 657:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 13


 658:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 659:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Getting sensor element pointer and number of electrodes */
 660:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_ENABLE == CapSense_GANGED_SNS_EN)
 661:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Check the ganged sns flag */
 662:Generated_Source\PSoC4/CapSense_Sensing.c ****         if (CapSense_GANGED_SNS_MASK == (CapSense_dsFlash.wdgtArray[widgetId].staticConfig & CapSen
 663:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 664:Generated_Source\PSoC4/CapSense_Sensing.c ****             curFlashSnsPtr = CapSense_dsFlash.wdgtArray[widgetId].ptr2SnsFlash;
 665:Generated_Source\PSoC4/CapSense_Sensing.c ****             curFlashSnsPtr += sensorElement;
 666:Generated_Source\PSoC4/CapSense_Sensing.c ****             ioPtr = &CapSense_ioList[curFlashSnsPtr->firstPinId];
 667:Generated_Source\PSoC4/CapSense_Sensing.c ****             eltdNum = curFlashSnsPtr->numPins;
 668:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 669:Generated_Source\PSoC4/CapSense_Sensing.c ****         else
 670:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 671:Generated_Source\PSoC4/CapSense_Sensing.c ****             ioPtr = (CapSense_FLASH_IO_STRUCT const *)CapSense_dsFlash.wdgtArray[widgetId].ptr2SnsF
 672:Generated_Source\PSoC4/CapSense_Sensing.c ****             eltdNum = 1u;
 673:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 674:Generated_Source\PSoC4/CapSense_Sensing.c ****     #else
 675:Generated_Source\PSoC4/CapSense_Sensing.c ****         ioPtr = (CapSense_FLASH_IO_STRUCT const *)CapSense_dsFlash.wdgtArray[widgetId].ptr2SnsFlash
 676:Generated_Source\PSoC4/CapSense_Sensing.c ****         eltdNum = 1u;
 677:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif
 678:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 679:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Loop through all electrodes of the specified sensor element */
 680:Generated_Source\PSoC4/CapSense_Sensing.c ****     for (eltdIndex = 0u; eltdIndex < eltdNum; eltdIndex++)
 681:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 682:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Reset HSIOM and PC registers */
 683:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
 684:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) & ~(CapSense_HSIOM_SEL_MASK << 
 685:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) & ~(CapSense_GPIO_PC_MASK << ioPtr->s
 686:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
 687:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 688:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch (state)
 689:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 690:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_GROUND:
 691:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 692:Generated_Source\PSoC4/CapSense_Sensing.c ****             interruptState = CyEnterCriticalSection();
 693:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) | (CapSense_SNS_GROUND_CONNECT <<
 694:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)(~(uint32)((uint32)1u <
 695:Generated_Source\PSoC4/CapSense_Sensing.c ****             CyExitCriticalSection(interruptState);
 696:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 697:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 698:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_HIGHZ:
 699:Generated_Source\PSoC4/CapSense_Sensing.c ****             interruptState = CyEnterCriticalSection();
 700:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)~(uint32)((uint32)1u <<
 701:Generated_Source\PSoC4/CapSense_Sensing.c ****             CyExitCriticalSection(interruptState);
 702:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 703:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 704:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
 705:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSOR:
 706:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Enable sensor */
 707:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSDConnectSns(ioPtr);
 708:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 709:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 710:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_SHIELD_EN)
 711:Generated_Source\PSoC4/CapSense_Sensing.c ****                 case CapSense_SHIELD:
 712:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* Set appropriate bit in HSIOM register to configure pin to shield mode */
 713:Generated_Source\PSoC4/CapSense_Sensing.c ****                     interruptState = CyEnterCriticalSection();
 714:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) | (CapSense_HSIOM_S
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 14


 715:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CyExitCriticalSection(interruptState);
 716:Generated_Source\PSoC4/CapSense_Sensing.c ****                     break;
 717:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_SHIELD_EN) */
 718:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 719:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 720:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSX_EN) || \
 721:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_ENABLE == CapSense_ISX_EN))
 722:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_TX_PIN:
 723:Generated_Source\PSoC4/CapSense_Sensing.c ****                 interruptState = CyEnterCriticalSection();
 724:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) | (CapSense_HSIOM_SEL_C
 725:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) | (CapSense_GPIO_STRGDRV << i
 726:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CyExitCriticalSection(interruptState);
 727:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 728:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 729:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_RX_PIN:
 730:Generated_Source\PSoC4/CapSense_Sensing.c ****                 interruptState = CyEnterCriticalSection();
 731:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) | (CapSense_HSIOM_SEL_A
 732:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) & ~(CapSense_GPIO_PC_MASK << 
 733:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CyExitCriticalSection(interruptState);
 734:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 735:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 736:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 737:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
 738:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Wrong state */
 739:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 740:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 741:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 742:Generated_Source\PSoC4/CapSense_Sensing.c ****         ioPtr++;
 743:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 744:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 745:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 746:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
 747:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
 748:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsCSDDisableMode
 749:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
 750:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 751:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
 752:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function disables CSD mode.
 753:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 754:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
 755:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  To disable CSD mode the following tasks are performed:
 756:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  1. Disconnect Cmod from AMUXBUS-A.
 757:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  2. Disconnect previous CSX electrode if it has been connected.
 758:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  3. Disconnect Csh from AMUXBUS-B.
 759:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  4. Disable Shield Electrodes.
 760:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 761:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
 762:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsCSDDisableMode(void)
 763:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 764:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 newRegValue;
 765:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 766:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect Cmod from AMUXBUS-A using HSIOM registers */
 767:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_CMOD_HSIOM_PTR);
 768:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_CMOD_HSIOM_MASK);
 769:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_CMOD_HSIOM_PTR, newRegValue);
 770:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 771:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSDV2) && \
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 15


 772:Generated_Source\PSoC4/CapSense_Sensing.c ****              ((CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) && \
 773:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_ENABLE == CapSense_CSD_DEDICATED_IDAC_COMP_EN)))
 774:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Disconnect IDACA and IDACB */
 775:Generated_Source\PSoC4/CapSense_Sensing.c ****             newRegValue = CY_GET_REG32(CapSense_SW_REFGEN_SEL_PTR);
 776:Generated_Source\PSoC4/CapSense_Sensing.c ****             newRegValue &= (uint32)(~CapSense_SW_REFGEN_SEL_SW_IAIB_MASK);
 777:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(CapSense_SW_REFGEN_SEL_PTR, newRegValue);
 778:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* ((CapSense_ENABLE == CapSense_CSDV2) && \
 779:Generated_Source\PSoC4/CapSense_Sensing.c ****                    ((CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) && \
 780:Generated_Source\PSoC4/CapSense_Sensing.c ****                    (CapSense_ENABLE == CapSense_CSD_DEDICATED_IDAC_COMP_EN))) */
 781:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 782:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect previous CSD electrode if it has been connected */
 783:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsCSDElectrodeCheck();
 784:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 785:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect Csh from AMUXBUS-B */
 786:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) && \
 787:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN))
 788:Generated_Source\PSoC4/CapSense_Sensing.c ****             newRegValue = CY_GET_REG32(CapSense_CSH_HSIOM_PTR);
 789:Generated_Source\PSoC4/CapSense_Sensing.c ****             newRegValue &= (uint32)(~(uint32)(CapSense_CSH_TO_AMUXBUS_B_MASK << CapSense_CSH_HSIOM_
 790:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(CapSense_CSH_HSIOM_PTR, newRegValue);
 791:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* ((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) && \
 792:Generated_Source\PSoC4/CapSense_Sensing.c ****                    (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN)) */
 793:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 794:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) && \
 795:Generated_Source\PSoC4/CapSense_Sensing.c ****              (0u != CapSense_CSD_TOTAL_SHIELD_COUNT))
 796:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsCSDDisableShieldElectrodes();
 797:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* ((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) && \
 798:Generated_Source\PSoC4/CapSense_Sensing.c ****                    (0u != CapSense_CSD_TOTAL_SHIELD_COUNT)) */
 799:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 800:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 801:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 802:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 803:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSX_EN)
 804:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
 805:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsDisableCSXMode
 806:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
 807:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 808:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
 809:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function disables CSX mode.
 810:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 811:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
 812:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  To disable CSX mode the following tasks are performed:
 813:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  1. Disconnect CintA and CintB from AMUXBUS-A.
 814:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  2. Disconnect previous CSX electrode if it has been connected.
 815:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 816:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
 817:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsDisableCSXMode(void)
 818:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 819:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 newRegValue;
 820:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 821:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect CintA from AMUXBUS-A using HSIOM registers */
 822:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_CintA_HSIOM_PTR);
 823:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_CintA_HSIOM_MASK);
 824:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_CintA_HSIOM_PTR, newRegValue);
 825:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 826:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect CintB from AMUXBUS-A using HSIOM registers */
 827:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_CintB_HSIOM_PTR);
 828:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_CintB_HSIOM_MASK);
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 16


 829:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_CintB_HSIOM_PTR, newRegValue);
 830:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 831:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect previous CSX electrode if it has been connected */
 832:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_CSXElectrodeCheck();
 833:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 834:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
 835:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 836:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_ISX_EN)
 837:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
 838:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsDisableISXMode
 839:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
 840:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 841:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
 842:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function disables ISX mode.
 843:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 844:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
 845:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  To disable ISX mode the following tasks are performed:
 846:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  1. Disconnect CintA and CintB from AMUXBUS-A
 847:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  2. Disconnect previous ISX electrode if it has been connected
 848:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 849:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
 850:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsDisableISXMode(void)
 851:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 852:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 newRegValue;
 853:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 854:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect CintA from AMUXBUS-A using HSIOM registers.   */
 855:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_CintA_HSIOM_PTR);
 856:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_CintA_HSIOM_MASK);
 857:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_CintA_HSIOM_PTR, newRegValue);
 858:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 859:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect CintB from AMUXBUS-A using HSIOM registers.   */
 860:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_CintB_HSIOM_PTR);
 861:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_CintB_HSIOM_MASK);
 862:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_CintB_HSIOM_PTR, newRegValue);
 863:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 864:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect previous ISX electrode if it has been connected */
 865:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_ISXElectrodeCheck();
 866:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_DigPrt2_Stop();
 867:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_USES_PORT_3)
 868:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_DigPrt3_Stop();
 869:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* CapSense_USES_PORT_3 */
 870:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 871:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
 872:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 873:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 874:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsSwitchSensingMode
 875:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 876:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 877:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 878:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function changes the mode for case when both CSD and CSX widgets are
 879:Generated_Source\PSoC4/CapSense_Sensing.c **** *  scanned.
 880:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 881:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 882:Generated_Source\PSoC4/CapSense_Sensing.c **** *  To switch to the CSD mode the following tasks are performed:
 883:Generated_Source\PSoC4/CapSense_Sensing.c **** *  1. Disconnect CintA and CintB from AMUXBUS-A.
 884:Generated_Source\PSoC4/CapSense_Sensing.c **** *  2. Disconnect previous CSD electrode if it has been connected.
 885:Generated_Source\PSoC4/CapSense_Sensing.c **** *  3. Initialize CSD mode.
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 17


 886:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 887:Generated_Source\PSoC4/CapSense_Sensing.c **** *  To switch to the CSX mode the following tasks are performed:
 888:Generated_Source\PSoC4/CapSense_Sensing.c **** *  1. Disconnect Cmod from AMUXBUS-A.
 889:Generated_Source\PSoC4/CapSense_Sensing.c **** *  2. Disconnect previous CSX electrode if it has been connected.
 890:Generated_Source\PSoC4/CapSense_Sensing.c **** *  3. Initialize CSX mode.
 891:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 892:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param mode
 893:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the scan mode:
 894:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_SENSE_METHOD_CSD_E
 895:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_SENSE_METHOD_CSX_E
 896:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_SENSE_METHOD_ISX_E
 897:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_SENSE_METHOD_BIST_E
 898:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_UNDEFINED_E
 899:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 900:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 901:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsSwitchSensingMode(CapSense_SENSE_METHOD_ENUM mode)
 902:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 903:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_currentSenseMethod != mode)
 904:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 905:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* The requested mode differes to the current one. Disable the current mode */
 906:Generated_Source\PSoC4/CapSense_Sensing.c ****         if (CapSense_SENSE_METHOD_CSD_E == CapSense_currentSenseMethod)
 907:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 908:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_EN)
 909:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsCSDDisableMode();
 910:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 911:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 912:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_CSX_E == CapSense_currentSenseMethod)
 913:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 914:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSX_EN)
 915:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsDisableCSXMode();
 916:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
 917:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 918:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_ISX_E == CapSense_currentSenseMethod)
 919:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 920:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_ISX_EN)
 921:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsDisableISXMode();
 922:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
 923:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 924:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_BIST_E == CapSense_currentSenseMethod)
 925:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 926:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
 927:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_BistDisableMode();
 928:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_SELF_TEST_EN) */
 929:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 930:Generated_Source\PSoC4/CapSense_Sensing.c ****         else
 931:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 932:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_ADC_EN)
 933:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Release ADC resources */
 934:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (void)CapSense_AdcReleaseResources();
 935:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_ADC_EN) */
 936:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 937:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 938:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Enable the specified mode */
 939:Generated_Source\PSoC4/CapSense_Sensing.c ****         if (CapSense_SENSE_METHOD_CSD_E == mode)
 940:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 941:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_EN)
 942:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Initialize CSD mode to guarantee configured CSD mode */
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 18


 943:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsCSDInitialize();
 944:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_currentSenseMethod = CapSense_SENSE_METHOD_CSD_E;
 945:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 946:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 947:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_CSX_E == mode)
 948:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 949:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSX_EN)
 950:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Initialize CSX mode to guarantee configured CSX mode */
 951:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSXInitialize();
 952:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_currentSenseMethod = CapSense_SENSE_METHOD_CSX_E;
 953:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
 954:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 955:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_ISX_E == mode)
 956:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 957:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_ISX_EN)
 958:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Initialize ISX mode to guarantee configured ISX mode */
 959:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ISXInitialize();
 960:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_currentSenseMethod = CapSense_SENSE_METHOD_ISX_E;
 961:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
 962:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 963:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_BIST_E == mode)
 964:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 965:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
 966:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_BistInitialize();
 967:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_currentSenseMethod = CapSense_SENSE_METHOD_BIST_E;
 968:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_SELF_TEST_EN) */
 969:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 970:Generated_Source\PSoC4/CapSense_Sensing.c ****         else
 971:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 972:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_currentSenseMethod = CapSense_UNDEFINED_E;
 973:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 974:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 975:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 976:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 977:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 978:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 979:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsSetIOsInDefaultState
 980:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 981:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 982:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 983:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets all electrodes into a default state.
 984:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 985:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 986:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets all the CSD/CSX IOs into a default state:
 987:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - HSIOM   - Disconnected, the GPIO mode.
 988:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - DM      - Strong drive.
 989:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - State   - Zero.
 990:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 991:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets all the ADC channels into a default state:
 992:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - HSIOM   - Disconnected, the GPIO mode.
 993:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - DM      - HiZ-Analog.
 994:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - State   - Zero.
 995:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 996:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is not recommended to call this function directly from the application
 997:Generated_Source\PSoC4/CapSense_Sensing.c **** *  layer.
 998:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 999:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 19


1000:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsSetIOsInDefaultState(void)
1001:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1002:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_FLASH_IO_STRUCT const *ioPtr = &CapSense_ioList[0u];
1003:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 loopIndex;
1004:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 regValue;
1005:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1006:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Loop through all electrodes */
1007:Generated_Source\PSoC4/CapSense_Sensing.c ****     for (loopIndex = 0u; loopIndex < CapSense_TOTAL_ELECTRODES; loopIndex++)
1008:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1009:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1010:Generated_Source\PSoC4/CapSense_Sensing.c ****         * 1. Disconnect HSIOM.
1011:Generated_Source\PSoC4/CapSense_Sensing.c ****         * 2. Set strong DM.
1012:Generated_Source\PSoC4/CapSense_Sensing.c ****         * 3. Set pin state to logic 0.
1013:Generated_Source\PSoC4/CapSense_Sensing.c ****         */
1014:Generated_Source\PSoC4/CapSense_Sensing.c ****         regValue = CY_GET_REG32 (ioPtr->hsiomPtr);
1015:Generated_Source\PSoC4/CapSense_Sensing.c ****         regValue &= ~(ioPtr->hsiomMask);
1016:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (ioPtr->hsiomPtr, regValue);
1017:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1018:Generated_Source\PSoC4/CapSense_Sensing.c ****         regValue = CY_GET_REG32 (ioPtr->pcPtr);
1019:Generated_Source\PSoC4/CapSense_Sensing.c ****         regValue &= ~(CapSense_GPIO_PC_MASK << ioPtr->shift);
1020:Generated_Source\PSoC4/CapSense_Sensing.c ****         regValue |=  (CapSense_GPIO_STRGDRV << ioPtr->shift);
1021:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (ioPtr->pcPtr, regValue);
1022:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1023:Generated_Source\PSoC4/CapSense_Sensing.c ****         regValue = CY_GET_REG32 (ioPtr->drPtr);
1024:Generated_Source\PSoC4/CapSense_Sensing.c ****         regValue &= ~(ioPtr->mask);
1025:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (ioPtr->drPtr, regValue);
1026:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1027:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Get next electrode */
1028:Generated_Source\PSoC4/CapSense_Sensing.c ****         ioPtr++;
1029:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1030:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1031:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if(CapSense_ENABLE == CapSense_ADC_EN)
1032:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_ClearAdcChannels();
1033:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (CapSense_ENABLE == CapSense_ADC_EN) */
1034:Generated_Source\PSoC4/CapSense_Sensing.c ****     
1035:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if(CapSense_ENABLE == CapSense_ISX_EN)
1036:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_ISXSetDefaultDigital();
1037:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
1038:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1039:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1040:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_ADC_EN)
1041:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1042:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsReleaseResources()
1043:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1044:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1045:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1046:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function sets the resources that do not belong to the sensing HW block to
1047:Generated_Source\PSoC4/CapSense_Sensing.c **** *  default state.
1048:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1049:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1050:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The function performs following tasks:
1051:Generated_Source\PSoC4/CapSense_Sensing.c **** *  1. Checks if CSD block busy and returns error if it is busy
1052:Generated_Source\PSoC4/CapSense_Sensing.c **** *  2. Disconnects integration capacitors (CintA, CintB for CSX mode and
1053:Generated_Source\PSoC4/CapSense_Sensing.c **** *     Cmod for CSD mode)
1054:Generated_Source\PSoC4/CapSense_Sensing.c **** *  3. Disconnect electroded if they have been connected.
1055:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1056:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 20


1057:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the status of the operation:
1058:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - Zero        - Resources released successfully.
1059:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - Non-zero    - One or more errors occurred in releasing process.
1060:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1061:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1062:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_SsReleaseResources(void)
1063:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1064:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus busyStatus = CYRET_SUCCESS;
1065:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1066:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_SW_STS_BUSY == (CapSense_dsRam.status & CapSense_SW_STS_BUSY))
1067:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1068:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
1069:Generated_Source\PSoC4/CapSense_Sensing.c ****         busyStatus = CYRET_INVALID_STATE;
1070:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1071:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
1072:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1073:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
1074:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsDisableCSXMode();
1075:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
1076:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1077:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_ISX_EN)
1078:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsDisableISXMode();
1079:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
1080:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1081:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
1082:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsCSDDisableMode();
1083:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
1084:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1085:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
1086:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_BistDisableMode();
1087:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_SELF_TEST_EN) */
1088:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1089:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSD_EN) && \
1090:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_ENABLE == CapSense_CSD_SHIELD_EN) &&  \
1091:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_SNS_CONNECTION_SHIELD == CapSense_CSD_INACTIVE_SNS_CONNECTION))
1092:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsSetIOsInDefaultState();
1093:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) && \
1094:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_DISABLE != CapSense_CSD_SHIELD_EN) &&  \
1095:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_SNS_CONNECTION_SHIELD == CapSense_CSD_INACTIVE_SNS_CONNECTION)) */
1096:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1097:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1098:Generated_Source\PSoC4/CapSense_Sensing.c ****          * Reset of the currentSenseMethod variable to make sure that the next
1099:Generated_Source\PSoC4/CapSense_Sensing.c ****          * call of SetupWidget() API setups the correct widget mode
1100:Generated_Source\PSoC4/CapSense_Sensing.c ****          */
1101:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_currentSenseMethod = CapSense_UNDEFINED_E;
1102:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1103:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1104:Generated_Source\PSoC4/CapSense_Sensing.c ****     return busyStatus;
1105:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1106:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_ADC_EN) */
1107:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1108:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1109:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1110:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsPostAllWidgetsScan
1111:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1112:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1113:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 21


1114:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The ISR function for multiple widget scanning implementation.
1115:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1116:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1117:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This is the function used by the CapSense ISR to implement multiple widget
1118:Generated_Source\PSoC4/CapSense_Sensing.c **** *  scanning.
1119:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Should not be used by the application layer.
1120:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1121:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1122:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsPostAllWidgetsScan(void)
1123:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1124:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
1125:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  1. Increment widget index
1126:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  2. Check if all the widgets are scanned
1127:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  3. If all the widgets are not scanned, set up and scan next widget
1128:Generated_Source\PSoC4/CapSense_Sensing.c ****     */
1129:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (1u != CapSense_TOTAL_WIDGETS)
1130:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus postScanStatus;
1131:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1132:Generated_Source\PSoC4/CapSense_Sensing.c ****         do
1133:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1134:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_widgetIndex++;
1135:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1136:Generated_Source\PSoC4/CapSense_Sensing.c ****             postScanStatus = CapSense_SetupWidget((uint32)CapSense_widgetIndex);
1137:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1138:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CYRET_SUCCESS == postScanStatus)
1139:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1140:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if((CapSense_TOTAL_WIDGETS - 1u) == CapSense_widgetIndex)
1141:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1142:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* The last widget will be scanned. Reset flag to skip configuring the next wid
1143:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CapSense_requestScanAllWidget = CapSense_DISABLE;
1144:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1145:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (void)CapSense_Scan();
1146:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1147:Generated_Source\PSoC4/CapSense_Sensing.c ****             else if((CapSense_TOTAL_WIDGETS - 1u) == CapSense_widgetIndex)
1148:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1149:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if ((CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN) && \
1150:Generated_Source\PSoC4/CapSense_Sensing.c ****                      (CapSense_ENABLE == CapSense_CSD_EN))
1151:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if (CapSense_SENSE_METHOD_CSD_E ==
1152:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[CapSense_widgetIndex]
1153:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
1154:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Disable the CSD block */
1155:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd);
1156:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1157:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* ((CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN) && \
1158:Generated_Source\PSoC4/CapSense_Sensing.c ****                            (CapSense_ENABLE == CapSense_CSD_EN)) */
1159:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1160:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Update scan Counter */
1161:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.scanCounter++;
1162:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* All widgets are totally processed. Reset BUSY flag */
1163:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status &= ~CapSense_SW_STS_BUSY;
1164:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1165:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Update status with with the failure */
1166:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status &= ~CapSense_STATUS_ERR_MASK;
1167:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status |= ((postScanStatus & CapSense_STATUS_ERR_SIZE) << CapSense_S
1168:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1169:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set postScanStatus to exit the while loop */
1170:Generated_Source\PSoC4/CapSense_Sensing.c ****                 postScanStatus = CYRET_SUCCESS;
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 22


1171:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1172:Generated_Source\PSoC4/CapSense_Sensing.c ****             else
1173:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1174:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Update status with with the failure. Configure the next widget in while() loop *
1175:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status &= ~CapSense_STATUS_ERR_MASK;
1176:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status |= ((postScanStatus & CapSense_STATUS_ERR_SIZE) << CapSense_S
1177:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1178:Generated_Source\PSoC4/CapSense_Sensing.c ****         } while (CYRET_SUCCESS != postScanStatus);
1179:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (1u != CapSense_TOTAL_WIDGETS) */
1180:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1181:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1182:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1183:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1184:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsIsrInitialize
1185:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1186:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1187:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1188:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Enables and initializes for the function pointer for a callback for the ISR.
1189:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1190:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1191:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The "address" is a special type cyisraddress defined by Cylib. This function
1192:Generated_Source\PSoC4/CapSense_Sensing.c **** *  is used by Component APIs and should not be used by an application program for
1193:Generated_Source\PSoC4/CapSense_Sensing.c **** *  proper working of the Component.
1194:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1195:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param address
1196:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The address of the function to be called when interrupt is fired.
1197:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1198:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1199:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsIsrInitialize(cyisraddress address)
1200:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1201:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_ISR_StartEx(address);
1202:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1203:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1204:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1205:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1206:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsSetModClkClockDivider
1207:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1208:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1209:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1210:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets the divider values for the modulator clock and then starts
1211:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the modulator clock.
1212:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1213:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1214:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is not recommended to call this function directly by the application layer.
1215:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is used by initialization, widget APIs or wakeup functions to
1216:Generated_Source\PSoC4/CapSense_Sensing.c **** *  enable the clocks.
1217:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1218:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param modClk
1219:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The divider value for the modulator clock.
1220:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1221:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1222:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsSetModClkClockDivider(uint32 modClk)
1223:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1224:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
1225:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Stop modulator clock */
1226:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_CMD_PTR,
1227:Generated_Source\PSoC4/CapSense_Sensing.c ****                  ((uint32)CapSense_ModClk__DIV_ID <<
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 23


1228:Generated_Source\PSoC4/CapSense_Sensing.c ****                  CapSense_MODCLK_CMD_DIV_SHIFT)|
1229:Generated_Source\PSoC4/CapSense_Sensing.c ****                  ((uint32)CapSense_MODCLK_CMD_DISABLE_MASK));
1230:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1231:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
1232:Generated_Source\PSoC4/CapSense_Sensing.c ****      * Set divider value for sense modClk.
1233:Generated_Source\PSoC4/CapSense_Sensing.c ****      * 1u is subtracted from modClk because Divider register value 0 corresponds
1234:Generated_Source\PSoC4/CapSense_Sensing.c ****      * to dividing by 1.
1235:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
1236:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_DIV_PTR, ((modClk - 1u) << 8u));
1237:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1238:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Check whether previous modulator clock start command has finished. */
1239:Generated_Source\PSoC4/CapSense_Sensing.c ****     while(0u != (CY_GET_REG32(CapSense_MODCLK_CMD_PTR) & CapSense_MODCLK_CMD_ENABLE_MASK))
1240:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1241:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Wait until previous modulator clock start command has finished */
1242:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1243:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1244:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Start modulator clock, aligned to HFCLK */
1245:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_CMD_PTR,
1246:Generated_Source\PSoC4/CapSense_Sensing.c ****                  (uint32)(((uint32)CapSense_ModClk__DIV_ID << CapSense_MODCLK_CMD_DIV_SHIFT) |
1247:Generated_Source\PSoC4/CapSense_Sensing.c ****                   ((uint32)CapSense_ModClk__PA_DIV_ID << CapSense_MODCLK_CMD_PA_DIV_SHIFT) |
1248:Generated_Source\PSoC4/CapSense_Sensing.c ****                   CapSense_MODCLK_CMD_ENABLE_MASK));
1249:Generated_Source\PSoC4/CapSense_Sensing.c **** #else
1250:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 newRegValue;
1251:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1252:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Clear bit to disable ModClk clock. */
1253:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_CMD_PTR,
1254:Generated_Source\PSoC4/CapSense_Sensing.c ****                  CY_GET_REG32(CapSense_MODCLK_CMD_PTR) &
1255:Generated_Source\PSoC4/CapSense_Sensing.c ****                  (uint32)(~CapSense_ModClk__ENABLE_MASK));
1256:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1257:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
1258:Generated_Source\PSoC4/CapSense_Sensing.c ****      * Update ModClk clock divider.
1259:Generated_Source\PSoC4/CapSense_Sensing.c ****      * 1u is subtracted from modClk because Divider register value has range (0-65535).
1260:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
1261:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue = CY_GET_REG32(CapSense_MODCLK_DIV_PTR) & (uint32)(~(uint32)CapSense_ModClk__DIVIDE
1262:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue |= (modClk - 1u);
1263:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_DIV_PTR, newRegValue);
1264:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1265:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Set bit to enable ModClk clock. */
1266:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_CMD_PTR,
1267:Generated_Source\PSoC4/CapSense_Sensing.c ****                  CY_GET_REG32(CapSense_MODCLK_CMD_PTR) |
1268:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ModClk__ENABLE_MASK);
1269:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK) */
1270:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1271:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1272:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1273:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1274:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsSetSnsClockDivider
1275:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1276:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1277:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1278:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets the divider values for the sense clock and then starts
1279:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the sense clock.
1280:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1281:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1282:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is not recommended to call this function directly by the application layer.
1283:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is used by initialization, widget APIs or wakeup functions to
1284:Generated_Source\PSoC4/CapSense_Sensing.c **** *  enable the clocks.
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 24


1285:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1286:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param
1287:Generated_Source\PSoC4/CapSense_Sensing.c **** *  snsClk The divider value for the sense clock.
1288:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1289:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1290:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsSetSnsClockDivider(uint32 snsClk)
1291:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1292:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSDV2)
1293:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 newRegValue;
1294:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1295:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
1296:Generated_Source\PSoC4/CapSense_Sensing.c ****      * Set divider value for sense clock.
1297:Generated_Source\PSoC4/CapSense_Sensing.c ****      * 1u is subtracted from snsClk because SENSE_DIV value 0 corresponds
1298:Generated_Source\PSoC4/CapSense_Sensing.c ****      * to dividing by 1.
1299:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
1300:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue = CY_GET_REG32(CapSense_SENSE_PERIOD_PTR);
1301:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue &= (uint32)(~CapSense_SENSE_PERIOD_SENSE_DIV_MASK);
1302:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue |= snsClk - 1u;
1303:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_SENSE_PERIOD_PTR, newRegValue);
1304:Generated_Source\PSoC4/CapSense_Sensing.c **** #else
1305:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
1306:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Stop sense clock clock   */
1307:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_CMD_PTR,
1308:Generated_Source\PSoC4/CapSense_Sensing.c ****                      ((uint32)CapSense_SnsClk__DIV_ID <<
1309:Generated_Source\PSoC4/CapSense_Sensing.c ****                      CapSense_SNSCLK_CMD_DIV_SHIFT)|
1310:Generated_Source\PSoC4/CapSense_Sensing.c ****                      ((uint32)CapSense_SNSCLK_CMD_DISABLE_MASK));
1311:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1312:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1313:Generated_Source\PSoC4/CapSense_Sensing.c ****          * Set divider value for sense clock.
1314:Generated_Source\PSoC4/CapSense_Sensing.c ****          * 1u is subtracted from snsClk because Divider register value 0 corresponds
1315:Generated_Source\PSoC4/CapSense_Sensing.c ****          * to dividing by 1.
1316:Generated_Source\PSoC4/CapSense_Sensing.c ****          */
1317:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_DIV_PTR, ((snsClk - 1u) << 8u));
1318:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1319:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Check whether previous sense clock start command has finished. */
1320:Generated_Source\PSoC4/CapSense_Sensing.c ****         while(0u != (CY_GET_REG32(CapSense_SNSCLK_CMD_PTR) & CapSense_SNSCLK_CMD_ENABLE_MASK))
1321:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1322:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Wait until previous sense clock start command has finished. */
1323:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1324:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1325:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Start sense clock aligned to previously started modulator clock. */
1326:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_CMD_PTR,
1327:Generated_Source\PSoC4/CapSense_Sensing.c ****                      (uint32)(((uint32)CapSense_SnsClk__DIV_ID << CapSense_SNSCLK_CMD_DIV_SHIFT) |
1328:Generated_Source\PSoC4/CapSense_Sensing.c ****                       ((uint32)CapSense_ModClk__PA_DIV_ID << CapSense_SNSCLK_CMD_PA_DIV_SHIFT) |
1329:Generated_Source\PSoC4/CapSense_Sensing.c ****                       CapSense_SNSCLK_CMD_ENABLE_MASK));
1330:Generated_Source\PSoC4/CapSense_Sensing.c ****     #else
1331:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 newRegValue;
1332:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1333:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Clear bit to disable SnsClk clock. */
1334:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_CMD_PTR,
1335:Generated_Source\PSoC4/CapSense_Sensing.c ****                      CY_GET_REG32(CapSense_SNSCLK_CMD_PTR) &
1336:Generated_Source\PSoC4/CapSense_Sensing.c ****                      (uint32)(~(uint32)CapSense_SnsClk__ENABLE_MASK));
1337:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1338:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1339:Generated_Source\PSoC4/CapSense_Sensing.c ****          * Update snsClk clock divider.
1340:Generated_Source\PSoC4/CapSense_Sensing.c ****          * 1u is subtracted from snsClk because Divider register value has range (0-65535).
1341:Generated_Source\PSoC4/CapSense_Sensing.c ****          */
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 25


1342:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_SNSCLK_DIV_PTR) & (uint32)(~(uint32)CapSense_SnsClk__DI
1343:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue |= (snsClk - 1u);
1344:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_DIV_PTR, newRegValue);
1345:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1346:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Set bit to enable SnsClk clock. */
1347:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_CMD_PTR,
1348:Generated_Source\PSoC4/CapSense_Sensing.c ****                      CY_GET_REG32(CapSense_SNSCLK_CMD_PTR) |
1349:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CapSense_SnsClk__ENABLE_MASK);
1350:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK) */
1351:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
1352:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1353:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1354:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1355:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1356:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsSetClockDividers
1357:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1358:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1359:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1360:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets the divider values for sense and modulator clocks and then starts
1361:Generated_Source\PSoC4/CapSense_Sensing.c **** *  a modulator clock-phase aligned to HFCLK and sense clock-phase aligned to
1362:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the modulator clock.
1363:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1364:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1365:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is not recommended to call this function directly by the application layer.
1366:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is used by initialization, widget APIs or wakeup functions to
1367:Generated_Source\PSoC4/CapSense_Sensing.c **** *  enable the clocks.
1368:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1369:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param
1370:Generated_Source\PSoC4/CapSense_Sensing.c **** *  snsClk The divider value for the sense clock.
1371:Generated_Source\PSoC4/CapSense_Sensing.c **** *  modClk The divider value for the modulator clock.
1372:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1373:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1374:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsSetClockDividers(uint32 snsClk, uint32 modClk)
1375:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1376:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Configure Mod clock */
1377:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_SsSetModClkClockDivider(modClk);
1378:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1379:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Configure Sns clock */
1380:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_SsSetSnsClockDivider(snsClk);
1381:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1382:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1383:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1384:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ANYMODE_AUTOCAL)
1385:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
1386:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_CalibrateWidget
1387:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
1388:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1389:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
1390:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Calibrates the IDACs for all the sensors in the specified widget to the default
1391:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  target, this function detects the sensing method used by the
1392:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  widget prior to calibration.
1393:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1394:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
1395:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function performs exactly the same tasks as
1396:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  CapSense_CalibrateAllWidgets, but only for a specified widget.
1397:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function detects the sensing method used by the widgets and uses
1398:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  the Enable compensation IDAC parameter. 
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 26


1399:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \if SECTION_I_REP
1400:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  For ISX mode, the frequency is also calibrated.
1401:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endif
1402:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1403:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \if SECTION_C_LOW_LEVEL
1404:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function is available when the CSD and/or CSX Enable IDAC
1405:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  auto-calibration parameter is enabled.
1406:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endif
1407:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \if SECTION_I_REP
1408:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function is available when the ISX Enable auto-calibration parameter
1409:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  is enabled.
1410:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endif
1411:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1412:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param widgetId
1413:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Specifies the ID number of the widget to calibrate its raw count.
1414:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  A macro for the widget ID can be found in the
1415:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  CapSense Configuration header file defined as
1416:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  CapSense_<WidgetName>_WDGT_ID.
1417:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1418:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \return
1419:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Returns the status of the specified widget calibration:
1420:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_SUCCESS - The operation is successfully completed.
1421:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_BAD_PARAM - The input parameter is invalid.
1422:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_BAD_DATA - The calibration failed and the Component may not
1423:Generated_Source\PSoC4/CapSense_Sensing.c ****     *    operate as expected.
1424:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1425:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
1426:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus CapSense_CalibrateWidget(uint32 widgetId)
1427:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1428:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
1429:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1430:Generated_Source\PSoC4/CapSense_Sensing.c ****         do
1431:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1432:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CapSense_TOTAL_WIDGETS <= widgetId)
1433:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1434:Generated_Source\PSoC4/CapSense_Sensing.c ****                 calibrateStatus = CYRET_BAD_PARAM;
1435:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1436:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1437:Generated_Source\PSoC4/CapSense_Sensing.c ****             /*
1438:Generated_Source\PSoC4/CapSense_Sensing.c ****              *  Check if widget id is valid, specified widget did not
1439:Generated_Source\PSoC4/CapSense_Sensing.c ****              *  detect any faults conditions if BIST is enabled.
1440:Generated_Source\PSoC4/CapSense_Sensing.c ****              */
1441:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
1442:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if (0u != CapSense_GET_WIDGET_EN_STATUS(widgetId))
1443:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1444:Generated_Source\PSoC4/CapSense_Sensing.c ****                     calibrateStatus = CYRET_SUCCESS;
1445:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1446:Generated_Source\PSoC4/CapSense_Sensing.c ****                 else
1447:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1448:Generated_Source\PSoC4/CapSense_Sensing.c ****                     calibrateStatus = CYRET_INVALID_STATE;
1449:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1450:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif  /* (CapSense_ENABLE == CapSense_SELF_TEST_EN) */
1451:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1452:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CYRET_SUCCESS != calibrateStatus)
1453:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1454:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Exit from the loop because of a fail */
1455:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 27


1456:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1457:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1458:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* If both CSD and CSX are enabled, calibrate widget using sensing method */
1459:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_CSX_EN)
1460:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Check widget sensing method and call appropriate APIs */
1461:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_CSX_IDAC_AUTOCAL_EN)
1462:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if (CapSense_SENSE_METHOD_CSX_E ==
1463:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[widgetId]))
1464:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
1465:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Calibrate CSX widget */
1466:Generated_Source\PSoC4/CapSense_Sensing.c ****                        CapSense_CSXCalibrateWidget(widgetId, CapSense_CSX_RAWCOUNT_CAL_LEVEL);
1467:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1468:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif  /* (CapSense_ENABLE == CapSense_CSX_IDAC_AUTOCAL_EN) */
1469:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1470:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_CSD_IDAC_AUTOCAL_EN)
1471:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if (CapSense_SENSE_METHOD_CSD_E ==
1472:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[widgetId]))
1473:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
1474:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Calibrate CSD widget */
1475:Generated_Source\PSoC4/CapSense_Sensing.c ****                         calibrateStatus = CapSense_CSDCalibrateWidget(widgetId, CapSense_CSD_RAWCOU
1476:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1477:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif  /* (CapSense_ENABLE == CapSense_CSD_IDAC_AUTOCAL_EN) */
1478:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1479:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* If only CSD is enabled, calibrate CSD sensor */
1480:Generated_Source\PSoC4/CapSense_Sensing.c ****             #elif (CapSense_ENABLE == CapSense_CSD_EN)
1481:Generated_Source\PSoC4/CapSense_Sensing.c ****                 calibrateStatus = CapSense_CSDCalibrateWidget(widgetId, CapSense_CSD_RAWCOUNT_CAL_L
1482:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1483:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* If only CSX is enabled, call CSX scan */
1484:Generated_Source\PSoC4/CapSense_Sensing.c ****             #elif (CapSense_ENABLE == CapSense_CSX_EN)
1485:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSXCalibrateWidget(widgetId, CapSense_CSX_RAWCOUNT_CAL_LEVEL);
1486:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1487:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* If only ISX is enabled, call ISX scan */
1488:Generated_Source\PSoC4/CapSense_Sensing.c ****             #elif (CapSense_ENABLE == CapSense_ISX_EN)
1489:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ISXCalibrateWidget(widgetId, CapSense_ISX_RAWCOUNT_CAL_LEVEL);
1490:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1491:Generated_Source\PSoC4/CapSense_Sensing.c ****             #else
1492:Generated_Source\PSoC4/CapSense_Sensing.c ****                 calibrateStatus = CYRET_UNKNOWN;
1493:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif
1494:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1495:Generated_Source\PSoC4/CapSense_Sensing.c ****              /* Update CRC */
1496:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE ==CapSense_TST_WDGT_CRC_EN)
1497:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_DsUpdateWidgetCrc(widgetId);
1498:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE ==CapSense_TST_WDGT_CRC_EN) */
1499:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1500:Generated_Source\PSoC4/CapSense_Sensing.c ****         } while (0u);
1501:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1502:Generated_Source\PSoC4/CapSense_Sensing.c ****         return calibrateStatus;
1503:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1504:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1505:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1506:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
1507:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_CalibrateAllWidgets
1508:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
1509:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1510:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
1511:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Calibrates the IDACs for all the widgets in the Component to the default
1512:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  target, this function detects the sensing method used by the widgets
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 28


1513:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  prior to calibration.
1514:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1515:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
1516:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Calibrates the IDACs for all the widgets in the Component to the default
1517:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  target value. This function detects the sensing method used by the widgets
1518:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  and regards the Enable compensation IDAC parameter.
1519:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \if SECTION_I_REP
1520:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  For ISX mode, the frequency is also calibrated.
1521:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endif
1522:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1523:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \cond SECTION_C_LOW_LEVEL
1524:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function is available when the CSD and/or CSX Enable IDAC
1525:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  auto-calibration parameter is enabled.
1526:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endcond
1527:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \if SECTION_I_REP
1528:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function is available when the ISX Enable Auto-calibration parameter
1529:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  is enabled.
1530:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endif
1531:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1532:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \return
1533:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Returns the status of the calibration process:
1534:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_SUCCESS - The operation is successfully completed.
1535:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_BAD_DATA - The calibration failed and the Component may not
1536:Generated_Source\PSoC4/CapSense_Sensing.c ****     *    operate as expected.
1537:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1538:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
1539:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus CapSense_CalibrateAllWidgets(void)
1540:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1541:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
1542:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 wdgtIndex;
1543:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1544:Generated_Source\PSoC4/CapSense_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_TOTAL_WIDGETS; wdgtIndex++)
1545:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1546:Generated_Source\PSoC4/CapSense_Sensing.c ****             calibrateStatus |= CapSense_CalibrateWidget(wdgtIndex);
1547:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1548:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1549:Generated_Source\PSoC4/CapSense_Sensing.c ****         return calibrateStatus;
1550:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1551:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ANYMODE_AUTOCAL) */
1552:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1553:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1554:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE)
1555:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
1556:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsAutoTune
1557:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
1558:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1559:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
1560:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This API performs the parameters auto-tuning for the optimal CapSense operation.
1561:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1562:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
1563:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This API performs the following:
1564:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Calibrates Modulator and Compensation IDACs.
1565:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Tunes the Sense Clock optimal value to get a Sense Clock period greater than
1566:Generated_Source\PSoC4/CapSense_Sensing.c ****     *    2*5*R*Cp.
1567:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Calculates the resolution for the optimal finger capacitance.
1568:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1569:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \return
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 29


1570:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Returns the status of the operation:
1571:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Zero     - All the widgets are auto-tuned successfully.
1572:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Non-zero - Auto-tuning failed for any widget.
1573:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1574:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
1575:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus CapSense_SsAutoTune(void)
1576:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1577:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus autoTuneStatus = CYRET_SUCCESS;
1578:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 wdgtIndex;
1579:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1580:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 cp = 0uL;
1581:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1582:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cpRow = 0uL;
1583:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
1584:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1585:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 cpWidget[CapSense_TOTAL_WIDGETS];
1586:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_RAM_WD_BASE_STRUCT *ptrWdgt;
1587:Generated_Source\PSoC4/CapSense_Sensing.c ****         AUTO_TUNE_CONFIG_TYPE autoTuneConfig;
1588:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1589:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Configure common config variables */
1590:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.snsClkConstantR = CapSense_CSD_SNSCLK_R_CONST;
1591:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.vRef = CapSense_CSD_VREF_MV;
1592:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.iDacGain = CapSense_CSD_IDAC_GAIN_VALUE_NA;
1593:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1594:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Calculate snsClk Input Clock in KHz */
1595:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSDV2)
1596:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Dividers are chained (Fourth-generation HW block). Flip flop is not available */
1597:Generated_Source\PSoC4/CapSense_Sensing.c ****             autoTuneConfig.snsClkInputClock = (CYDEV_BCLK__HFCLK__KHZ / CapSense_dsRam.modCsdClk);
1598:Generated_Source\PSoC4/CapSense_Sensing.c ****         #elif ((CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK) && (CapSense_DISABLE == CY_PSOC4_400
1599:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Dividers are not chained */
1600:Generated_Source\PSoC4/CapSense_Sensing.c ****             autoTuneConfig.snsClkInputClock = CYDEV_BCLK__HFCLK__KHZ >> CapSense_FLIP_FLOP_DIV;
1601:Generated_Source\PSoC4/CapSense_Sensing.c ****         #elif (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
1602:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Dividers are not chained (PSoC 4000) */
1603:Generated_Source\PSoC4/CapSense_Sensing.c ****             autoTuneConfig.snsClkInputClock = CYDEV_BCLK__HFCLK__KHZ >> CapSense_FLIP_FLOP_DIV;
1604:Generated_Source\PSoC4/CapSense_Sensing.c ****         #else
1605:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Dividers are chained (PSoC 4100, PSoC 4200) */
1606:Generated_Source\PSoC4/CapSense_Sensing.c ****             autoTuneConfig.snsClkInputClock = (CYDEV_BCLK__HFCLK__KHZ / CapSense_dsRam.modCsdClk) >
1607:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
1608:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1609:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* If both CSD and CSX are enabled, calibrate widget using sensing method */
1610:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_CSX_EN)
1611:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Initialize CSD mode */
1612:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsCSDInitialize();
1613:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_CSX_EN) */
1614:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1615:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1616:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Autotune phase #1:
1617:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - performing the first calibration at fixed settings
1618:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - getting sensor Cp
1619:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - getting sense clock frequency based on Cp
1620:Generated_Source\PSoC4/CapSense_Sensing.c ****         */
1621:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1622:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Tune sense clock for all the widgets */
1623:Generated_Source\PSoC4/CapSense_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_TOTAL_WIDGETS; wdgtIndex++)
1624:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1625:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CapSense_SENSE_METHOD_CSD_E ==
1626:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[wdgtIndex]))
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 30


1627:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1628:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
1629:Generated_Source\PSoC4/CapSense_Sensing.c ****                           CapSense_dsFlash.wdgtArray[wdgtIndex].ptr2WdgtRam;
1630:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1631:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set calibration resolution to 12 bits */
1632:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ptrWdgt->resolution = CapSense_CALIBRATION_RESOLUTION;
1633:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1634:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set clock source direct and sense clock frequency to 1.5 MHz */
1635:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ptrWdgt->snsClkSource = (uint8)CapSense_CLK_SOURCE_DIRECT;
1636:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ptrWdgt->snsClk = (uint16)((uint32)autoTuneConfig.snsClkInputClock / CapSense_CALIB
1637:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1638:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if ((CapSense_WD_TOUCHPAD_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdgtArra
1639:Generated_Source\PSoC4/CapSense_Sensing.c ****                         (CapSense_WD_MATRIX_BUTTON_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdg
1640:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
1641:Generated_Source\PSoC4/CapSense_Sensing.c ****                         ptrWdgt->rowSnsClkSource = (uint8)CapSense_CLK_SOURCE_DIRECT;
1642:Generated_Source\PSoC4/CapSense_Sensing.c ****                         ptrWdgt->rowSnsClk = (uint16)((uint32)autoTuneConfig.snsClkInputClock / Cap
1643:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1644:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif
1645:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1646:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Calibrate CSD widget to the default calibration target */
1647:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (void)CapSense_CSDCalibrateWidget(wdgtIndex, CapSense_CSD_AUTOTUNE_CAL_LEVEL);
1648:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1649:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1650:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if ((CapSense_WD_TOUCHPAD_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdgtArra
1651:Generated_Source\PSoC4/CapSense_Sensing.c ****                         (CapSense_WD_MATRIX_BUTTON_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdg
1652:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
1653:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Get pointer to Sense Clock Divider for columns */
1654:Generated_Source\PSoC4/CapSense_Sensing.c ****                         autoTuneConfig.ptrSenseClk = &ptrWdgt->rowSnsClk;
1655:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1656:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Get IDAC */
1657:Generated_Source\PSoC4/CapSense_Sensing.c ****                         autoTuneConfig.iDac = CapSense_calibratedIdacRow;
1658:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1659:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Calculate achived calibration level */
1660:Generated_Source\PSoC4/CapSense_Sensing.c ****                         autoTuneConfig.calTarget = (uint16)(((uint32)CapSense_calibratedRawcountRow
1661:Generated_Source\PSoC4/CapSense_Sensing.c ****                                 ((uint32)(0x01uL << CapSense_CALIBRATION_RESOLUTION) - 1u));
1662:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1663:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Find correct sense clock value */
1664:Generated_Source\PSoC4/CapSense_Sensing.c ****                         cpRow = SmartSense_TunePrescalers(&autoTuneConfig);
1665:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1666:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if ((CapSense_CP_MAX + CapSense_CP_ERROR) <= cpRow)
1667:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
1668:Generated_Source\PSoC4/CapSense_Sensing.c ****                             autoTuneStatus = CYRET_BAD_DATA;
1669:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
1670:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1671:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /*
1672:Generated_Source\PSoC4/CapSense_Sensing.c ****                         * Multiply the sense Clock Divider by 2 while the desired Sense Clock Frequ
1673:Generated_Source\PSoC4/CapSense_Sensing.c ****                         * than maximum supported Sense Clock Frequency.
1674:Generated_Source\PSoC4/CapSense_Sensing.c ****                         */
1675:Generated_Source\PSoC4/CapSense_Sensing.c ****                         while((((uint32)autoTuneConfig.snsClkInputClock) > ((uint32)ptrWdgt->snsClk
1676:Generated_Source\PSoC4/CapSense_Sensing.c ****                                 (CapSense_MIN_SNS_CLK_DIVIDER > ptrWdgt->snsClk))
1677:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
1678:Generated_Source\PSoC4/CapSense_Sensing.c ****                             ptrWdgt->snsClk <<= 1u;
1679:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
1680:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1681:Generated_Source\PSoC4/CapSense_Sensing.c ****                         #if (CapSense_ENABLE != CapSense_CSDV2)
1682:Generated_Source\PSoC4/CapSense_Sensing.c ****                             #if (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
1683:Generated_Source\PSoC4/CapSense_Sensing.c ****                                 /* Make sure that ModClk >= 2 * rowSnsClk */
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 31


1684:Generated_Source\PSoC4/CapSense_Sensing.c ****                                 if (CapSense_dsRam.modCsdClk >= ((uint8)(ptrWdgt->rowSnsClk << CapS
1685:Generated_Source\PSoC4/CapSense_Sensing.c ****                                 {
1686:Generated_Source\PSoC4/CapSense_Sensing.c ****                                      ptrWdgt->rowSnsClk = CapSense_dsRam.modCsdClk;
1687:Generated_Source\PSoC4/CapSense_Sensing.c ****                                 }
1688:Generated_Source\PSoC4/CapSense_Sensing.c ****                             #else
1689:Generated_Source\PSoC4/CapSense_Sensing.c ****                                 /* Sense clock never equals to Modulator clock for chained dividers
1690:Generated_Source\PSoC4/CapSense_Sensing.c ****                             #endif
1691:Generated_Source\PSoC4/CapSense_Sensing.c ****                         #endif /* (CapSense_ENABLE != CapSense_CSDV2) */
1692:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1693:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
1694:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1695:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Get pointer to Sense Clock Divider for columns */
1696:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.ptrSenseClk = &ptrWdgt->snsClk;
1697:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1698:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Get IDAC */
1699:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.iDac = CapSense_calibratedIdac;
1700:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1701:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Calculate achived calibration level */
1702:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.calTarget = (uint16)(((uint32)CapSense_calibratedRawcount * CapSense
1703:Generated_Source\PSoC4/CapSense_Sensing.c ****                         ((uint32)(0x01uL << CapSense_CALIBRATION_RESOLUTION) - 1u));
1704:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1705:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Find correct sense clock value */
1706:Generated_Source\PSoC4/CapSense_Sensing.c ****                 cp = SmartSense_TunePrescalers(&autoTuneConfig);
1707:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1708:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if ((CapSense_CP_MAX + CapSense_CP_ERROR) <= cp)
1709:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1710:Generated_Source\PSoC4/CapSense_Sensing.c ****                     autoTuneStatus = CYRET_BAD_DATA;
1711:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1712:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1713:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /*
1714:Generated_Source\PSoC4/CapSense_Sensing.c ****                 * Multiply the sense Clock Divider by 2 while the desired Sense Clock Frequency is 
1715:Generated_Source\PSoC4/CapSense_Sensing.c ****                 * than MAX supported Sense Clock Frequency.
1716:Generated_Source\PSoC4/CapSense_Sensing.c ****                 */
1717:Generated_Source\PSoC4/CapSense_Sensing.c ****                 while((((uint32)autoTuneConfig.snsClkInputClock) > ((uint32)ptrWdgt->snsClk * CapSe
1718:Generated_Source\PSoC4/CapSense_Sensing.c ****                         (CapSense_MIN_SNS_CLK_DIVIDER > ptrWdgt->snsClk))
1719:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1720:Generated_Source\PSoC4/CapSense_Sensing.c ****                     ptrWdgt->snsClk <<= 1u;
1721:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1722:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1723:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE != CapSense_CSDV2)
1724:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
1725:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Make sure that ModClk >= 2 * snsClk */
1726:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (CapSense_dsRam.modCsdClk >= ((uint8)(ptrWdgt->snsClk << CapSense_FLIP_F
1727:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
1728:Generated_Source\PSoC4/CapSense_Sensing.c ****                              ptrWdgt->snsClk = CapSense_dsRam.modCsdClk;
1729:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
1730:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #else
1731:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Sense clock never equals to Modulator clock for chained dividers because
1732:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif
1733:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_ENABLE != CapSense_CSDV2) */
1734:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1735:Generated_Source\PSoC4/CapSense_Sensing.c ****                 cpWidget[wdgtIndex] = cp;
1736:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1737:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1738:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if ((CapSense_WD_TOUCHPAD_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdgtArra
1739:Generated_Source\PSoC4/CapSense_Sensing.c ****                         (CapSense_WD_MATRIX_BUTTON_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdg
1740:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 32


1741:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (cpRow > cp)
1742:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
1743:Generated_Source\PSoC4/CapSense_Sensing.c ****                             cpWidget[wdgtIndex] = cpRow;
1744:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
1745:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1746:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
1747:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1748:Generated_Source\PSoC4/CapSense_Sensing.c ****             else
1749:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1750:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_CSX_EN)
1751:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* Non-CSD widget */
1752:Generated_Source\PSoC4/CapSense_Sensing.c ****                     cpWidget[wdgtIndex] = 1u;
1753:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
1754:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1755:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1756:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1757:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1758:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Autotune phase #2:
1759:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - repeating calibration with new sense clock frequency
1760:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - getting resolution
1761:Generated_Source\PSoC4/CapSense_Sensing.c ****         */
1762:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1763:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Tune resolution for all the widgets */
1764:Generated_Source\PSoC4/CapSense_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_TOTAL_WIDGETS; wdgtIndex++)
1765:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1766:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CapSense_SENSE_METHOD_CSD_E ==
1767:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[wdgtIndex]))
1768:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1769:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
1770:Generated_Source\PSoC4/CapSense_Sensing.c ****                           CapSense_dsFlash.wdgtArray[wdgtIndex].ptr2WdgtRam;
1771:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1772:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Calibrate CSD widget to the default calibration target */
1773:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneStatus |= CapSense_CSDCalibrateWidget(wdgtIndex, CapSense_CSD_AUTOTUNE_CAL_
1774:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1775:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Get pointer to Sense Clock Divider (column or row) */
1776:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.ptrSenseClk = &ptrWdgt->snsClk;
1777:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1778:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set parasitic capacitance for columns */
1779:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.sensorCap = cpWidget[wdgtIndex];
1780:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1781:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Get IDAC */
1782:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.iDac = CapSense_calibratedIdac;
1783:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1784:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1785:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if ((CapSense_WD_TOUCHPAD_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdgtArra
1786:Generated_Source\PSoC4/CapSense_Sensing.c ****                         (CapSense_WD_MATRIX_BUTTON_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdg
1787:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1788:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
1789:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Set the minimum sense clock frequency to calculate the resolution */
1790:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (ptrWdgt->snsClk < ptrWdgt->rowSnsClk)
1791:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
1792:Generated_Source\PSoC4/CapSense_Sensing.c ****                             /* Rewrite pointer to Sense Clock Divider for rows */
1793:Generated_Source\PSoC4/CapSense_Sensing.c ****                             autoTuneConfig.ptrSenseClk = &ptrWdgt->rowSnsClk;
1794:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1795:Generated_Source\PSoC4/CapSense_Sensing.c ****                             /* Set parasitic capacitance for rows */
1796:Generated_Source\PSoC4/CapSense_Sensing.c ****                             autoTuneConfig.sensorCap = cpWidget[wdgtIndex];
1797:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 33


1798:Generated_Source\PSoC4/CapSense_Sensing.c ****                             /* Get IDAC */
1799:Generated_Source\PSoC4/CapSense_Sensing.c ****                             autoTuneConfig.iDac = CapSense_calibratedIdacRow;
1800:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
1801:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1802:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
1803:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1804:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Get finger capacitance */
1805:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.fingerCap = ptrWdgt->fingerCap;
1806:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1807:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Init pointer to sigPFC */
1808:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.sigPFC = &ptrWdgt->sigPFC;
1809:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1810:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Find resolution */
1811:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ptrWdgt->resolution = SmartSense_TuneSensitivity(&autoTuneConfig);
1812:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1813:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1814:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1815:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1816:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Autotune phase #3:
1817:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - selecting a widget clock source if AUTO
1818:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - repeating calibration with found clock frequency, resolution and clock source
1819:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - updating sensitivity
1820:Generated_Source\PSoC4/CapSense_Sensing.c ****         */
1821:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1822:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Tune sensitivity for all the widgets */
1823:Generated_Source\PSoC4/CapSense_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_TOTAL_WIDGETS; wdgtIndex++)
1824:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1825:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CapSense_SENSE_METHOD_CSD_E ==
1826:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[wdgtIndex]))
1827:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1828:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
1829:Generated_Source\PSoC4/CapSense_Sensing.c ****                           CapSense_dsFlash.wdgtArray[wdgtIndex].ptr2WdgtRam;
1830:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1831:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsSetWidgetSenseClkSrc(wdgtIndex, ptrWdgt);
1832:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1833:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Calibrate CSD widget to the default calibration target */
1834:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneStatus |= CapSense_CSDCalibrateWidget(wdgtIndex, CapSense_CSD_AUTOTUNE_CAL_
1835:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1836:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_TST_WDGT_CRC_EN)
1837:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CapSense_DsUpdateWidgetCrc(wdgtIndex);
1838:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_ENABLE == CapSense_TST_WDGT_CRC_EN) */
1839:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1840:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1841:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1842:Generated_Source\PSoC4/CapSense_Sensing.c ****         return autoTuneStatus;
1843:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1844:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE)) */
1845:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1846:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1847:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_DISABLE == CapSense_CSDV2)
1848:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if ( ((CapSense_ENABLE == CapSense_CSX_EN) \
1849:Generated_Source\PSoC4/CapSense_Sensing.c ****         || (CapSense_ENABLE == CapSense_ISX_EN)) ||\
1850:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG))
1851:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*******************************************************************************
1852:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Function Name: CapSense_SsTrimIdacsSinking
1853:Generated_Source\PSoC4/CapSense_Sensing.c ****         ****************************************************************************//**
1854:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 34


1855:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \brief
1856:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  This function loads trim values from SFLASH rows to calibrate
1857:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  IDAC1 and IDAC2 for Sinking CSD Mode
1858:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
1859:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \details
1860:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  Function reads trim value from SFLASH and loads it into IDAC trim register.
1861:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  If Compensation IDAC is disabled the function loads trim values for IDAC1 only.
1862:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
1863:Generated_Source\PSoC4/CapSense_Sensing.c ****         *******************************************************************************/
1864:Generated_Source\PSoC4/CapSense_Sensing.c ****         static void CapSense_SsTrimIdacsSinking(void)
1865:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1866:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 trimValue;
1867:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1868:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Mod iDAC Sinking Mode */
1869:Generated_Source\PSoC4/CapSense_Sensing.c ****             trimValue = CY_GET_REG32(CapSense_TRIM2_PTR) & ~CapSense_IDAC_TRIM2_MOD_SNK_MASK;
1870:Generated_Source\PSoC4/CapSense_Sensing.c ****             trimValue |= ((uint32)CY_GET_REG8(CapSense_SFLASH_TRIM2_PTR) &
1871:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                       CapSense_SFLASH_TRIM_IDAC_MOD_MASK) ;
1872:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1873:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
1874:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Comp iDAC Sinking Mode */
1875:Generated_Source\PSoC4/CapSense_Sensing.c ****                 trimValue &= ~CapSense_IDAC_TRIM2_COMP_SNK_MASK;
1876:Generated_Source\PSoC4/CapSense_Sensing.c ****                 trimValue |= ((uint32)CY_GET_REG8(CapSense_SFLASH_TRIM2_PTR) &
1877:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                           CapSense_SFLASH_TRIM_IDAC_COMP_MASK);
1878:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) */
1879:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1880:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Update IDAC trim bits for gain control in current sink mode */
1881:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(CapSense_TRIM2_PTR, trimValue);
1882:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1883:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSX_EN) || \
1884:Generated_Source\PSoC4/CapSense_Sensing.c ****                (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG)) */
1885:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1886:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1887:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if ( ((CapSense_ENABLE == CapSense_CSX_EN) \
1888:Generated_Source\PSoC4/CapSense_Sensing.c ****         || (CapSense_ENABLE == CapSense_ISX_EN)) || \
1889:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_IDAC_SOURCING == CapSense_CSD_IDAC_CONFIG))
1890:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*******************************************************************************
1891:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Function Name: CapSense_SsTrimIdacsSourcing
1892:Generated_Source\PSoC4/CapSense_Sensing.c ****         ****************************************************************************//**
1893:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
1894:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \brief
1895:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  This function loads trim values from SFLASH rows to calibrate
1896:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  IDAC1 and IDAC2 for Sourcing CSD Mode
1897:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
1898:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \details
1899:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  Function reads trim value from SFLASH and loads it into IDAC trim register.
1900:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  If Compensation IDAC is disabled the function loads trim values for IDAC1 only.
1901:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
1902:Generated_Source\PSoC4/CapSense_Sensing.c ****         *******************************************************************************/
1903:Generated_Source\PSoC4/CapSense_Sensing.c ****         static void CapSense_SsTrimIdacsSourcing(void)
1904:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1905:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 trimValue;
1906:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1907:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Mod iDAC Sourcing Mode */
1908:Generated_Source\PSoC4/CapSense_Sensing.c ****             trimValue = CY_GET_REG32(CapSense_TRIM1_PTR) & ~CapSense_IDAC_TRIM1_MOD_SRC_MASK;
1909:Generated_Source\PSoC4/CapSense_Sensing.c ****             trimValue |= ((uint32)CY_GET_REG8(CapSense_SFLASH_TRIM1_PTR) &
1910:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                       CapSense_SFLASH_TRIM_IDAC_MOD_MASK);
1911:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 35


1912:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
1913:Generated_Source\PSoC4/CapSense_Sensing.c ****                  /* Comp iDAC Sourcing Mode */
1914:Generated_Source\PSoC4/CapSense_Sensing.c ****                 trimValue &= ~CapSense_IDAC_TRIM1_COMP_SRC_MASK;
1915:Generated_Source\PSoC4/CapSense_Sensing.c ****                 trimValue |= ((uint32)CY_GET_REG8(CapSense_SFLASH_TRIM1_PTR) &
1916:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                           CapSense_SFLASH_TRIM_IDAC_COMP_MASK);
1917:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) */
1918:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1919:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Update IDAC trim bits for gain control in current source mode */
1920:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(CapSense_TRIM1_PTR, trimValue);
1921:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1922:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSX_EN) || \
1923:Generated_Source\PSoC4/CapSense_Sensing.c ****                (CapSense_IDAC_SOURCING == CapSense_CSD_IDAC_CONFIG)) */
1924:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1925:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1926:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
1927:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsTrimIdacs
1928:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
1929:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1930:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
1931:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function loads trim values from SFLASH rows to calibrate
1932:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  IDAC1 and IDAC2 for CSD Mode
1933:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1934:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
1935:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  If CSX mode is enabled the function loads trim values for both sink and source
1936:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  mode. If CSX mode is disabled the function loads trim values for sink or
1937:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  source mode based on sink/source mode configuration.
1938:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  If Compensation IDAC is disabled the function loads trim values for IDAC1 only.
1939:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1940:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
1941:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsTrimIdacs(void)
1942:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1943:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN) || (CapSense_ENABLE == CapSense_ISX_EN)
1944:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsTrimIdacsSinking();
1945:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsTrimIdacsSourcing();
1946:Generated_Source\PSoC4/CapSense_Sensing.c ****         #elif (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG)
1947:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsTrimIdacsSinking();
1948:Generated_Source\PSoC4/CapSense_Sensing.c ****         #elif (CapSense_IDAC_SOURCING == CapSense_CSD_IDAC_CONFIG)
1949:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsTrimIdacsSourcing();
1950:Generated_Source\PSoC4/CapSense_Sensing.c ****         #else
1951:Generated_Source\PSoC4/CapSense_Sensing.c ****             #error "Not supported Mode, Component cannot work in this mode"
1952:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSX_EN) || (CapSense_ENABLE == CapSense_ISX_EN) */
1953:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1954:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif  /* (CapSense_DISABLE == CapSense_CSDV2) */
1955:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1956:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1957:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
1958:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
1959:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsChangeImoFreq
1960:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
1961:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1962:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
1963:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function changes the IMO frequency.
1964:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1965:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
1966:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The IMO frequency can have three offsets: 0%, -5% and +5%. The frequency
1967:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  trims are contained in the CapSense_immunity[value] array for each
1968:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  frequency channel.
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 36


1969:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1970:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param value The frequency channel ID.
1971:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1972:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
1973:Generated_Source\PSoC4/CapSense_Sensing.c ****     void CapSense_SsChangeImoFreq(uint32 value)
1974:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1975:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CY_SYS_CLK_IMO_TRIM1_PTR, CapSense_immunity[value]);
1976:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1977:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1978:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
1979:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsChangeClkFreq
1980:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
1981:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1982:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
1983:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function changes the sensor clock frequency by configuring
1984:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  the corresponding divider.
1985:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1986:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
1987:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function changes the sensor clock frequency by configuring
1988:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  the corresponding divider.
1989:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1990:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param chId
1991:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The frequency channel ID.
1992:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1993:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
1994:Generated_Source\PSoC4/CapSense_Sensing.c ****     void CapSense_SsChangeClkFreq(uint32 chId)
1995:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1996:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 snsClkDivider;
1997:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 freqOffset1 = 0u;
1998:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 freqOffset2 = 0u;
1999:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2000:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (0u != CapSense_TOTAL_CSD_WIDGETS)
2001:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSDV2)
2002:Generated_Source\PSoC4/CapSense_Sensing.c ****                 uint32 conversionsNum;
2003:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
2004:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2005:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if((CapSense_CLK_SOURCE_PRS8  == CapSense_CSD_SNS_CLK_SOURCE) ||\
2006:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_CLK_SOURCE_PRS12 == CapSense_CSD_SNS_CLK_SOURCE) ||\
2007:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE))
2008:Generated_Source\PSoC4/CapSense_Sensing.c ****                 uint32 snsClkSrc;
2009:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif
2010:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
2011:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2012:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((0u != CapSense_TOTAL_CSD_WIDGETS) || \
2013:Generated_Source\PSoC4/CapSense_Sensing.c ****              ((CapSense_DISABLE == CapSense_CSX_COMMON_TX_CLK_EN) && (0u != CapSense_TOTAL_CSX_WIDG
2014:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_FLASH_WD_STRUCT const *ptrFlashWdgt = &CapSense_dsFlash.wdgtArray[CapSense_wid
2015:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_RAM_WD_BASE_STRUCT const *ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)ptrFlashWdg
2016:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
2017:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2018:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch(CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[CapSense_widgetIndex]))
2019:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2020:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (0u != CapSense_TOTAL_CSD_WIDGETS)
2021:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSD_E:
2022:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Get sensor clock divider value */
2023:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN)
2024:Generated_Source\PSoC4/CapSense_Sensing.c ****                     snsClkDivider = CapSense_dsRam.snsCsdClk;
2025:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #else /* (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN) */
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 37


2026:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
2027:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Get SnsClck divider for rows or columns */
2028:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].numCols <= CapSense_se
2029:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2030:Generated_Source\PSoC4/CapSense_Sensing.c ****                             snsClkDivider = ptrWdgt->rowSnsClk;
2031:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2032:Generated_Source\PSoC4/CapSense_Sensing.c ****                         else
2033:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2034:Generated_Source\PSoC4/CapSense_Sensing.c ****                             snsClkDivider = ptrWdgt->snsClk;
2035:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2036:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #else
2037:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider = ptrWdgt->snsClk;
2038:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
2039:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN) */
2040:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2041:Generated_Source\PSoC4/CapSense_Sensing.c ****                 freqOffset1 = CapSense_CSD_MFS_DIVIDER_OFFSET_F1;
2042:Generated_Source\PSoC4/CapSense_Sensing.c ****                 freqOffset2 = CapSense_CSD_MFS_DIVIDER_OFFSET_F2;
2043:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2044:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if((CapSense_CLK_SOURCE_PRS8  == CapSense_CSD_SNS_CLK_SOURCE) ||\
2045:Generated_Source\PSoC4/CapSense_Sensing.c ****                     (CapSense_CLK_SOURCE_PRS12 == CapSense_CSD_SNS_CLK_SOURCE) ||\
2046:Generated_Source\PSoC4/CapSense_Sensing.c ****                     (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE))
2047:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* Get sense clk source */
2048:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
2049:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Get SnsClc Source for rows or columns */
2050:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].numCols <= CapSense_se
2051:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2052:Generated_Source\PSoC4/CapSense_Sensing.c ****                             snsClkSrc = (uint32)ptrWdgt->rowSnsClkSource;
2053:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2054:Generated_Source\PSoC4/CapSense_Sensing.c ****                         else
2055:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2056:Generated_Source\PSoC4/CapSense_Sensing.c ****                             snsClkSrc = (uint32)ptrWdgt->snsClkSource;
2057:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2058:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #else
2059:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkSrc = (uint32)ptrWdgt->snsClkSource;
2060:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
2061:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2062:Generated_Source\PSoC4/CapSense_Sensing.c ****                     switch (snsClkSrc)
2063:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2064:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_CLK_SOURCE_PRS8:
2065:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_CLK_SOURCE_PRS12:
2066:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Multiply by 2 for PRS8/PRS12 mode */
2067:Generated_Source\PSoC4/CapSense_Sensing.c ****                         freqOffset1 <<= 1u;
2068:Generated_Source\PSoC4/CapSense_Sensing.c ****                         freqOffset2 <<= 1u;
2069:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2070:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2071:Generated_Source\PSoC4/CapSense_Sensing.c ****                     default:
2072:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2073:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2074:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif
2075:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2076:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Change the divider based on the chId */
2077:Generated_Source\PSoC4/CapSense_Sensing.c ****                 switch (chId)
2078:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
2079:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_FREQ_CHANNEL_1:
2080:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2081:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider += freqOffset1;
2082:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 38


2083:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2084:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_FREQ_CHANNEL_2:
2085:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2086:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider += freqOffset2;
2087:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2088:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2089:Generated_Source\PSoC4/CapSense_Sensing.c ****                     default:
2090:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2091:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2092:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2093:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
2094:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2095:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_CSDV2)
2096:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* Set Number Of Conversions based on scanning resolution */
2097:Generated_Source\PSoC4/CapSense_Sensing.c ****                     conversionsNum = CapSense_SsCSDGetNumberOfConversions(snsClkDivider, (uint32)pt
2098:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CY_SET_REG32(CapSense_SEQ_NORM_CNT_PTR, (conversionsNum & CapSense_SEQ_NORM_CNT
2099:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
2100:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2101:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if((CapSense_CLK_SOURCE_PRS8  == CapSense_CSD_SNS_CLK_SOURCE) ||\
2102:Generated_Source\PSoC4/CapSense_Sensing.c ****                     (CapSense_CLK_SOURCE_PRS12 == CapSense_CSD_SNS_CLK_SOURCE) ||\
2103:Generated_Source\PSoC4/CapSense_Sensing.c ****                     (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE))
2104:Generated_Source\PSoC4/CapSense_Sensing.c ****                     switch (snsClkSrc)
2105:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2106:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_CLK_SOURCE_PRS8:
2107:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_CLK_SOURCE_PRS12:
2108:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Divide by 2 for PRS8/PRS12 mode */
2109:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider >>= 1;
2110:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (snsClkDivider == 0u)
2111:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2112:Generated_Source\PSoC4/CapSense_Sensing.c ****                             snsClkDivider = 1u;
2113:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2114:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2115:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2116:Generated_Source\PSoC4/CapSense_Sensing.c ****                     default:
2117:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2118:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2119:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif
2120:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2121:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Configure the new divider */
2122:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsSetSnsClockDivider(snsClkDivider);
2123:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2124:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
2125:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* #if (0u != CapSense_TOTAL_CSD_WIDGETS) */
2126:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2127:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (0u != CapSense_TOTAL_CSX_WIDGETS)
2128:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSX_E:
2129:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_CSX_COMMON_TX_CLK_EN)
2130:Generated_Source\PSoC4/CapSense_Sensing.c ****                     snsClkDivider = CapSense_dsRam.snsCsxClk;
2131:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #else /* (CapSense_ENABLE == CapSense_CSX_COMMON_TX_CLK_EN) */
2132:Generated_Source\PSoC4/CapSense_Sensing.c ****                     snsClkDivider = ptrWdgt->snsClk;
2133:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_ENABLE == CapSense_CSX_COMMON_TX_CLK_EN) */
2134:Generated_Source\PSoC4/CapSense_Sensing.c ****                 freqOffset1 = CapSense_CSX_MFS_DIVIDER_OFFSET_F1;
2135:Generated_Source\PSoC4/CapSense_Sensing.c ****                 freqOffset2 = CapSense_CSX_MFS_DIVIDER_OFFSET_F2;
2136:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2137:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Change the divider based on the chId */
2138:Generated_Source\PSoC4/CapSense_Sensing.c ****                 switch (chId)
2139:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 39


2140:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_FREQ_CHANNEL_1:
2141:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2142:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider += freqOffset1;
2143:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2144:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2145:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_FREQ_CHANNEL_2:
2146:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2147:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider += freqOffset2;
2148:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2149:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2150:Generated_Source\PSoC4/CapSense_Sensing.c ****                     default:
2151:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2152:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2153:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2154:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
2155:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2156:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Configure the new divider */
2157:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsSetSnsClockDivider(snsClkDivider);
2158:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2159:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
2160:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* #if (0u != CapSense_TOTAL_CSX_WIDGETS) */
2161:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2162:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
2163:Generated_Source\PSoC4/CapSense_Sensing.c ****             CYASSERT(0);
2164:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2165:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2166:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2167:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif  /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
2168:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2169:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2170:Generated_Source\PSoC4/CapSense_Sensing.c **** #if((CapSense_ENABLE == CapSense_CSD_EN) || \
2171:Generated_Source\PSoC4/CapSense_Sensing.c ****     ((CapSense_ENABLE == CapSense_CSX_EN) && \
2172:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSDV2)))
2173:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
2174:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsInitializeSourceSenseClk
2175:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
2176:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2177:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
2178:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets a source for Sense Clk for all CSD widgets.
2179:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2180:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
2181:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Updates snsClkSource and rowSnsClkSource with a source for the sense Clk.
2182:Generated_Source\PSoC4/CapSense_Sensing.c **** *  for all CSD widgets.
2183:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2184:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
2185:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsInitializeSourceSenseClk(void)
2186:Generated_Source\PSoC4/CapSense_Sensing.c **** {
2187:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 wdgtIndex;
2188:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_RAM_WD_BASE_STRUCT *ptrWdgt;
2189:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2190:Generated_Source\PSoC4/CapSense_Sensing.c ****     for (wdgtIndex = 0u; wdgtIndex < CapSense_TOTAL_WIDGETS; wdgtIndex++)
2191:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2192:Generated_Source\PSoC4/CapSense_Sensing.c ****         ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)CapSense_dsFlash.wdgtArray[wdgtIndex].ptr2WdgtRam;
2193:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2194:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch (CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[wdgtIndex]))
2195:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2196:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 40


2197:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSD_E:
2198:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsSetWidgetSenseClkSrc(wdgtIndex, ptrWdgt);
2199:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
2200:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
2201:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2))
2202:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSX_E:
2203:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsSetWidgetTxClkSrc(wdgtIndex, ptrWdgt);
2204:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
2205:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (((CapSense_ENABLE == CapSense_CSX_EN) || (CapSense_ENABLE == CapSense_ISX_EN)) &
2206:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
2207:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2208:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2209:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_TST_WDGT_CRC_EN)
2210:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_DsUpdateWidgetCrc(wdgtIndex);
2211:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_TST_WDGT_CRC_EN) */
2212:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2213:Generated_Source\PSoC4/CapSense_Sensing.c **** }
2214:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) || \
2215:Generated_Source\PSoC4/CapSense_Sensing.c ****            (((CapSense_ENABLE == CapSense_CSX_EN) || \
2216:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_ENABLE == CapSense_ISX_EN)) && \
2217:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_ENABLE == CapSense_CSDV2))) */
2218:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2219:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2220:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
2221:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2222:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsSetWidgetSenseClkSrc
2223:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2224:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2225:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2226:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Sets a source for the sense clock for a widget.
2227:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2228:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param wdgtIndex
2229:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Specifies the ID of the widget.
2230:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param ptrWdgt
2231:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The pointer to the RAM_WD_BASE_STRUCT structure.
2232:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2233:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2234:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Updates snsClkSource and rowSnsClkSource with a source for the sense Clk for a
2235:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  widget.
2236:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2237:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2238:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsSetWidgetSenseClkSrc(uint32 wdgtIndex, CapSense_RAM_WD_BASE_STRUCT * ptr
2239:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2240:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 lfsrSize;
2241:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 lfsrScale;
2242:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2243:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if(CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)
2244:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if(CapSense_ENABLE == CapSense_CSDV2)
2245:Generated_Source\PSoC4/CapSense_Sensing.c ****                 uint32 conversionsNum;
2246:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
2247:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 snsClkDivider;
2248:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE) */
2249:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2250:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if(CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)
2251:Generated_Source\PSoC4/CapSense_Sensing.c ****             snsClkDivider = CapSense_SsCSDGetColSnsClkDivider(wdgtIndex);
2252:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2253:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if(CapSense_ENABLE == CapSense_CSDV2)
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 41


2254:Generated_Source\PSoC4/CapSense_Sensing.c ****                 conversionsNum = CapSense_SsCSDGetNumberOfConversions(snsClkDivider, (uint32)ptrWdg
2255:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                                                              CapSen
2256:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrSize = CapSense_SsCalcLfsrSize(snsClkDivider, conversionsNum);
2257:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if (CapSense_CLK_SOURCE_DIRECT == lfsrSize)
2258:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
2259:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /*
2260:Generated_Source\PSoC4/CapSense_Sensing.c ****                     * Multiplying of the snsClkDivider by 2 is needed to pass the
2261:Generated_Source\PSoC4/CapSense_Sensing.c ****                     * average PRS frequency through the argument.
2262:Generated_Source\PSoC4/CapSense_Sensing.c ****                     */
2263:Generated_Source\PSoC4/CapSense_Sensing.c ****                     lfsrSize = CapSense_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrWdgt->res
2264:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
2265:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrScale = CapSense_SsCalcLfsrScale(snsClkDivider, lfsrSize);
2266:Generated_Source\PSoC4/CapSense_Sensing.c ****             #else
2267:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /*
2268:Generated_Source\PSoC4/CapSense_Sensing.c ****                 * Multiplying of the snsClkDivider by 2 is needed to pass the
2269:Generated_Source\PSoC4/CapSense_Sensing.c ****                 * average PRS frequency through the argument.
2270:Generated_Source\PSoC4/CapSense_Sensing.c ****                 */
2271:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrSize = CapSense_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrWdgt->resolut
2272:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrScale = 0u;
2273:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
2274:Generated_Source\PSoC4/CapSense_Sensing.c ****         #else
2275:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrSize = (uint8)CapSense_DEFAULT_MODULATION_MODE;
2276:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrScale = 0u;
2277:Generated_Source\PSoC4/CapSense_Sensing.c ****             (void)wdgtIndex; /* This parameter is unused in such configurations */
2278:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE) */
2279:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2280:Generated_Source\PSoC4/CapSense_Sensing.c ****         ptrWdgt->snsClkSource = lfsrSize | (uint8)(lfsrScale << CapSense_CLK_SOURCE_LFSR_SCALE_OFFS
2281:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2282:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
2283:Generated_Source\PSoC4/CapSense_Sensing.c ****             if ((CapSense_WD_TOUCHPAD_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdgtArray[wdgtIn
2284:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_WD_MATRIX_BUTTON_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdgtArray[w
2285:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
2286:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if(CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)
2287:Generated_Source\PSoC4/CapSense_Sensing.c ****                     snsClkDivider = CapSense_SsCSDGetRowSnsClkDivider(wdgtIndex);
2288:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2289:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if(CapSense_ENABLE == CapSense_CSDV2)
2290:Generated_Source\PSoC4/CapSense_Sensing.c ****                         lfsrSize = CapSense_SsCalcLfsrSize(snsClkDivider, conversionsNum);
2291:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (CapSense_CLK_SOURCE_DIRECT == lfsrSize)
2292:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2293:Generated_Source\PSoC4/CapSense_Sensing.c ****                             /*
2294:Generated_Source\PSoC4/CapSense_Sensing.c ****                             * Multiplying of the snsClkDivider by 2 is needed to pass the
2295:Generated_Source\PSoC4/CapSense_Sensing.c ****                             * average PRS frequency through the argument.
2296:Generated_Source\PSoC4/CapSense_Sensing.c ****                             */
2297:Generated_Source\PSoC4/CapSense_Sensing.c ****                             lfsrSize = CapSense_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrW
2298:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2299:Generated_Source\PSoC4/CapSense_Sensing.c ****                         lfsrScale = CapSense_SsCalcLfsrScale(snsClkDivider, lfsrSize);
2300:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #else
2301:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /*
2302:Generated_Source\PSoC4/CapSense_Sensing.c ****                         * Multiplying of the snsClkDivider by 2 is needed to pass the
2303:Generated_Source\PSoC4/CapSense_Sensing.c ****                         * average PRS frequency through the argument.
2304:Generated_Source\PSoC4/CapSense_Sensing.c ****                         */
2305:Generated_Source\PSoC4/CapSense_Sensing.c ****                         lfsrSize = CapSense_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrWdgt-
2306:Generated_Source\PSoC4/CapSense_Sensing.c ****                         lfsrScale = 0u;
2307:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
2308:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #else
2309:Generated_Source\PSoC4/CapSense_Sensing.c ****                     lfsrSize = (uint8)CapSense_DEFAULT_MODULATION_MODE;
2310:Generated_Source\PSoC4/CapSense_Sensing.c ****                     lfsrScale = 0u;
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 42


2311:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE) */
2312:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ptrWdgt->rowSnsClkSource = lfsrSize | (uint8)(lfsrScale << CapSense_CLK_SOURCE_LFSR
2313:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
2314:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
2315:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2316:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
2317:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2318:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2319:Generated_Source\PSoC4/CapSense_Sensing.c **** #if ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2))
2320:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2321:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsSetWidgetTxClkSrc
2322:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2323:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2324:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2325:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Sets a source for the Tx clock for a widget.
2326:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2327:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param wdgtIndex
2328:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Specifies the ID of the widget.
2329:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param ptrWdgt
2330:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The pointer to the RAM_WD_BASE_STRUCT structure.
2331:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2332:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2333:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Updates snsClkSource with a source for Tx Clk for a widget.
2334:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2335:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2336:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsSetWidgetTxClkSrc(uint32 wdgtIndex, CapSense_RAM_WD_BASE_STRUCT * ptrWdg
2337:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2338:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 lfsrSize;
2339:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 lfsrScale;
2340:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2341:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE) && \
2342:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_DISABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES))
2343:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 conversionsNum;
2344:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 snsClkDivider;
2345:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
2346:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2347:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if(CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE)
2348:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_DISABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
2349:Generated_Source\PSoC4/CapSense_Sensing.c ****                 conversionsNum = (uint32)ptrWdgt->resolution;
2350:Generated_Source\PSoC4/CapSense_Sensing.c ****                 snsClkDivider = CapSense_SsCSXGetTxClkDivider(wdgtIndex);
2351:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrSize = CapSense_SsCalcLfsrSize(snsClkDivider, conversionsNum);
2352:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrScale = CapSense_SsCalcLfsrScale(snsClkDivider, lfsrSize);
2353:Generated_Source\PSoC4/CapSense_Sensing.c ****             #else
2354:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrSize = (uint8)CapSense_CLK_SOURCE_DIRECT;
2355:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrScale = 0u;
2356:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Unused function argument */
2357:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (void)wdgtIndex;
2358:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
2359:Generated_Source\PSoC4/CapSense_Sensing.c ****         #else
2360:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrSize = (uint8)CapSense_CSX_TX_CLK_SOURCE;
2361:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrScale = 0u;
2362:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Unused function argument */
2363:Generated_Source\PSoC4/CapSense_Sensing.c ****             (void)wdgtIndex;
2364:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE) */
2365:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2366:Generated_Source\PSoC4/CapSense_Sensing.c ****         ptrWdgt->snsClkSource = lfsrSize | (uint8)(lfsrScale << CapSense_CLK_SOURCE_LFSR_SCALE_OFFS
2367:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 43


2368:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2)) */
2369:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2370:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2371:Generated_Source\PSoC4/CapSense_Sensing.c **** #if(((CapSense_ENABLE == CapSense_CSX_EN) && \
2372:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_DISABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) && \
2373:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSDV2) && \
2374:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE)) ||\
2375:Generated_Source\PSoC4/CapSense_Sensing.c ****     ((CapSense_ENABLE == CapSense_CSD_EN) && \
2376:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSDV2) && \
2377:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)))
2378:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
2379:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsCalcLfsrSize
2380:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
2381:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2382:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
2383:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This is an internal function that finds a SSC polynomial size in the Auto mode.
2384:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2385:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
2386:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The SSC polynomial size in the auto mode is found based on the following
2387:Generated_Source\PSoC4/CapSense_Sensing.c **** *  requirements:
2388:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - an LFSR value should be selected so that the max clock dither is limited with +/-10%.
2389:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - at least one full spread spectrum polynomial should pass during the scan time.
2390:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - the value of the number of conversions should be an integer multiple of the
2391:Generated_Source\PSoC4/CapSense_Sensing.c **** *    repeat period of the programmed LFSR_SIZE.
2392:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2393:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param
2394:Generated_Source\PSoC4/CapSense_Sensing.c **** *  snsClkDivider The divider value for the sense clock.
2395:Generated_Source\PSoC4/CapSense_Sensing.c **** *  resolution The widget resolution.
2396:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2397:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return lfsrSize The LFSRSIZE value for the SENSE_PERIOD register.
2398:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2399:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
2400:Generated_Source\PSoC4/CapSense_Sensing.c **** static uint8 CapSense_SsCalcLfsrSize(uint32 snsClkDivider, uint32 conversionsNum)
2401:Generated_Source\PSoC4/CapSense_Sensing.c **** {
  28              		.loc 1 2401 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 70B5     		push	{r4, r5, r6, lr}
  34              		.cfi_def_cfa_offset 16
  35              		.cfi_offset 4, -16
  36              		.cfi_offset 5, -12
  37              		.cfi_offset 6, -8
  38              		.cfi_offset 14, -4
  39 0002 0400     		movs	r4, r0
  40 0004 0D00     		movs	r5, r1
  41              	.LVL1:
2402:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8 lfsrSize = 0u;
2403:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2404:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Find LFSR value */
2405:Generated_Source\PSoC4/CapSense_Sensing.c ****     if((CapSense_SNSCLK_SSC4_THRESHOLD <= snsClkDivider) &&
  42              		.loc 1 2405 0
  43 0006 9F28     		cmp	r0, #159
  44 0008 08D9     		bls	.L2
  45              		.loc 1 2405 0 is_stmt 0 discriminator 1
  46 000a 1B4B     		ldr	r3, .L12
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 44


  47 000c 9942     		cmp	r1, r3
  48 000e 05D9     		bls	.L2
2406:Generated_Source\PSoC4/CapSense_Sensing.c ****        (CapSense_SNSCLK_SSC4_PERIOD <= conversionsNum) &&
2407:Generated_Source\PSoC4/CapSense_Sensing.c ****        (0uL == (conversionsNum % CapSense_SNSCLK_SSC4_PERIOD)))
  49              		.loc 1 2407 0 is_stmt 1
  50 0010 1A49     		ldr	r1, .L12+4
  51              	.LVL2:
  52 0012 2800     		movs	r0, r5
  53              	.LVL3:
  54 0014 FFF7FEFF 		bl	__aeabi_uidivmod
  55              	.LVL4:
2406:Generated_Source\PSoC4/CapSense_Sensing.c ****        (CapSense_SNSCLK_SSC4_PERIOD <= conversionsNum) &&
  56              		.loc 1 2406 0
  57 0018 0029     		cmp	r1, #0
  58 001a 21D0     		beq	.L6
  59              	.L2:
2408:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2409:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrSize = CapSense_CLK_SOURCE_SSC4;
2410:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2411:Generated_Source\PSoC4/CapSense_Sensing.c ****     else if((CapSense_SNSCLK_SSC3_THRESHOLD <= snsClkDivider) &&
  60              		.loc 1 2411 0
  61 001c 9F2C     		cmp	r4, #159
  62 001e 09D9     		bls	.L4
  63              		.loc 1 2411 0 is_stmt 0 discriminator 1
  64 0020 FF23     		movs	r3, #255
  65 0022 5B00     		lsls	r3, r3, #1
  66 0024 9D42     		cmp	r5, r3
  67 0026 05D9     		bls	.L4
2412:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_SNSCLK_SSC3_PERIOD <= conversionsNum) &&
2413:Generated_Source\PSoC4/CapSense_Sensing.c ****             (0uL == (conversionsNum % CapSense_SNSCLK_SSC3_PERIOD)))
  68              		.loc 1 2413 0 is_stmt 1
  69 0028 1549     		ldr	r1, .L12+8
  70 002a 2800     		movs	r0, r5
  71 002c FFF7FEFF 		bl	__aeabi_uidivmod
  72              	.LVL5:
2412:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_SNSCLK_SSC3_PERIOD <= conversionsNum) &&
  73              		.loc 1 2412 0
  74 0030 0029     		cmp	r1, #0
  75 0032 17D0     		beq	.L7
  76              	.L4:
2414:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2415:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrSize = CapSense_CLK_SOURCE_SSC3;
2416:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2417:Generated_Source\PSoC4/CapSense_Sensing.c ****     else if((CapSense_SNSCLK_SSC2_THRESHOLD <= snsClkDivider) &&
  77              		.loc 1 2417 0
  78 0034 9F2C     		cmp	r4, #159
  79 0036 07D9     		bls	.L5
  80              		.loc 1 2417 0 is_stmt 0 discriminator 1
  81 0038 7E2D     		cmp	r5, #126
  82 003a 05D9     		bls	.L5
2418:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_SNSCLK_SSC2_PERIOD <= conversionsNum) &&
2419:Generated_Source\PSoC4/CapSense_Sensing.c ****             (0uL == (conversionsNum % CapSense_SNSCLK_SSC2_PERIOD)))
  83              		.loc 1 2419 0 is_stmt 1
  84 003c 7F21     		movs	r1, #127
  85 003e 2800     		movs	r0, r5
  86 0040 FFF7FEFF 		bl	__aeabi_uidivmod
  87              	.LVL6:
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 45


2418:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_SNSCLK_SSC2_PERIOD <= conversionsNum) &&
  88              		.loc 1 2418 0
  89 0044 0029     		cmp	r1, #0
  90 0046 0FD0     		beq	.L8
  91              	.L5:
2420:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2421:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrSize = CapSense_CLK_SOURCE_SSC2;
2422:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2423:Generated_Source\PSoC4/CapSense_Sensing.c ****     else if((CapSense_SNSCLK_SSC1_THRESHOLD <= snsClkDivider) &&
  92              		.loc 1 2423 0
  93 0048 9F2C     		cmp	r4, #159
  94 004a 0FD9     		bls	.L9
  95              		.loc 1 2423 0 is_stmt 0 discriminator 1
  96 004c 3E2D     		cmp	r5, #62
  97 004e 0FD9     		bls	.L10
2424:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_SNSCLK_SSC1_PERIOD <= conversionsNum) &&
2425:Generated_Source\PSoC4/CapSense_Sensing.c ****             (0uL == (conversionsNum % CapSense_SNSCLK_SSC1_PERIOD)))
  98              		.loc 1 2425 0 is_stmt 1
  99 0050 3F21     		movs	r1, #63
 100 0052 2800     		movs	r0, r5
 101 0054 FFF7FEFF 		bl	__aeabi_uidivmod
 102              	.LVL7:
2424:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_SNSCLK_SSC1_PERIOD <= conversionsNum) &&
 103              		.loc 1 2424 0
 104 0058 0029     		cmp	r1, #0
 105 005a 0BD0     		beq	.L11
2426:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2427:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrSize = CapSense_CLK_SOURCE_SSC1;
2428:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2429:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
2430:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2431:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrSize = (uint8)CapSense_CLK_SOURCE_DIRECT;
 106              		.loc 1 2431 0
 107 005c 0020     		movs	r0, #0
 108 005e 0AE0     		b	.L3
 109              	.L6:
2409:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 110              		.loc 1 2409 0
 111 0060 0420     		movs	r0, #4
 112 0062 08E0     		b	.L3
 113              	.L7:
2415:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 114              		.loc 1 2415 0
 115 0064 0320     		movs	r0, #3
 116 0066 06E0     		b	.L3
 117              	.L8:
2421:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 118              		.loc 1 2421 0
 119 0068 0220     		movs	r0, #2
 120 006a 04E0     		b	.L3
 121              	.L9:
 122              		.loc 1 2431 0
 123 006c 0020     		movs	r0, #0
 124 006e 02E0     		b	.L3
 125              	.L10:
 126 0070 0020     		movs	r0, #0
 127 0072 00E0     		b	.L3
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 46


 128              	.L11:
2427:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 129              		.loc 1 2427 0
 130 0074 0120     		movs	r0, #1
 131              	.L3:
 132              	.LVL8:
2432:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2433:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2434:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (lfsrSize);
2435:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 133              		.loc 1 2435 0
 134              		@ sp needed
 135              	.LVL9:
 136              	.LVL10:
 137 0076 70BD     		pop	{r4, r5, r6, pc}
 138              	.L13:
 139              		.align	2
 140              	.L12:
 141 0078 FE030000 		.word	1022
 142 007c FF030000 		.word	1023
 143 0080 FF010000 		.word	511
 144              		.cfi_endproc
 145              	.LFE20:
 146              		.size	CapSense_SsCalcLfsrSize, .-CapSense_SsCalcLfsrSize
 147              		.global	__aeabi_uidiv
 148              		.section	.text.CapSense_SsCalcLfsrScale,"ax",%progbits
 149              		.align	2
 150              		.code	16
 151              		.thumb_func
 152              		.type	CapSense_SsCalcLfsrScale, %function
 153              	CapSense_SsCalcLfsrScale:
 154              	.LFB21:
2436:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2437:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2438:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
2439:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsCalcLfsrScale
2440:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
2441:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2442:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
2443:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This is an internal function that calculates the LFSR scale value.
2444:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2445:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
2446:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The LFSR scale value is used to increase the clock dither if the desired dither
2447:Generated_Source\PSoC4/CapSense_Sensing.c **** *  is wider than can be achieved with the current Sense Clock Divider and current LFSR
2448:Generated_Source\PSoC4/CapSense_Sensing.c **** *  period.
2449:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2450:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This returns the LFSR scale value needed to keep the clock dither in
2451:Generated_Source\PSoC4/CapSense_Sensing.c **** *  range +/-10%.
2452:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2453:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param
2454:Generated_Source\PSoC4/CapSense_Sensing.c **** *  snsClkDivider The divider value for the sense clock.
2455:Generated_Source\PSoC4/CapSense_Sensing.c **** *  lfsrSize The period of the LFSR sequence.
2456:Generated_Source\PSoC4/CapSense_Sensing.c **** *          For devices with CapSense_CSDV2_REF9P6UA_EN = TRUE, the
2457:Generated_Source\PSoC4/CapSense_Sensing.c **** *          mode parameters can take the following values:
2458:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_DIRECT The spreadspectrum is not used.
2459:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC1   The length of LFSR sequence is 63 cycles.
2460:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC2   The length of LFSR sequence is 127 cycles.
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 47


2461:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC3   The length of LFSR sequence is 255 cycles.
2462:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC4   The length of LFSR sequence is 511 cycles.
2463:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2464:Generated_Source\PSoC4/CapSense_Sensing.c **** *          For devices with CapSense_CSDV2_REF9P6UA_EN = TRUE, the
2465:Generated_Source\PSoC4/CapSense_Sensing.c **** *          mode parameters can take the following values:
2466:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_DIRECT The spreadspectrum is not used.
2467:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC1   The length of LFSR sequence is 3 cycles.
2468:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC2   The length of LFSR sequence is 7 cycles.
2469:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC3   The length of LFSR sequence is 15 cycles.
2470:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC4   The length of LFSR sequence is 31 cycles.
2471:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2472:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
2473:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the LFSR scale value needed to keep the clock dither in range +/-10%.
2474:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2475:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
2476:Generated_Source\PSoC4/CapSense_Sensing.c **** static uint8 CapSense_SsCalcLfsrScale(uint32 snsClkDivider, uint8 lfsrSize)
2477:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 155              		.loc 1 2477 0
 156              		.cfi_startproc
 157              		@ args = 0, pretend = 0, frame = 0
 158              		@ frame_needed = 0, uses_anonymous_args = 0
 159              	.LVL11:
 160 0000 10B5     		push	{r4, lr}
 161              		.cfi_def_cfa_offset 8
 162              		.cfi_offset 4, -8
 163              		.cfi_offset 14, -4
2478:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 lfsrScale;
2479:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 lfsrRange;
2480:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 lfsrDither;
2481:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2482:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Initialize the lfsrSize variable with the LFSR Range for given Lfsr Size. */
2483:Generated_Source\PSoC4/CapSense_Sensing.c ****     switch(lfsrSize)
 164              		.loc 1 2483 0
 165 0002 4B1E     		subs	r3, r1, #1
 166 0004 DBB2     		uxtb	r3, r3
 167 0006 032B     		cmp	r3, #3
 168 0008 01D8     		bhi	.L20
2484:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2485:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_CLK_SOURCE_SSC1:
2486:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2487:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrRange = CapSense_SNSCLK_SSC1_RANGE;
 169              		.loc 1 2487 0
 170 000a 1023     		movs	r3, #16
 171 000c 00E0     		b	.L15
 172              	.L20:
2488:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2489:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2490:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_CLK_SOURCE_SSC2:
2491:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2492:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrRange = CapSense_SNSCLK_SSC2_RANGE;
2493:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2494:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2495:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_CLK_SOURCE_SSC3:
2496:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2497:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrRange = CapSense_SNSCLK_SSC3_RANGE;
2498:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2499:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 48


2500:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_CLK_SOURCE_SSC4:
2501:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2502:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrRange = CapSense_SNSCLK_SSC4_RANGE;
2503:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2504:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2505:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
2506:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2507:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrRange = 0u;
 173              		.loc 1 2507 0
 174 000e 0023     		movs	r3, #0
 175              	.L15:
 176              	.LVL12:
2508:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2509:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2510:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2511:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2512:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Calculate the LFSR Scale value that is required to keep the Clock dither
2513:Generated_Source\PSoC4/CapSense_Sensing.c ****      * as close as possible to the +/-10% limit of the used frequency.
2514:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
2515:Generated_Source\PSoC4/CapSense_Sensing.c ****     if((lfsrSize != CapSense_CLK_SOURCE_DIRECT) && (0u != lfsrRange))
 177              		.loc 1 2515 0
 178 0010 0029     		cmp	r1, #0
 179 0012 11D0     		beq	.L21
 180              		.loc 1 2515 0 is_stmt 0 discriminator 1
 181 0014 002B     		cmp	r3, #0
 182 0016 11D0     		beq	.L22
2516:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2517:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Calculate the LFSR Dither in percents. */
2518:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrDither  = ((lfsrRange * 100uL) / snsClkDivider);
 183              		.loc 1 2518 0 is_stmt 1
 184 0018 6422     		movs	r2, #100
 185 001a 5343     		muls	r3, r2
 186              	.LVL13:
 187 001c 0100     		movs	r1, r0
 188              	.LVL14:
 189 001e 1800     		movs	r0, r3
 190              	.LVL15:
 191 0020 FFF7FEFF 		bl	__aeabi_uidiv
 192              	.LVL16:
2519:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrScale = 0uL;
 193              		.loc 1 2519 0
 194 0024 0023     		movs	r3, #0
2520:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2521:Generated_Source\PSoC4/CapSense_Sensing.c ****         while(lfsrDither < CapSense_LFSR_DITHER_PERCENTAGE)
 195              		.loc 1 2521 0
 196 0026 01E0     		b	.L18
 197              	.LVL17:
 198              	.L19:
2522:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2523:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrScale++;
 199              		.loc 1 2523 0
 200 0028 0133     		adds	r3, r3, #1
 201              	.LVL18:
2524:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrDither <<=1uL;
 202              		.loc 1 2524 0
 203 002a 4000     		lsls	r0, r0, #1
 204              	.LVL19:
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 49


 205              	.L18:
2521:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 206              		.loc 1 2521 0
 207 002c 0928     		cmp	r0, #9
 208 002e FBD9     		bls	.L19
2525:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2526:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2527:Generated_Source\PSoC4/CapSense_Sensing.c ****         if(lfsrDither > CapSense_LFSR_DITHER_PERCENTAGE)
 209              		.loc 1 2527 0
 210 0030 0A28     		cmp	r0, #10
 211 0032 04D9     		bls	.L17
2528:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2529:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrScale--;
 212              		.loc 1 2529 0
 213 0034 013B     		subs	r3, r3, #1
 214              	.LVL20:
 215 0036 02E0     		b	.L17
 216              	.LVL21:
 217              	.L21:
2530:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2531:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2532:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
2533:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2534:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrScale = 0uL;
 218              		.loc 1 2534 0
 219 0038 0023     		movs	r3, #0
 220              	.LVL22:
 221 003a 00E0     		b	.L17
 222              	.LVL23:
 223              	.L22:
 224 003c 0023     		movs	r3, #0
 225              	.LVL24:
 226              	.L17:
2535:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2536:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2537:Generated_Source\PSoC4/CapSense_Sensing.c ****     return ((uint8)lfsrScale);
 227              		.loc 1 2537 0
 228 003e D8B2     		uxtb	r0, r3
2538:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 229              		.loc 1 2538 0
 230              		@ sp needed
 231 0040 10BD     		pop	{r4, pc}
 232              		.cfi_endproc
 233              	.LFE21:
 234              		.size	CapSense_SsCalcLfsrScale, .-CapSense_SsCalcLfsrScale
 235 0042 C046     		.section	.text.CapSense_SsCSDDisableMode,"ax",%progbits
 236              		.align	2
 237              		.code	16
 238              		.thumb_func
 239              		.type	CapSense_SsCSDDisableMode, %function
 240              	CapSense_SsCSDDisableMode:
 241              	.LFB7:
 763:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 newRegValue;
 242              		.loc 1 763 0
 243              		.cfi_startproc
 244              		@ args = 0, pretend = 0, frame = 0
 245              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 50


 246 0000 10B5     		push	{r4, lr}
 247              		.cfi_def_cfa_offset 8
 248              		.cfi_offset 4, -8
 249              		.cfi_offset 14, -4
 767:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_CMOD_HSIOM_MASK);
 250              		.loc 1 767 0
 251 0002 064A     		ldr	r2, .L24
 252 0004 1368     		ldr	r3, [r2]
 253              	.LVL25:
 768:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_CMOD_HSIOM_PTR, newRegValue);
 254              		.loc 1 768 0
 255 0006 F021     		movs	r1, #240
 256 0008 8B43     		bics	r3, r1
 257              	.LVL26:
 769:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 258              		.loc 1 769 0
 259 000a 1360     		str	r3, [r2]
 775:Generated_Source\PSoC4/CapSense_Sensing.c ****             newRegValue &= (uint32)(~CapSense_SW_REFGEN_SEL_SW_IAIB_MASK);
 260              		.loc 1 775 0
 261 000c 044A     		ldr	r2, .L24+4
 262 000e 1368     		ldr	r3, [r2]
 263              	.LVL27:
 776:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(CapSense_SW_REFGEN_SEL_PTR, newRegValue);
 264              		.loc 1 776 0
 265 0010 EF39     		subs	r1, r1, #239
 266 0012 8B43     		bics	r3, r1
 267              	.LVL28:
 777:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* ((CapSense_ENABLE == CapSense_CSDV2) && \
 268              		.loc 1 777 0
 269 0014 1360     		str	r3, [r2]
 783:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 270              		.loc 1 783 0
 271 0016 FFF7FEFF 		bl	CapSense_SsCSDElectrodeCheck
 272              	.LVL29:
 799:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 273              		.loc 1 799 0
 274              		@ sp needed
 275 001a 10BD     		pop	{r4, pc}
 276              	.L25:
 277              		.align	2
 278              	.L24:
 279 001c 00040240 		.word	1073873920
 280 0020 A8020B40 		.word	1074463400
 281              		.cfi_endproc
 282              	.LFE7:
 283              		.size	CapSense_SsCSDDisableMode, .-CapSense_SsCSDDisableMode
 284              		.section	.text.CapSense_IsBusy,"ax",%progbits
 285              		.align	2
 286              		.global	CapSense_IsBusy
 287              		.code	16
 288              		.thumb_func
 289              		.type	CapSense_IsBusy, %function
 290              	CapSense_IsBusy:
 291              	.LFB1:
 234:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (CapSense_dsRam.status & CapSense_SW_STS_BUSY);
 292              		.loc 1 234 0
 293              		.cfi_startproc
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 51


 294              		@ args = 0, pretend = 0, frame = 0
 295              		@ frame_needed = 0, uses_anonymous_args = 0
 296              		@ link register save eliminated.
 235:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 297              		.loc 1 235 0
 298 0000 024B     		ldr	r3, .L27
 299 0002 DB68     		ldr	r3, [r3, #12]
 300 0004 8020     		movs	r0, #128
 301 0006 1840     		ands	r0, r3
 236:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 302              		.loc 1 236 0
 303              		@ sp needed
 304 0008 7047     		bx	lr
 305              	.L28:
 306 000a C046     		.align	2
 307              	.L27:
 308 000c 00000000 		.word	CapSense_dsRam
 309              		.cfi_endproc
 310              	.LFE1:
 311              		.size	CapSense_IsBusy, .-CapSense_IsBusy
 312              		.section	.text.CapSense_SetupWidget,"ax",%progbits
 313              		.align	2
 314              		.global	CapSense_SetupWidget
 315              		.code	16
 316              		.thumb_func
 317              		.type	CapSense_SetupWidget, %function
 318              	CapSense_SetupWidget:
 319              	.LFB2:
 286:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus widgetStatus;
 320              		.loc 1 286 0
 321              		.cfi_startproc
 322              		@ args = 0, pretend = 0, frame = 0
 323              		@ frame_needed = 0, uses_anonymous_args = 0
 324              	.LVL30:
 325 0000 10B5     		push	{r4, lr}
 326              		.cfi_def_cfa_offset 8
 327              		.cfi_offset 4, -8
 328              		.cfi_offset 14, -4
 289:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 329              		.loc 1 289 0
 330 0002 0E4B     		ldr	r3, .L35
 331 0004 DB68     		ldr	r3, [r3, #12]
 332 0006 DB03     		lsls	r3, r3, #15
 333 0008 0DD4     		bmi	.L32
 299:Generated_Source\PSoC4/CapSense_Sensing.c ****         (0uL != CapSense_GET_WIDGET_EN_STATUS(widgetId)))
 334              		.loc 1 299 0
 335 000a 0028     		cmp	r0, #0
 336 000c 0DD1     		bne	.L33
 300:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 337              		.loc 1 300 0 discriminator 1
 338 000e 4309     		lsrs	r3, r0, #5
 339 0010 0433     		adds	r3, r3, #4
 340 0012 9B00     		lsls	r3, r3, #2
 341 0014 094A     		ldr	r2, .L35
 342 0016 9B58     		ldr	r3, [r3, r2]
 343 0018 1F22     		movs	r2, #31
 344 001a 0240     		ands	r2, r0
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 52


 345 001c D340     		lsrs	r3, r3, r2
 299:Generated_Source\PSoC4/CapSense_Sensing.c ****         (0uL != CapSense_GET_WIDGET_EN_STATUS(widgetId)))
 346              		.loc 1 299 0 discriminator 1
 347 001e DB07     		lsls	r3, r3, #31
 348 0020 05D4     		bmi	.L34
 307:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 349              		.loc 1 307 0
 350 0022 0124     		movs	r4, #1
 351 0024 04E0     		b	.L30
 352              	.L32:
 292:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 353              		.loc 1 292 0
 354 0026 1124     		movs	r4, #17
 355 0028 02E0     		b	.L30
 356              	.L33:
 307:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 357              		.loc 1 307 0
 358 002a 0124     		movs	r4, #1
 359 002c 00E0     		b	.L30
 360              	.L34:
 303:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 361              		.loc 1 303 0
 362 002e 0024     		movs	r4, #0
 363              	.L30:
 364              	.LVL31:
 314:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 365              		.loc 1 314 0
 366 0030 002C     		cmp	r4, #0
 367 0032 01D1     		bne	.L31
 327:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 368              		.loc 1 327 0
 369 0034 FFF7FEFF 		bl	CapSense_CSDSetupWidget
 370              	.LVL32:
 371              	.L31:
 343:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 372              		.loc 1 343 0
 373 0038 2000     		movs	r0, r4
 374              		@ sp needed
 375              	.LVL33:
 376 003a 10BD     		pop	{r4, pc}
 377              	.L36:
 378              		.align	2
 379              	.L35:
 380 003c 00000000 		.word	CapSense_dsRam
 381              		.cfi_endproc
 382              	.LFE2:
 383              		.size	CapSense_SetupWidget, .-CapSense_SetupWidget
 384              		.section	.text.CapSense_Scan,"ax",%progbits
 385              		.align	2
 386              		.global	CapSense_Scan
 387              		.code	16
 388              		.thumb_func
 389              		.type	CapSense_Scan, %function
 390              	CapSense_Scan:
 391              	.LFB3:
 369:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus scanStatus = CYRET_SUCCESS;
 392              		.loc 1 369 0
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 53


 393              		.cfi_startproc
 394              		@ args = 0, pretend = 0, frame = 0
 395              		@ frame_needed = 0, uses_anonymous_args = 0
 396 0000 10B5     		push	{r4, lr}
 397              		.cfi_def_cfa_offset 8
 398              		.cfi_offset 4, -8
 399              		.cfi_offset 14, -4
 400              	.LVL34:
 372:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 401              		.loc 1 372 0
 402 0002 084B     		ldr	r3, .L43
 403 0004 DB68     		ldr	r3, [r3, #12]
 404 0006 DB03     		lsls	r3, r3, #15
 405 0008 07D4     		bmi	.L40
 379:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 406              		.loc 1 379 0
 407 000a 074B     		ldr	r3, .L43+4
 408 000c 1B78     		ldrb	r3, [r3]
 409 000e 012B     		cmp	r3, #1
 410 0010 05D1     		bne	.L42
 388:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 411              		.loc 1 388 0
 412 0012 FFF7FEFF 		bl	CapSense_CSDScan
 413              	.LVL35:
 370:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 414              		.loc 1 370 0
 415 0016 0020     		movs	r0, #0
 389:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 416              		.loc 1 389 0
 417 0018 03E0     		b	.L38
 418              	.L40:
 375:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 419              		.loc 1 375 0
 420 001a 1120     		movs	r0, #17
 421 001c 01E0     		b	.L38
 422              	.L42:
 397:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 423              		.loc 1 397 0
 424 001e 0120     		movs	r0, #1
 425 0020 4042     		rsbs	r0, r0, #0
 426              	.L38:
 427              	.LVL36:
 402:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 428              		.loc 1 402 0
 429              		@ sp needed
 430 0022 10BD     		pop	{r4, pc}
 431              	.L44:
 432              		.align	2
 433              	.L43:
 434 0024 00000000 		.word	CapSense_dsRam
 435 0028 00000000 		.word	.LANCHOR0
 436              		.cfi_endproc
 437              	.LFE3:
 438              		.size	CapSense_Scan, .-CapSense_Scan
 439              		.section	.text.CapSense_ScanAllWidgets,"ax",%progbits
 440              		.align	2
 441              		.global	CapSense_ScanAllWidgets
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 54


 442              		.code	16
 443              		.thumb_func
 444              		.type	CapSense_ScanAllWidgets, %function
 445              	CapSense_ScanAllWidgets:
 446              	.LFB4:
 431:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus scanStatus = CYRET_UNKNOWN;
 447              		.loc 1 431 0
 448              		.cfi_startproc
 449              		@ args = 0, pretend = 0, frame = 0
 450              		@ frame_needed = 0, uses_anonymous_args = 0
 451 0000 10B5     		push	{r4, lr}
 452              		.cfi_def_cfa_offset 8
 453              		.cfi_offset 4, -8
 454              		.cfi_offset 14, -4
 455              	.LVL37:
 436:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 456              		.loc 1 436 0
 457 0002 0C4B     		ldr	r3, .L51
 458 0004 DB68     		ldr	r3, [r3, #12]
 459 0006 1B06     		lsls	r3, r3, #24
 460 0008 12D4     		bmi	.L50
 461 000a 0024     		movs	r4, #0
 462 000c 0120     		movs	r0, #1
 463 000e 4042     		rsbs	r0, r0, #0
 464 0010 0BE0     		b	.L47
 465              	.LVL38:
 466              	.L49:
 452:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 467              		.loc 1 452 0
 468 0012 2000     		movs	r0, r4
 469              	.LVL39:
 470 0014 FFF7FEFF 		bl	CapSense_SetupWidget
 471              	.LVL40:
 454:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
 472              		.loc 1 454 0
 473 0018 0028     		cmp	r0, #0
 474 001a 05D1     		bne	.L48
 471:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
 475              		.loc 1 471 0
 476 001c 0022     		movs	r2, #0
 477 001e 064B     		ldr	r3, .L51+4
 478 0020 5A70     		strb	r2, [r3, #1]
 476:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 479              		.loc 1 476 0
 480 0022 FFF7FEFF 		bl	CapSense_Scan
 481              	.LVL41:
 478:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
 482              		.loc 1 478 0
 483 0026 04E0     		b	.L46
 484              	.L48:
 449:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 485              		.loc 1 449 0
 486 0028 0134     		adds	r4, r4, #1
 487              	.LVL42:
 488              	.L47:
 447:Generated_Source\PSoC4/CapSense_Sensing.c ****              wdgtIndex < CapSense_TOTAL_WIDGETS;
 489              		.loc 1 447 0 discriminator 1
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 55


 490 002a 002C     		cmp	r4, #0
 491 002c F1D0     		beq	.L49
 492 002e 00E0     		b	.L46
 493              	.LVL43:
 494              	.L50:
 439:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 495              		.loc 1 439 0
 496 0030 1120     		movs	r0, #17
 497              	.LVL44:
 498              	.L46:
 484:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 499              		.loc 1 484 0
 500              		@ sp needed
 501 0032 10BD     		pop	{r4, pc}
 502              	.L52:
 503              		.align	2
 504              	.L51:
 505 0034 00000000 		.word	CapSense_dsRam
 506 0038 00000000 		.word	.LANCHOR0
 507              		.cfi_endproc
 508              	.LFE4:
 509              		.size	CapSense_ScanAllWidgets, .-CapSense_ScanAllWidgets
 510              		.section	.text.CapSense_SetPinState,"ax",%progbits
 511              		.align	2
 512              		.global	CapSense_SetPinState
 513              		.code	16
 514              		.thumb_func
 515              		.type	CapSense_SetPinState, %function
 516              	CapSense_SetPinState:
 517              	.LFB6:
 650:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 eltdNum;
 518              		.loc 1 650 0
 519              		.cfi_startproc
 520              		@ args = 0, pretend = 0, frame = 0
 521              		@ frame_needed = 0, uses_anonymous_args = 0
 522              	.LVL45:
 523 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 524              		.cfi_def_cfa_offset 24
 525              		.cfi_offset 3, -24
 526              		.cfi_offset 4, -20
 527              		.cfi_offset 5, -16
 528              		.cfi_offset 6, -12
 529              		.cfi_offset 7, -8
 530              		.cfi_offset 14, -4
 531 0002 1600     		movs	r6, r2
 675:Generated_Source\PSoC4/CapSense_Sensing.c ****         eltdNum = 1u;
 532              		.loc 1 675 0
 533 0004 2C23     		movs	r3, #44
 534 0006 5843     		muls	r0, r3
 535              	.LVL46:
 536 0008 234B     		ldr	r3, .L60
 537 000a C458     		ldr	r4, [r0, r3]
 538 000c CB00     		lsls	r3, r1, #3
 539 000e 591A     		subs	r1, r3, r1
 540              	.LVL47:
 541 0010 8B00     		lsls	r3, r1, #2
 542 0012 E418     		adds	r4, r4, r3
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 56


 543              	.LVL48:
 680:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 544              		.loc 1 680 0
 545 0014 0025     		movs	r5, #0
 546 0016 3CE0     		b	.L54
 547              	.LVL49:
 548              	.L59:
 683:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) & ~(CapSense_HSIOM_SEL_MASK << 
 549              		.loc 1 683 0
 550 0018 FFF7FEFF 		bl	CyEnterCriticalSection
 551              	.LVL50:
 684:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) & ~(CapSense_GPIO_PC_MASK << ioPtr->s
 552              		.loc 1 684 0
 553 001c 2168     		ldr	r1, [r4]
 554 001e 0B68     		ldr	r3, [r1]
 555 0020 277E     		ldrb	r7, [r4, #24]
 556 0022 0F22     		movs	r2, #15
 557 0024 BA40     		lsls	r2, r2, r7
 558 0026 9343     		bics	r3, r2
 559 0028 0B60     		str	r3, [r1]
 685:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
 560              		.loc 1 685 0
 561 002a 6168     		ldr	r1, [r4, #4]
 562 002c 0B68     		ldr	r3, [r1]
 563 002e A77E     		ldrb	r7, [r4, #26]
 564 0030 0722     		movs	r2, #7
 565 0032 BA40     		lsls	r2, r2, r7
 566 0034 9343     		bics	r3, r2
 567 0036 0B60     		str	r3, [r1]
 686:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 568              		.loc 1 686 0
 569 0038 FFF7FEFF 		bl	CyExitCriticalSection
 570              	.LVL51:
 688:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 571              		.loc 1 688 0
 572 003c 012E     		cmp	r6, #1
 573 003e 17D0     		beq	.L56
 574 0040 002E     		cmp	r6, #0
 575 0042 02D0     		beq	.L57
 576 0044 032E     		cmp	r6, #3
 577 0046 1FD0     		beq	.L58
 578 0048 21E0     		b	.L55
 579              	.L57:
 692:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) | (CapSense_SNS_GROUND_CONNECT <<
 580              		.loc 1 692 0
 581 004a FFF7FEFF 		bl	CyEnterCriticalSection
 582              	.LVL52:
 693:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)(~(uint32)((uint32)1u <
 583              		.loc 1 693 0
 584 004e 6268     		ldr	r2, [r4, #4]
 585 0050 1168     		ldr	r1, [r2]
 586 0052 A77E     		ldrb	r7, [r4, #26]
 587 0054 0623     		movs	r3, #6
 588 0056 BB40     		lsls	r3, r3, r7
 589 0058 0B43     		orrs	r3, r1
 590 005a 1360     		str	r3, [r2]
 694:Generated_Source\PSoC4/CapSense_Sensing.c ****             CyExitCriticalSection(interruptState);
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 57


 591              		.loc 1 694 0
 592 005c A168     		ldr	r1, [r4, #8]
 593 005e 0B68     		ldr	r3, [r1]
 594 0060 677E     		ldrb	r7, [r4, #25]
 595 0062 0122     		movs	r2, #1
 596 0064 BA40     		lsls	r2, r2, r7
 597 0066 9343     		bics	r3, r2
 598 0068 0B60     		str	r3, [r1]
 695:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 599              		.loc 1 695 0
 600 006a FFF7FEFF 		bl	CyExitCriticalSection
 601              	.LVL53:
 696:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 602              		.loc 1 696 0
 603 006e 0EE0     		b	.L55
 604              	.L56:
 699:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)~(uint32)((uint32)1u <<
 605              		.loc 1 699 0
 606 0070 FFF7FEFF 		bl	CyEnterCriticalSection
 607              	.LVL54:
 700:Generated_Source\PSoC4/CapSense_Sensing.c ****             CyExitCriticalSection(interruptState);
 608              		.loc 1 700 0
 609 0074 A168     		ldr	r1, [r4, #8]
 610 0076 0B68     		ldr	r3, [r1]
 611 0078 677E     		ldrb	r7, [r4, #25]
 612 007a 0122     		movs	r2, #1
 613 007c BA40     		lsls	r2, r2, r7
 614 007e 9343     		bics	r3, r2
 615 0080 0B60     		str	r3, [r1]
 701:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 616              		.loc 1 701 0
 617 0082 FFF7FEFF 		bl	CyExitCriticalSection
 618              	.LVL55:
 702:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 619              		.loc 1 702 0
 620 0086 02E0     		b	.L55
 621              	.L58:
 707:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 622              		.loc 1 707 0
 623 0088 2000     		movs	r0, r4
 624 008a FFF7FEFF 		bl	CapSense_CSDConnectSns
 625              	.LVL56:
 626              	.L55:
 742:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 627              		.loc 1 742 0 discriminator 2
 628 008e 1C34     		adds	r4, r4, #28
 629              	.LVL57:
 680:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 630              		.loc 1 680 0 discriminator 2
 631 0090 0135     		adds	r5, r5, #1
 632              	.LVL58:
 633              	.L54:
 680:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 634              		.loc 1 680 0 is_stmt 0 discriminator 1
 635 0092 002D     		cmp	r5, #0
 636 0094 C0D0     		beq	.L59
 744:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 58


 637              		.loc 1 744 0 is_stmt 1
 638              		@ sp needed
 639              	.LVL59:
 640              	.LVL60:
 641              	.LVL61:
 642 0096 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 643              	.L61:
 644              		.align	2
 645              	.L60:
 646 0098 00000000 		.word	CapSense_dsFlash
 647              		.cfi_endproc
 648              	.LFE6:
 649              		.size	CapSense_SetPinState, .-CapSense_SetPinState
 650              		.section	.text.CapSense_SsSwitchSensingMode,"ax",%progbits
 651              		.align	2
 652              		.global	CapSense_SsSwitchSensingMode
 653              		.code	16
 654              		.thumb_func
 655              		.type	CapSense_SsSwitchSensingMode, %function
 656              	CapSense_SsSwitchSensingMode:
 657              	.LFB8:
 902:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_currentSenseMethod != mode)
 658              		.loc 1 902 0
 659              		.cfi_startproc
 660              		@ args = 0, pretend = 0, frame = 0
 661              		@ frame_needed = 0, uses_anonymous_args = 0
 662              	.LVL62:
 663 0000 10B5     		push	{r4, lr}
 664              		.cfi_def_cfa_offset 8
 665              		.cfi_offset 4, -8
 666              		.cfi_offset 14, -4
 667 0002 0400     		movs	r4, r0
 903:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 668              		.loc 1 903 0
 669 0004 0C4B     		ldr	r3, .L66
 670 0006 1B78     		ldrb	r3, [r3]
 671 0008 8342     		cmp	r3, r0
 672 000a 14D0     		beq	.L62
 906:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 673              		.loc 1 906 0
 674 000c 012B     		cmp	r3, #1
 675 000e 01D1     		bne	.L64
 909:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 676              		.loc 1 909 0
 677 0010 FFF7FEFF 		bl	CapSense_SsCSDDisableMode
 678              	.LVL63:
 679              	.L64:
 939:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 680              		.loc 1 939 0
 681 0014 012C     		cmp	r4, #1
 682 0016 05D1     		bne	.L65
 943:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_currentSenseMethod = CapSense_SENSE_METHOD_CSD_E;
 683              		.loc 1 943 0
 684 0018 FFF7FEFF 		bl	CapSense_SsCSDInitialize
 685              	.LVL64:
 944:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 686              		.loc 1 944 0
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 59


 687 001c 0122     		movs	r2, #1
 688 001e 064B     		ldr	r3, .L66
 689 0020 1A70     		strb	r2, [r3]
 690 0022 08E0     		b	.L62
 691              	.L65:
 947:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 692              		.loc 1 947 0
 693 0024 022C     		cmp	r4, #2
 694 0026 06D0     		beq	.L62
 955:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 695              		.loc 1 955 0
 696 0028 042C     		cmp	r4, #4
 697 002a 04D0     		beq	.L62
 963:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 698              		.loc 1 963 0
 699 002c 032C     		cmp	r4, #3
 700 002e 02D0     		beq	.L62
 972:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 701              		.loc 1 972 0
 702 0030 0022     		movs	r2, #0
 703 0032 014B     		ldr	r3, .L66
 704 0034 1A70     		strb	r2, [r3]
 705              	.L62:
 975:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 706              		.loc 1 975 0
 707              		@ sp needed
 708 0036 10BD     		pop	{r4, pc}
 709              	.L67:
 710              		.align	2
 711              	.L66:
 712 0038 00000000 		.word	.LANCHOR0
 713              		.cfi_endproc
 714              	.LFE8:
 715              		.size	CapSense_SsSwitchSensingMode, .-CapSense_SsSwitchSensingMode
 716              		.section	.text.CapSense_SsSetIOsInDefaultState,"ax",%progbits
 717              		.align	2
 718              		.global	CapSense_SsSetIOsInDefaultState
 719              		.code	16
 720              		.thumb_func
 721              		.type	CapSense_SsSetIOsInDefaultState, %function
 722              	CapSense_SsSetIOsInDefaultState:
 723              	.LFB9:
1001:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_FLASH_IO_STRUCT const *ioPtr = &CapSense_ioList[0u];
 724              		.loc 1 1001 0
 725              		.cfi_startproc
 726              		@ args = 0, pretend = 0, frame = 0
 727              		@ frame_needed = 0, uses_anonymous_args = 0
 728 0000 30B5     		push	{r4, r5, lr}
 729              		.cfi_def_cfa_offset 12
 730              		.cfi_offset 4, -12
 731              		.cfi_offset 5, -8
 732              		.cfi_offset 14, -4
 733              	.LVL65:
1007:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 734              		.loc 1 1007 0
 735 0002 0020     		movs	r0, #0
1002:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 loopIndex;
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 60


 736              		.loc 1 1002 0
 737 0004 0D4B     		ldr	r3, .L71
1007:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 738              		.loc 1 1007 0
 739 0006 16E0     		b	.L69
 740              	.LVL66:
 741              	.L70:
1014:Generated_Source\PSoC4/CapSense_Sensing.c ****         regValue &= ~(ioPtr->hsiomMask);
 742              		.loc 1 1014 0 discriminator 3
 743 0008 1968     		ldr	r1, [r3]
 744 000a 0A68     		ldr	r2, [r1]
 745              	.LVL67:
1015:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (ioPtr->hsiomPtr, regValue);
 746              		.loc 1 1015 0 discriminator 3
 747 000c 1C69     		ldr	r4, [r3, #16]
 748 000e A243     		bics	r2, r4
 749              	.LVL68:
1016:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 750              		.loc 1 1016 0 discriminator 3
 751 0010 0A60     		str	r2, [r1]
1018:Generated_Source\PSoC4/CapSense_Sensing.c ****         regValue &= ~(CapSense_GPIO_PC_MASK << ioPtr->shift);
 752              		.loc 1 1018 0 discriminator 3
 753 0012 5C68     		ldr	r4, [r3, #4]
 754 0014 2268     		ldr	r2, [r4]
 755              	.LVL69:
1019:Generated_Source\PSoC4/CapSense_Sensing.c ****         regValue |=  (CapSense_GPIO_STRGDRV << ioPtr->shift);
 756              		.loc 1 1019 0 discriminator 3
 757 0016 9D7E     		ldrb	r5, [r3, #26]
 758 0018 0721     		movs	r1, #7
 759 001a A940     		lsls	r1, r1, r5
 760 001c 8A43     		bics	r2, r1
 761              	.LVL70:
 762 001e 1100     		movs	r1, r2
 763              	.LVL71:
1020:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (ioPtr->pcPtr, regValue);
 764              		.loc 1 1020 0 discriminator 3
 765 0020 0622     		movs	r2, #6
 766 0022 AA40     		lsls	r2, r2, r5
 767 0024 0A43     		orrs	r2, r1
 768              	.LVL72:
1021:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 769              		.loc 1 1021 0 discriminator 3
 770 0026 2260     		str	r2, [r4]
1023:Generated_Source\PSoC4/CapSense_Sensing.c ****         regValue &= ~(ioPtr->mask);
 771              		.loc 1 1023 0 discriminator 3
 772 0028 9968     		ldr	r1, [r3, #8]
 773 002a 0A68     		ldr	r2, [r1]
 774              	.LVL73:
1024:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (ioPtr->drPtr, regValue);
 775              		.loc 1 1024 0 discriminator 3
 776 002c 5C69     		ldr	r4, [r3, #20]
 777 002e A243     		bics	r2, r4
 778              	.LVL74:
1025:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 779              		.loc 1 1025 0 discriminator 3
 780 0030 0A60     		str	r2, [r1]
1028:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 61


 781              		.loc 1 1028 0 discriminator 3
 782 0032 1C33     		adds	r3, r3, #28
 783              	.LVL75:
1007:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 784              		.loc 1 1007 0 discriminator 3
 785 0034 0130     		adds	r0, r0, #1
 786              	.LVL76:
 787              	.L69:
1007:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 788              		.loc 1 1007 0 is_stmt 0 discriminator 1
 789 0036 0428     		cmp	r0, #4
 790 0038 E6D9     		bls	.L70
1038:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 791              		.loc 1 1038 0 is_stmt 1
 792              		@ sp needed
 793 003a 30BD     		pop	{r4, r5, pc}
 794              	.L72:
 795              		.align	2
 796              	.L71:
 797 003c 00000000 		.word	CapSense_ioList
 798              		.cfi_endproc
 799              	.LFE9:
 800              		.size	CapSense_SsSetIOsInDefaultState, .-CapSense_SsSetIOsInDefaultState
 801              		.section	.text.CapSense_SsPostAllWidgetsScan,"ax",%progbits
 802              		.align	2
 803              		.global	CapSense_SsPostAllWidgetsScan
 804              		.code	16
 805              		.thumb_func
 806              		.type	CapSense_SsPostAllWidgetsScan, %function
 807              	CapSense_SsPostAllWidgetsScan:
 808              	.LFB10:
1123:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
 809              		.loc 1 1123 0
 810              		.cfi_startproc
 811              		@ args = 0, pretend = 0, frame = 0
 812              		@ frame_needed = 0, uses_anonymous_args = 0
 813              		@ link register save eliminated.
1180:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 814              		.loc 1 1180 0
 815              		@ sp needed
 816 0000 7047     		bx	lr
 817              		.cfi_endproc
 818              	.LFE10:
 819              		.size	CapSense_SsPostAllWidgetsScan, .-CapSense_SsPostAllWidgetsScan
 820 0002 C046     		.section	.text.CapSense_SsIsrInitialize,"ax",%progbits
 821              		.align	2
 822              		.global	CapSense_SsIsrInitialize
 823              		.code	16
 824              		.thumb_func
 825              		.type	CapSense_SsIsrInitialize, %function
 826              	CapSense_SsIsrInitialize:
 827              	.LFB11:
1200:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_ISR_StartEx(address);
 828              		.loc 1 1200 0
 829              		.cfi_startproc
 830              		@ args = 0, pretend = 0, frame = 0
 831              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 62


 832              	.LVL77:
 833 0000 10B5     		push	{r4, lr}
 834              		.cfi_def_cfa_offset 8
 835              		.cfi_offset 4, -8
 836              		.cfi_offset 14, -4
1201:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 837              		.loc 1 1201 0
 838 0002 FFF7FEFF 		bl	CapSense_ISR_StartEx
 839              	.LVL78:
1202:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 840              		.loc 1 1202 0
 841              		@ sp needed
 842 0006 10BD     		pop	{r4, pc}
 843              		.cfi_endproc
 844              	.LFE11:
 845              		.size	CapSense_SsIsrInitialize, .-CapSense_SsIsrInitialize
 846              		.section	.text.CapSense_SsSetModClkClockDivider,"ax",%progbits
 847              		.align	2
 848              		.global	CapSense_SsSetModClkClockDivider
 849              		.code	16
 850              		.thumb_func
 851              		.type	CapSense_SsSetModClkClockDivider, %function
 852              	CapSense_SsSetModClkClockDivider:
 853              	.LFB12:
1223:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
 854              		.loc 1 1223 0
 855              		.cfi_startproc
 856              		@ args = 0, pretend = 0, frame = 0
 857              		@ frame_needed = 0, uses_anonymous_args = 0
 858              		@ link register save eliminated.
 859              	.LVL79:
1226:Generated_Source\PSoC4/CapSense_Sensing.c ****                  ((uint32)CapSense_ModClk__DIV_ID <<
 860              		.loc 1 1226 0
 861 0000 074A     		ldr	r2, .L77
 862 0002 084B     		ldr	r3, .L77+4
 863 0004 1A60     		str	r2, [r3]
1236:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 864              		.loc 1 1236 0
 865 0006 0138     		subs	r0, r0, #1
 866              	.LVL80:
 867 0008 0002     		lsls	r0, r0, #8
 868              	.LVL81:
 869 000a 074B     		ldr	r3, .L77+8
 870 000c 1860     		str	r0, [r3]
 871              	.L76:
1239:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 872              		.loc 1 1239 0 discriminator 1
 873 000e 054B     		ldr	r3, .L77+4
 874 0010 1B68     		ldr	r3, [r3]
 875 0012 002B     		cmp	r3, #0
 876 0014 FBDB     		blt	.L76
1245:Generated_Source\PSoC4/CapSense_Sensing.c ****                  (uint32)(((uint32)CapSense_ModClk__DIV_ID << CapSense_MODCLK_CMD_DIV_SHIFT) |
 877              		.loc 1 1245 0
 878 0016 054A     		ldr	r2, .L77+12
 879 0018 024B     		ldr	r3, .L77+4
 880 001a 1A60     		str	r2, [r3]
1270:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 63


 881              		.loc 1 1270 0
 882              		@ sp needed
 883 001c 7047     		bx	lr
 884              	.L78:
 885 001e C046     		.align	2
 886              	.L77:
 887 0020 40000040 		.word	1073741888
 888 0024 00000140 		.word	1073807360
 889 0028 00030140 		.word	1073808128
 890 002c 40FF0080 		.word	-2147418304
 891              		.cfi_endproc
 892              	.LFE12:
 893              		.size	CapSense_SsSetModClkClockDivider, .-CapSense_SsSetModClkClockDivider
 894              		.section	.text.CapSense_SsSetSnsClockDivider,"ax",%progbits
 895              		.align	2
 896              		.global	CapSense_SsSetSnsClockDivider
 897              		.code	16
 898              		.thumb_func
 899              		.type	CapSense_SsSetSnsClockDivider, %function
 900              	CapSense_SsSetSnsClockDivider:
 901              	.LFB13:
1291:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSDV2)
 902              		.loc 1 1291 0
 903              		.cfi_startproc
 904              		@ args = 0, pretend = 0, frame = 0
 905              		@ frame_needed = 0, uses_anonymous_args = 0
 906              		@ link register save eliminated.
 907              	.LVL82:
1300:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue &= (uint32)(~CapSense_SENSE_PERIOD_SENSE_DIV_MASK);
 908              		.loc 1 1300 0
 909 0000 034A     		ldr	r2, .L80
 910 0002 1368     		ldr	r3, [r2]
 911              	.LVL83:
1301:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue |= snsClk - 1u;
 912              		.loc 1 1301 0
 913 0004 1B0B     		lsrs	r3, r3, #12
 914              	.LVL84:
 915 0006 1B03     		lsls	r3, r3, #12
 916              	.LVL85:
1302:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_SENSE_PERIOD_PTR, newRegValue);
 917              		.loc 1 1302 0
 918 0008 0138     		subs	r0, r0, #1
 919              	.LVL86:
 920 000a 1843     		orrs	r0, r3
 921              	.LVL87:
1303:Generated_Source\PSoC4/CapSense_Sensing.c **** #else
 922              		.loc 1 1303 0
 923 000c 1060     		str	r0, [r2]
1352:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 924              		.loc 1 1352 0
 925              		@ sp needed
 926 000e 7047     		bx	lr
 927              	.L81:
 928              		.align	2
 929              	.L80:
 930 0010 00020B40 		.word	1074463232
 931              		.cfi_endproc
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 64


 932              	.LFE13:
 933              		.size	CapSense_SsSetSnsClockDivider, .-CapSense_SsSetSnsClockDivider
 934              		.section	.text.CapSense_SsSetClockDividers,"ax",%progbits
 935              		.align	2
 936              		.global	CapSense_SsSetClockDividers
 937              		.code	16
 938              		.thumb_func
 939              		.type	CapSense_SsSetClockDividers, %function
 940              	CapSense_SsSetClockDividers:
 941              	.LFB14:
1375:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Configure Mod clock */
 942              		.loc 1 1375 0
 943              		.cfi_startproc
 944              		@ args = 0, pretend = 0, frame = 0
 945              		@ frame_needed = 0, uses_anonymous_args = 0
 946              	.LVL88:
 947 0000 10B5     		push	{r4, lr}
 948              		.cfi_def_cfa_offset 8
 949              		.cfi_offset 4, -8
 950              		.cfi_offset 14, -4
 951 0002 0400     		movs	r4, r0
1377:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 952              		.loc 1 1377 0
 953 0004 0800     		movs	r0, r1
 954              	.LVL89:
 955 0006 FFF7FEFF 		bl	CapSense_SsSetModClkClockDivider
 956              	.LVL90:
1380:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 957              		.loc 1 1380 0
 958 000a 2000     		movs	r0, r4
 959 000c FFF7FEFF 		bl	CapSense_SsSetSnsClockDivider
 960              	.LVL91:
1381:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 961              		.loc 1 1381 0
 962              		@ sp needed
 963              	.LVL92:
 964 0010 10BD     		pop	{r4, pc}
 965              		.cfi_endproc
 966              	.LFE14:
 967              		.size	CapSense_SsSetClockDividers, .-CapSense_SsSetClockDividers
 968 0012 C046     		.section	.text.CapSense_CalibrateWidget,"ax",%progbits
 969              		.align	2
 970              		.global	CapSense_CalibrateWidget
 971              		.code	16
 972              		.thumb_func
 973              		.type	CapSense_CalibrateWidget, %function
 974              	CapSense_CalibrateWidget:
 975              	.LFB15:
1427:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
 976              		.loc 1 1427 0
 977              		.cfi_startproc
 978              		@ args = 0, pretend = 0, frame = 0
 979              		@ frame_needed = 0, uses_anonymous_args = 0
 980              	.LVL93:
 981 0000 10B5     		push	{r4, lr}
 982              		.cfi_def_cfa_offset 8
 983              		.cfi_offset 4, -8
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 65


 984              		.cfi_offset 14, -4
 985 0002 031E     		subs	r3, r0, #0
 986              	.LVL94:
1432:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
 987              		.loc 1 1432 0
 988 0004 01D1     		bne	.L86
1428:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 989              		.loc 1 1428 0
 990 0006 0020     		movs	r0, #0
 991              	.LVL95:
 992 0008 00E0     		b	.L84
 993              	.LVL96:
 994              	.L86:
1434:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
 995              		.loc 1 1434 0
 996 000a 0120     		movs	r0, #1
 997              	.LVL97:
 998              	.L84:
1452:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
 999              		.loc 1 1452 0
 1000 000c 0028     		cmp	r0, #0
 1001 000e 03D1     		bne	.L85
1481:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1002              		.loc 1 1481 0
 1003 0010 5521     		movs	r1, #85
 1004 0012 1800     		movs	r0, r3
 1005              	.LVL98:
 1006 0014 FFF7FEFF 		bl	CapSense_CSDCalibrateWidget
 1007              	.LVL99:
 1008              	.L85:
1503:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1009              		.loc 1 1503 0
 1010              		@ sp needed
 1011 0018 10BD     		pop	{r4, pc}
 1012              		.cfi_endproc
 1013              	.LFE15:
 1014              		.size	CapSense_CalibrateWidget, .-CapSense_CalibrateWidget
 1015 001a C046     		.section	.text.CapSense_CalibrateAllWidgets,"ax",%progbits
 1016              		.align	2
 1017              		.global	CapSense_CalibrateAllWidgets
 1018              		.code	16
 1019              		.thumb_func
 1020              		.type	CapSense_CalibrateAllWidgets, %function
 1021              	CapSense_CalibrateAllWidgets:
 1022              	.LFB16:
1540:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
 1023              		.loc 1 1540 0
 1024              		.cfi_startproc
 1025              		@ args = 0, pretend = 0, frame = 0
 1026              		@ frame_needed = 0, uses_anonymous_args = 0
 1027 0000 70B5     		push	{r4, r5, r6, lr}
 1028              		.cfi_def_cfa_offset 16
 1029              		.cfi_offset 4, -16
 1030              		.cfi_offset 5, -12
 1031              		.cfi_offset 6, -8
 1032              		.cfi_offset 14, -4
 1033              	.LVL100:
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 66


1544:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1034              		.loc 1 1544 0
 1035 0002 0024     		movs	r4, #0
1541:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 wdgtIndex;
 1036              		.loc 1 1541 0
 1037 0004 0025     		movs	r5, #0
1544:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1038              		.loc 1 1544 0
 1039 0006 04E0     		b	.L88
 1040              	.LVL101:
 1041              	.L89:
1546:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 1042              		.loc 1 1546 0 discriminator 3
 1043 0008 2000     		movs	r0, r4
 1044 000a FFF7FEFF 		bl	CapSense_CalibrateWidget
 1045              	.LVL102:
 1046 000e 0543     		orrs	r5, r0
 1047              	.LVL103:
1544:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1048              		.loc 1 1544 0 discriminator 3
 1049 0010 0134     		adds	r4, r4, #1
 1050              	.LVL104:
 1051              	.L88:
1544:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1052              		.loc 1 1544 0 is_stmt 0 discriminator 1
 1053 0012 002C     		cmp	r4, #0
 1054 0014 F8D0     		beq	.L89
1550:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ANYMODE_AUTOCAL) */
 1055              		.loc 1 1550 0 is_stmt 1
 1056 0016 2800     		movs	r0, r5
 1057              		@ sp needed
 1058              	.LVL105:
 1059              	.LVL106:
 1060 0018 70BD     		pop	{r4, r5, r6, pc}
 1061              		.cfi_endproc
 1062              	.LFE16:
 1063              		.size	CapSense_CalibrateAllWidgets, .-CapSense_CalibrateAllWidgets
 1064 001a C046     		.section	.text.CapSense_SsClearCSDSensors,"ax",%progbits
 1065              		.align	2
 1066              		.global	CapSense_SsClearCSDSensors
 1067              		.code	16
 1068              		.thumb_func
 1069              		.type	CapSense_SsClearCSDSensors, %function
 1070              	CapSense_SsClearCSDSensors:
 1071              	.LFB22:
2539:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2540:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (((CapSense_ENABLE == CapSense_CSX_EN) && \
2541:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_DISABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) && \
2542:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_ENABLE == CapSense_CSDV2) && \
2543:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE)) ||\
2544:Generated_Source\PSoC4/CapSense_Sensing.c ****           ((CapSense_ENABLE == CapSense_CSD_EN) && \
2545:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_ENABLE == CapSense_CSDV2) && \
2546:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE))) */
2547:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2548:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2549:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
2550:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 67


2551:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsClearCSDSensors
2552:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2553:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2554:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2555:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Resets all the CSD sensors to the non-sampling state by sequentially
2556:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  disconnecting all the sensors from the Analog MUX bus and putting them to
2557:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  an inactive state.
2558:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2559:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2560:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The function goes through all the widgets and updates appropriate bits in
2561:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  the IO HSIOM, PC and DR registers depending on the Inactive sensor connection
2562:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  parameter. DR register bits are set to zero when the Inactive sensor
2563:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  connection is Ground or Hi-Z.
2564:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2565:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2566:Generated_Source\PSoC4/CapSense_Sensing.c ****     void CapSense_SsClearCSDSensors(void)
2567:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1072              		.loc 1 2567 0
 1073              		.cfi_startproc
 1074              		@ args = 0, pretend = 0, frame = 0
 1075              		@ frame_needed = 0, uses_anonymous_args = 0
 1076 0000 70B5     		push	{r4, r5, r6, lr}
 1077              		.cfi_def_cfa_offset 16
 1078              		.cfi_offset 4, -16
 1079              		.cfi_offset 5, -12
 1080              		.cfi_offset 6, -8
 1081              		.cfi_offset 14, -4
 1082              	.LVL107:
2568:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 wdgtIndex;
2569:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 snsIndex;
2570:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2571:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
2572:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 pinIndex;
2573:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN) */
2574:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2575:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
2576:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Declare ptr to sensor IO structure */
2577:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_FLASH_IO_STRUCT const *curDedicatedSnsIOPtr;
2578:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Pointer to Flash structure holding info of sensor to be scanned */
2579:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_FLASH_SNS_STRUCT const *curFlashSnsPtr;
2580:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN) */
2581:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_FLASH_IO_STRUCT const *curSnsIOPtr;
2582:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2583:Generated_Source\PSoC4/CapSense_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_TOTAL_WIDGETS; wdgtIndex++)
 1083              		.loc 1 2583 0
 1084 0002 0025     		movs	r5, #0
 1085 0004 14E0     		b	.L91
 1086              	.LVL108:
 1087              	.L94:
2584:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2585:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CapSense_SENSE_METHOD_CSD_E ==
2586:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[wdgtIndex]))
2587:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
2588:Generated_Source\PSoC4/CapSense_Sensing.c ****                 curSnsIOPtr = (CapSense_FLASH_IO_STRUCT const *)
 1088              		.loc 1 2588 0
 1089 0006 2C23     		movs	r3, #44
 1090 0008 6B43     		muls	r3, r5
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 68


 1091 000a 0B4A     		ldr	r2, .L95
 1092 000c 9E58     		ldr	r6, [r3, r2]
 1093              	.LVL109:
2589:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                 CapSense_dsFlash.wdgtArray[wdgtIndex].ptr2SnsFlash;
2590:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2591:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Go through all the sensors in widget */
2592:Generated_Source\PSoC4/CapSense_Sensing.c ****                 for (snsIndex = 0u; snsIndex < (uint8)CapSense_dsFlash.wdgtArray[wdgtIndex].totalNu
 1094              		.loc 1 2592 0
 1095 000e 0024     		movs	r4, #0
 1096 0010 06E0     		b	.L92
 1097              	.LVL110:
 1098              	.L93:
2593:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
2594:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
2595:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Check ganged sns flag */
2596:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (CapSense_GANGED_SNS_MASK == (CapSense_dsFlash.wdgtArray[wdgtIndex].stat
2597:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                                  CapSense_GANGED_SNS_MASK))
2598:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2599:Generated_Source\PSoC4/CapSense_Sensing.c ****                             /* Get sns pointer */
2600:Generated_Source\PSoC4/CapSense_Sensing.c ****                             curFlashSnsPtr = (CapSense_FLASH_SNS_STRUCT const *)
2601:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                                CapSense_dsFlash.wdgtArray[wdgtIndex
2602:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                                snsIndex;
2603:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2604:Generated_Source\PSoC4/CapSense_Sensing.c ****                             for(pinIndex = 0u; pinIndex < curFlashSnsPtr->numPins; pinIndex++)
2605:Generated_Source\PSoC4/CapSense_Sensing.c ****                             {
2606:Generated_Source\PSoC4/CapSense_Sensing.c ****                                 /* Get IO pointer for dedicated pin */
2607:Generated_Source\PSoC4/CapSense_Sensing.c ****                                 curDedicatedSnsIOPtr = &CapSense_ioList[curFlashSnsPtr->firstPinId 
2608:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2609:Generated_Source\PSoC4/CapSense_Sensing.c ****                                 /* Disconnect dedicated pin */
2610:Generated_Source\PSoC4/CapSense_Sensing.c ****                                 CapSense_CSDDisconnectSns(curDedicatedSnsIOPtr);
2611:Generated_Source\PSoC4/CapSense_Sensing.c ****                             }
2612:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2613:Generated_Source\PSoC4/CapSense_Sensing.c ****                         else
2614:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2615:Generated_Source\PSoC4/CapSense_Sensing.c ****                             /* Disable sensor */
2616:Generated_Source\PSoC4/CapSense_Sensing.c ****                             CapSense_CSDDisconnectSns(&curSnsIOPtr[snsIndex]);
2617:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2618:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #else
2619:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Disable sensor */
2620:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_CSDDisconnectSns(&curSnsIOPtr[snsIndex]);
 1099              		.loc 1 2620 0 discriminator 3
 1100 0012 E300     		lsls	r3, r4, #3
 1101 0014 1B1B     		subs	r3, r3, r4
 1102 0016 9800     		lsls	r0, r3, #2
 1103 0018 3018     		adds	r0, r6, r0
 1104 001a FFF7FEFF 		bl	CapSense_CSDDisconnectSns
 1105              	.LVL111:
2592:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
 1106              		.loc 1 2592 0 discriminator 3
 1107 001e 0134     		adds	r4, r4, #1
 1108              	.LVL112:
 1109              	.L92:
2592:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
 1110              		.loc 1 2592 0 is_stmt 0 discriminator 1
 1111 0020 2C23     		movs	r3, #44
 1112 0022 6B43     		muls	r3, r5
 1113 0024 044A     		ldr	r2, .L95
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 69


 1114 0026 D318     		adds	r3, r2, r3
 1115 0028 1B7E     		ldrb	r3, [r3, #24]
 1116 002a 9C42     		cmp	r4, r3
 1117 002c F1D3     		bcc	.L93
2583:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1118              		.loc 1 2583 0 is_stmt 1 discriminator 2
 1119 002e 0135     		adds	r5, r5, #1
 1120              	.LVL113:
 1121              	.L91:
2583:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1122              		.loc 1 2583 0 is_stmt 0 discriminator 1
 1123 0030 002D     		cmp	r5, #0
 1124 0032 E8D0     		beq	.L94
2621:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN) */
2622:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
2623:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
2624:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2625:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 1125              		.loc 1 2625 0 is_stmt 1
 1126              		@ sp needed
 1127              	.LVL114:
 1128 0034 70BD     		pop	{r4, r5, r6, pc}
 1129              	.L96:
 1130 0036 C046     		.align	2
 1131              	.L95:
 1132 0038 00000000 		.word	CapSense_dsFlash
 1133              		.cfi_endproc
 1134              	.LFE22:
 1135              		.size	CapSense_SsClearCSDSensors, .-CapSense_SsClearCSDSensors
 1136              		.section	.text.CapSense_SsCSDGetColSnsClkDivider,"ax",%progbits
 1137              		.align	2
 1138              		.global	CapSense_SsCSDGetColSnsClkDivider
 1139              		.code	16
 1140              		.thumb_func
 1141              		.type	CapSense_SsCSDGetColSnsClkDivider, %function
 1142              	CapSense_SsCSDGetColSnsClkDivider:
 1143              	.LFB23:
2626:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2627:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2628:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsCSDGetColSnsClkDivider
2629:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2630:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2631:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2632:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function gets the Sense Clock Divider value for one-dimension widgets
2633:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  and Column Sense Clock divider value for two-dimension widgets.
2634:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2635:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2636:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function gets the Sense Clock Divider value based on the Component
2637:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  configuration. The function is applicable for one-dimension widgets and for
2638:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  two-dimension widgets.
2639:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2640:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param widgetId
2641:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Specifies the ID of the widget.
2642:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2643:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \return
2644:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Returns the Sense Clock Divider value for one-dimension widgets
2645:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  and the Column Sense Clock divider value for two-dimension widgets.
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 70


2646:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2647:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2648:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 CapSense_SsCSDGetColSnsClkDivider(uint32 widgetId)
2649:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1144              		.loc 1 2649 0
 1145              		.cfi_startproc
 1146              		@ args = 0, pretend = 0, frame = 0
 1147              		@ frame_needed = 0, uses_anonymous_args = 0
 1148              		@ link register save eliminated.
 1149              	.LVL115:
2650:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 retVal;
2651:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2652:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Get sense divider based on configuration */
2653:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE != CapSense_CSD_COMMON_SNS_CLK_EN)
2654:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_RAM_WD_BASE_STRUCT *ptrWdgt;
2655:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2656:Generated_Source\PSoC4/CapSense_Sensing.c ****             ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
 1150              		.loc 1 2656 0
 1151 0000 2C23     		movs	r3, #44
 1152 0002 5843     		muls	r0, r3
 1153              	.LVL116:
 1154 0004 024B     		ldr	r3, .L98
 1155 0006 1818     		adds	r0, r3, r0
 1156 0008 4368     		ldr	r3, [r0, #4]
 1157              	.LVL117:
2657:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
2658:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2659:Generated_Source\PSoC4/CapSense_Sensing.c ****             retVal = (uint32)(ptrWdgt->snsClk);
 1158              		.loc 1 2659 0
 1159 000a 5889     		ldrh	r0, [r3, #10]
 1160              	.LVL118:
2660:Generated_Source\PSoC4/CapSense_Sensing.c ****         #else
2661:Generated_Source\PSoC4/CapSense_Sensing.c ****             retVal = (uint32)CapSense_dsRam.snsCsdClk;
2662:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2663:Generated_Source\PSoC4/CapSense_Sensing.c ****             (void)widgetId; /* This parameter is unused in such configurations */
2664:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN) */
2665:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2666:Generated_Source\PSoC4/CapSense_Sensing.c ****         return (retVal);
2667:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 1161              		.loc 1 2667 0
 1162              		@ sp needed
 1163 000c 7047     		bx	lr
 1164              	.L99:
 1165 000e C046     		.align	2
 1166              	.L98:
 1167 0010 00000000 		.word	CapSense_dsFlash
 1168              		.cfi_endproc
 1169              	.LFE23:
 1170              		.size	CapSense_SsCSDGetColSnsClkDivider, .-CapSense_SsCSDGetColSnsClkDivider
 1171              		.section	.text.CapSense_SsCSDSetColSnsClkDivider,"ax",%progbits
 1172              		.align	2
 1173              		.global	CapSense_SsCSDSetColSnsClkDivider
 1174              		.code	16
 1175              		.thumb_func
 1176              		.type	CapSense_SsCSDSetColSnsClkDivider, %function
 1177              	CapSense_SsCSDSetColSnsClkDivider:
 1178              	.LFB24:
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 71


2668:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2669:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2670:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2671:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsCSDSetColSnsClkDivider
2672:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2673:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2674:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2675:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function sets the Sense Clock Divider value for one-dimension widgets
2676:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  and Column Sense Clock divider value for two-dimension widgets.
2677:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2678:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2679:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function sets the Sense Clock Divider value based on the Component
2680:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  configuration. The function is applicable for one-dimension widgets and for
2681:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  two-dimension widgets.
2682:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2683:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param
2684:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  widgetId Specifies the ID of the widget.
2685:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2686:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \return The Sense Clock Divider value for one-dimension widgets
2687:Generated_Source\PSoC4/CapSense_Sensing.c ****     *        and the Column Sense Clock divider value for two-dimension widgets.
2688:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2689:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2690:Generated_Source\PSoC4/CapSense_Sensing.c ****     void CapSense_SsCSDSetColSnsClkDivider(uint32 widgetId, uint32 dividerVal)
2691:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1179              		.loc 1 2691 0
 1180              		.cfi_startproc
 1181              		@ args = 0, pretend = 0, frame = 0
 1182              		@ frame_needed = 0, uses_anonymous_args = 0
 1183              		@ link register save eliminated.
 1184              	.LVL119:
2692:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Get sense divider based on configuration */
2693:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE != CapSense_CSD_COMMON_SNS_CLK_EN)
2694:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_RAM_WD_BASE_STRUCT *ptrWdgt;
2695:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2696:Generated_Source\PSoC4/CapSense_Sensing.c ****             ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
 1185              		.loc 1 2696 0
 1186 0000 2C23     		movs	r3, #44
 1187 0002 5843     		muls	r0, r3
 1188              	.LVL120:
 1189 0004 024B     		ldr	r3, .L101
 1190 0006 1818     		adds	r0, r3, r0
 1191 0008 4368     		ldr	r3, [r0, #4]
 1192              	.LVL121:
2697:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
2698:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2699:Generated_Source\PSoC4/CapSense_Sensing.c ****             ptrWdgt->snsClk = (uint16)dividerVal;
 1193              		.loc 1 2699 0
 1194 000a 5981     		strh	r1, [r3, #10]
2700:Generated_Source\PSoC4/CapSense_Sensing.c ****         #else
2701:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_dsRam.snsCsdClk = (uint16)dividerVal;
2702:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2703:Generated_Source\PSoC4/CapSense_Sensing.c ****             (void)widgetId; /* This parameter is unused in such configurations */
2704:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN) */
2705:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 1195              		.loc 1 2705 0
 1196              		@ sp needed
 1197 000c 7047     		bx	lr
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 72


 1198              	.L102:
 1199 000e C046     		.align	2
 1200              	.L101:
 1201 0010 00000000 		.word	CapSense_dsFlash
 1202              		.cfi_endproc
 1203              	.LFE24:
 1204              		.size	CapSense_SsCSDSetColSnsClkDivider, .-CapSense_SsCSDSetColSnsClkDivider
 1205              		.section	.text.CapSense_SsCSDCalcPrsSize,"ax",%progbits
 1206              		.align	2
 1207              		.global	CapSense_SsCSDCalcPrsSize
 1208              		.code	16
 1209              		.thumb_func
 1210              		.type	CapSense_SsCSDCalcPrsSize, %function
 1211              	CapSense_SsCSDCalcPrsSize:
 1212              	.LFB25:
2706:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2707:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2708:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
2709:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*******************************************************************************
2710:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Function Name: CapSense_SsCSDGetRowSnsClkDivider
2711:Generated_Source\PSoC4/CapSense_Sensing.c ****         ****************************************************************************//**
2712:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2713:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \brief
2714:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  This function gets the Sense Clock Divider value for one-dimension widgets
2715:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  and the Column Sense Clock divider value for two-dimension widgets.
2716:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2717:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \details
2718:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  This function gets the Sense Clock Divider value based on the Component
2719:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  configuration. The function is applicable for one-dimension widgets and for
2720:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  two-dimension widgets.
2721:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2722:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \param
2723:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  widgetId Specifies the ID of the widget.
2724:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2725:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \return
2726:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  Returns the sense clock divider value for one-dimension widgets
2727:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  and column sense clock divider value for two-dimension widgets.
2728:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2729:Generated_Source\PSoC4/CapSense_Sensing.c ****         *******************************************************************************/
2730:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 CapSense_SsCSDGetRowSnsClkDivider(uint32 widgetId)
2731:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2732:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 retVal;
2733:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2734:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Get sense divider based on configuration */
2735:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE != CapSense_CSD_COMMON_SNS_CLK_EN)
2736:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_RAM_WD_BASE_STRUCT *ptrWdgt;
2737:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2738:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
2739:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
2740:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2741:Generated_Source\PSoC4/CapSense_Sensing.c ****                 retVal = ptrWdgt->rowSnsClk;
2742:Generated_Source\PSoC4/CapSense_Sensing.c ****             #else
2743:Generated_Source\PSoC4/CapSense_Sensing.c ****                 retVal = (uint32)CapSense_dsRam.snsCsdClk;
2744:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2745:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (void)widgetId; /* This parameter is unused in such configurations */
2746:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN) */
2747:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 73


2748:Generated_Source\PSoC4/CapSense_Sensing.c ****             return (retVal);
2749:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2750:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2751:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
2752:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2753:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2754:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)
2755:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*******************************************************************************
2756:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Function Name: CapSense_SsCSDCalcPrsSize
2757:Generated_Source\PSoC4/CapSense_Sensing.c ****         ****************************************************************************//**
2758:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2759:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \brief
2760:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  The function finds PRS polynomial size in the Auto mode.
2761:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2762:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \details
2763:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  The PRS polynomial size in the Auto mode is found based on the following
2764:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  requirements:
2765:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  - at least one full spread spectrum polynomial should pass during scan time.
2766:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2767:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \param
2768:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  snsClkDivider The divider value for the sense clock.
2769:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  resolution The widget resolution.
2770:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2771:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \return prsSize PRS value for SENSE_PERIOD register.
2772:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2773:Generated_Source\PSoC4/CapSense_Sensing.c ****         *******************************************************************************/
2774:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 CapSense_SsCSDCalcPrsSize(uint32 snsClkDivider, uint32 resolution)
2775:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1213              		.loc 1 2775 0
 1214              		.cfi_startproc
 1215              		@ args = 0, pretend = 0, frame = 0
 1216              		@ frame_needed = 0, uses_anonymous_args = 0
 1217              		@ link register save eliminated.
 1218              	.LVL122:
2776:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 prsSize;
2777:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 modClkDivider = 1u;
2778:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2779:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if ((CapSense_ENABLE != CapSense_CSDV2) && \
2780:Generated_Source\PSoC4/CapSense_Sensing.c ****                  (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK))
2781:Generated_Source\PSoC4/CapSense_Sensing.c ****                     modClkDivider = (uint32)CapSense_dsRam.modCsdClk;
2782:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif
2783:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2784:Generated_Source\PSoC4/CapSense_Sensing.c ****             if ((snsClkDivider * CapSense_PRS_LENGTH_12_BITS) <= (modClkDivider * ((0x00000001Lu <<
 1219              		.loc 1 2784 0
 1220 0000 0203     		lsls	r2, r0, #12
 1221 0002 121A     		subs	r2, r2, r0
 1222 0004 0123     		movs	r3, #1
 1223 0006 8B40     		lsls	r3, r3, r1
 1224 0008 013B     		subs	r3, r3, #1
 1225 000a 9A42     		cmp	r2, r3
 1226 000c 05D9     		bls	.L105
2785:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
2786:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set PRS12 mode */
2787:Generated_Source\PSoC4/CapSense_Sensing.c ****                 prsSize = CapSense_PRS_12_CONFIG;
2788:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
2789:Generated_Source\PSoC4/CapSense_Sensing.c ****             else if ((snsClkDivider * CapSense_PRS_LENGTH_8_BITS) <= (modClkDivider * ((0x00000001L
 1227              		.loc 1 2789 0
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 74


 1228 000e 0202     		lsls	r2, r0, #8
 1229 0010 101A     		subs	r0, r2, r0
 1230              	.LVL123:
 1231 0012 8342     		cmp	r3, r0
 1232 0014 03D3     		bcc	.L106
2790:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
2791:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set PRS8 mode */
2792:Generated_Source\PSoC4/CapSense_Sensing.c ****                 prsSize = CapSense_PRS_8_CONFIG;
 1233              		.loc 1 2792 0
 1234 0016 0520     		movs	r0, #5
 1235 0018 02E0     		b	.L104
 1236              	.LVL124:
 1237              	.L105:
2787:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
 1238              		.loc 1 2787 0
 1239 001a 0620     		movs	r0, #6
 1240              	.LVL125:
 1241 001c 00E0     		b	.L104
 1242              	.L106:
2793:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
2794:Generated_Source\PSoC4/CapSense_Sensing.c ****             else
2795:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
2796:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set Direct clock mode */
2797:Generated_Source\PSoC4/CapSense_Sensing.c ****                 prsSize = CapSense_CLK_SOURCE_DIRECT;
 1243              		.loc 1 2797 0
 1244 001e 0020     		movs	r0, #0
 1245              	.L104:
 1246              	.LVL126:
2798:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
2799:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2800:Generated_Source\PSoC4/CapSense_Sensing.c ****             return (uint8)prsSize;
 1247              		.loc 1 2800 0
 1248 0020 C0B2     		uxtb	r0, r0
 1249              	.LVL127:
2801:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 1250              		.loc 1 2801 0
 1251              		@ sp needed
 1252 0022 7047     		bx	lr
 1253              		.cfi_endproc
 1254              	.LFE25:
 1255              		.size	CapSense_SsCSDCalcPrsSize, .-CapSense_SsCSDCalcPrsSize
 1256              		.section	.text.CapSense_SsSetWidgetSenseClkSrc,"ax",%progbits
 1257              		.align	2
 1258              		.code	16
 1259              		.thumb_func
 1260              		.type	CapSense_SsSetWidgetSenseClkSrc, %function
 1261              	CapSense_SsSetWidgetSenseClkSrc:
 1262              	.LFB19:
2239:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 lfsrSize;
 1263              		.loc 1 2239 0
 1264              		.cfi_startproc
 1265              		@ args = 0, pretend = 0, frame = 0
 1266              		@ frame_needed = 0, uses_anonymous_args = 0
 1267              	.LVL128:
 1268 0000 70B5     		push	{r4, r5, r6, lr}
 1269              		.cfi_def_cfa_offset 16
 1270              		.cfi_offset 4, -16
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 75


 1271              		.cfi_offset 5, -12
 1272              		.cfi_offset 6, -8
 1273              		.cfi_offset 14, -4
 1274 0002 0E00     		movs	r6, r1
2251:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1275              		.loc 1 2251 0
 1276 0004 FFF7FEFF 		bl	CapSense_SsCSDGetColSnsClkDivider
 1277              	.LVL129:
 1278 0008 0500     		movs	r5, r0
 1279              	.LVL130:
2254:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                                                              CapSen
 1280              		.loc 1 2254 0
 1281 000a 3188     		ldrh	r1, [r6]
 1282 000c 0022     		movs	r2, #0
 1283 000e FFF7FEFF 		bl	CapSense_SsCSDGetNumberOfConversions
 1284              	.LVL131:
 1285 0012 0100     		movs	r1, r0
 1286              	.LVL132:
2256:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if (CapSense_CLK_SOURCE_DIRECT == lfsrSize)
 1287              		.loc 1 2256 0
 1288 0014 2800     		movs	r0, r5
 1289              	.LVL133:
 1290 0016 FFF7FEFF 		bl	CapSense_SsCalcLfsrSize
 1291              	.LVL134:
 1292 001a 041E     		subs	r4, r0, #0
 1293              	.LVL135:
2257:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
 1294              		.loc 1 2257 0
 1295 001c 04D1     		bne	.L108
2263:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
 1296              		.loc 1 2263 0
 1297 001e 6800     		lsls	r0, r5, #1
 1298              	.LVL136:
 1299 0020 3188     		ldrh	r1, [r6]
 1300 0022 FFF7FEFF 		bl	CapSense_SsCSDCalcPrsSize
 1301              	.LVL137:
 1302 0026 0400     		movs	r4, r0
 1303              	.LVL138:
 1304              	.L108:
2265:Generated_Source\PSoC4/CapSense_Sensing.c ****             #else
 1305              		.loc 1 2265 0
 1306 0028 2100     		movs	r1, r4
 1307 002a 2800     		movs	r0, r5
 1308 002c FFF7FEFF 		bl	CapSense_SsCalcLfsrScale
 1309              	.LVL139:
2280:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1310              		.loc 1 2280 0
 1311 0030 0001     		lsls	r0, r0, #4
 1312              	.LVL140:
 1313 0032 C0B2     		uxtb	r0, r0
 1314 0034 2043     		orrs	r0, r4
 1315 0036 3073     		strb	r0, [r6, #12]
2315:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 1316              		.loc 1 2315 0
 1317              		@ sp needed
 1318              	.LVL141:
 1319              	.LVL142:
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 76


 1320              	.LVL143:
 1321 0038 70BD     		pop	{r4, r5, r6, pc}
 1322              		.cfi_endproc
 1323              	.LFE19:
 1324              		.size	CapSense_SsSetWidgetSenseClkSrc, .-CapSense_SsSetWidgetSenseClkSrc
 1325 003a C046     		.section	.text.CapSense_SsAutoTune,"ax",%progbits
 1326              		.align	2
 1327              		.global	CapSense_SsAutoTune
 1328              		.code	16
 1329              		.thumb_func
 1330              		.type	CapSense_SsAutoTune, %function
 1331              	CapSense_SsAutoTune:
 1332              	.LFB17:
1576:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus autoTuneStatus = CYRET_SUCCESS;
 1333              		.loc 1 1576 0
 1334              		.cfi_startproc
 1335              		@ args = 0, pretend = 0, frame = 40
 1336              		@ frame_needed = 0, uses_anonymous_args = 0
 1337 0000 70B5     		push	{r4, r5, r6, lr}
 1338              		.cfi_def_cfa_offset 16
 1339              		.cfi_offset 4, -16
 1340              		.cfi_offset 5, -12
 1341              		.cfi_offset 6, -8
 1342              		.cfi_offset 14, -4
 1343 0002 8AB0     		sub	sp, sp, #40
 1344              		.cfi_def_cfa_offset 56
 1345              	.LVL144:
1590:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.vRef = CapSense_CSD_VREF_MV;
 1346              		.loc 1 1590 0
 1347 0004 FA23     		movs	r3, #250
 1348 0006 9B00     		lsls	r3, r3, #2
 1349 0008 02AA     		add	r2, sp, #8
 1350 000a 1380     		strh	r3, [r2]
1591:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.iDacGain = CapSense_CSD_IDAC_GAIN_VALUE_NA;
 1351              		.loc 1 1591 0
 1352 000c 454B     		ldr	r3, .L120
 1353 000e 5380     		strh	r3, [r2, #2]
1592:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1354              		.loc 1 1592 0
 1355 0010 7C33     		adds	r3, r3, #124
 1356 0012 FF33     		adds	r3, r3, #255
 1357 0014 9380     		strh	r3, [r2, #4]
1597:Generated_Source\PSoC4/CapSense_Sensing.c ****         #elif ((CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK) && (CapSense_DISABLE == CY_PSOC4_400
 1358              		.loc 1 1597 0
 1359 0016 444B     		ldr	r3, .L120+4
 1360 0018 197F     		ldrb	r1, [r3, #28]
 1361 001a 4448     		ldr	r0, .L120+8
 1362 001c FFF7FEFF 		bl	__aeabi_uidiv
 1363              	.LVL145:
 1364 0020 02AB     		add	r3, sp, #8
 1365 0022 9881     		strh	r0, [r3, #12]
 1366              	.LVL146:
1623:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1367              		.loc 1 1623 0
 1368 0024 0026     		movs	r6, #0
1577:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 wdgtIndex;
 1369              		.loc 1 1577 0
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 77


 1370 0026 0025     		movs	r5, #0
1623:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1371              		.loc 1 1623 0
 1372 0028 3DE0     		b	.L110
 1373              	.LVL147:
 1374              	.L114:
1628:Generated_Source\PSoC4/CapSense_Sensing.c ****                           CapSense_dsFlash.wdgtArray[wdgtIndex].ptr2WdgtRam;
 1375              		.loc 1 1628 0
 1376 002a 2C23     		movs	r3, #44
 1377 002c 7343     		muls	r3, r6
 1378 002e 404A     		ldr	r2, .L120+12
 1379 0030 D318     		adds	r3, r2, r3
 1380 0032 5C68     		ldr	r4, [r3, #4]
 1381              	.LVL148:
1632:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1382              		.loc 1 1632 0
 1383 0034 0C23     		movs	r3, #12
 1384 0036 2380     		strh	r3, [r4]
1635:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ptrWdgt->snsClk = (uint16)((uint32)autoTuneConfig.snsClkInputClock / CapSense_CALIB
 1385              		.loc 1 1635 0
 1386 0038 0023     		movs	r3, #0
 1387 003a 2373     		strb	r3, [r4, #12]
1636:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
 1388              		.loc 1 1636 0
 1389 003c 02AB     		add	r3, sp, #8
 1390 003e 9889     		ldrh	r0, [r3, #12]
 1391 0040 3C49     		ldr	r1, .L120+16
 1392 0042 FFF7FEFF 		bl	__aeabi_uidiv
 1393              	.LVL149:
 1394 0046 6081     		strh	r0, [r4, #10]
1647:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1395              		.loc 1 1647 0
 1396 0048 5521     		movs	r1, #85
 1397 004a 3000     		movs	r0, r6
 1398 004c FFF7FEFF 		bl	CapSense_CSDCalibrateWidget
 1399              	.LVL150:
1696:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1400              		.loc 1 1696 0
 1401 0050 2300     		movs	r3, r4
 1402 0052 0A33     		adds	r3, r3, #10
 1403 0054 0693     		str	r3, [sp, #24]
1699:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1404              		.loc 1 1699 0
 1405 0056 384B     		ldr	r3, .L120+20
 1406 0058 1B78     		ldrb	r3, [r3]
 1407 005a 02AA     		add	r2, sp, #8
 1408 005c 1376     		strb	r3, [r2, #24]
1702:Generated_Source\PSoC4/CapSense_Sensing.c ****                         ((uint32)(0x01uL << CapSense_CALIBRATION_RESOLUTION) - 1u));
 1409              		.loc 1 1702 0
 1410 005e 374B     		ldr	r3, .L120+24
 1411 0060 1888     		ldrh	r0, [r3]
 1412 0062 FA23     		movs	r3, #250
 1413 0064 9B00     		lsls	r3, r3, #2
 1414 0066 5843     		muls	r0, r3
 1415 0068 3549     		ldr	r1, .L120+28
 1416 006a FFF7FEFF 		bl	__aeabi_uidiv
 1417              	.LVL151:
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 78


 1418 006e 02AB     		add	r3, sp, #8
 1419 0070 D881     		strh	r0, [r3, #14]
1706:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1420              		.loc 1 1706 0
 1421 0072 1800     		movs	r0, r3
 1422 0074 FFF7FEFF 		bl	SmartSense_TunePrescalers
 1423              	.LVL152:
1708:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
 1424              		.loc 1 1708 0
 1425 0078 324B     		ldr	r3, .L120+32
 1426 007a 9842     		cmp	r0, r3
 1427 007c 03D9     		bls	.L112
1710:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
 1428              		.loc 1 1710 0
 1429 007e 0625     		movs	r5, #6
 1430              	.LVL153:
 1431 0080 01E0     		b	.L112
 1432              	.LVL154:
 1433              	.L113:
1720:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
 1434              		.loc 1 1720 0
 1435 0082 5B00     		lsls	r3, r3, #1
 1436 0084 6381     		strh	r3, [r4, #10]
 1437              	.LVL155:
 1438              	.L112:
1717:Generated_Source\PSoC4/CapSense_Sensing.c ****                         (CapSense_MIN_SNS_CLK_DIVIDER > ptrWdgt->snsClk))
 1439              		.loc 1 1717 0
 1440 0086 02AB     		add	r3, sp, #8
 1441 0088 9989     		ldrh	r1, [r3, #12]
 1442 008a 6389     		ldrh	r3, [r4, #10]
 1443 008c 2E4A     		ldr	r2, .L120+36
 1444 008e 5A43     		muls	r2, r3
 1445 0090 9142     		cmp	r1, r2
 1446 0092 F6D8     		bhi	.L113
1717:Generated_Source\PSoC4/CapSense_Sensing.c ****                         (CapSense_MIN_SNS_CLK_DIVIDER > ptrWdgt->snsClk))
 1447              		.loc 1 1717 0 is_stmt 0 discriminator 1
 1448 0094 032B     		cmp	r3, #3
 1449 0096 F4D9     		bls	.L113
1735:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1450              		.loc 1 1735 0 is_stmt 1
 1451 0098 B300     		lsls	r3, r6, #2
 1452 009a 0AAA     		add	r2, sp, #40
 1453 009c 9446     		mov	ip, r2
 1454 009e 6344     		add	r3, r3, ip
 1455 00a0 043B     		subs	r3, r3, #4
 1456 00a2 1860     		str	r0, [r3]
1623:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1457              		.loc 1 1623 0
 1458 00a4 0136     		adds	r6, r6, #1
 1459              	.LVL156:
 1460              	.L110:
1623:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1461              		.loc 1 1623 0 is_stmt 0 discriminator 1
 1462 00a6 002E     		cmp	r6, #0
 1463 00a8 BFD0     		beq	.L114
 1464 00aa 0024     		movs	r4, #0
 1465 00ac 22E0     		b	.L115
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 79


 1466              	.LVL157:
 1467              	.L116:
1769:Generated_Source\PSoC4/CapSense_Sensing.c ****                           CapSense_dsFlash.wdgtArray[wdgtIndex].ptr2WdgtRam;
 1468              		.loc 1 1769 0 is_stmt 1
 1469 00ae 2C23     		movs	r3, #44
 1470 00b0 6343     		muls	r3, r4
 1471 00b2 1F4A     		ldr	r2, .L120+12
 1472 00b4 D318     		adds	r3, r2, r3
 1473 00b6 5E68     		ldr	r6, [r3, #4]
 1474              	.LVL158:
1773:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1475              		.loc 1 1773 0
 1476 00b8 5521     		movs	r1, #85
 1477 00ba 2000     		movs	r0, r4
 1478 00bc FFF7FEFF 		bl	CapSense_CSDCalibrateWidget
 1479              	.LVL159:
 1480 00c0 0543     		orrs	r5, r0
 1481              	.LVL160:
1776:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1482              		.loc 1 1776 0
 1483 00c2 3300     		movs	r3, r6
 1484 00c4 0A33     		adds	r3, r3, #10
 1485 00c6 0693     		str	r3, [sp, #24]
1779:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1486              		.loc 1 1779 0
 1487 00c8 A300     		lsls	r3, r4, #2
 1488 00ca 0AAA     		add	r2, sp, #40
 1489 00cc 9446     		mov	ip, r2
 1490 00ce 6344     		add	r3, r3, ip
 1491 00d0 043B     		subs	r3, r3, #4
 1492 00d2 1B68     		ldr	r3, [r3]
 1493 00d4 0193     		str	r3, [sp, #4]
 1494 00d6 0493     		str	r3, [sp, #16]
1782:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1495              		.loc 1 1782 0
 1496 00d8 174B     		ldr	r3, .L120+20
 1497 00da 1B78     		ldrb	r3, [r3]
 1498 00dc 02AA     		add	r2, sp, #8
 1499 00de 1376     		strb	r3, [r2, #24]
1805:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1500              		.loc 1 1805 0
 1501 00e0 F389     		ldrh	r3, [r6, #14]
 1502 00e2 D380     		strh	r3, [r2, #6]
1808:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1503              		.loc 1 1808 0
 1504 00e4 3300     		movs	r3, r6
 1505 00e6 1033     		adds	r3, r3, #16
 1506 00e8 0793     		str	r3, [sp, #28]
1811:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
 1507              		.loc 1 1811 0
 1508 00ea 1000     		movs	r0, r2
 1509 00ec FFF7FEFF 		bl	SmartSense_TuneSensitivity
 1510              	.LVL161:
 1511 00f0 3080     		strh	r0, [r6]
1764:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1512              		.loc 1 1764 0
 1513 00f2 0134     		adds	r4, r4, #1
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 80


 1514              	.LVL162:
 1515              	.L115:
1764:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1516              		.loc 1 1764 0 is_stmt 0 discriminator 1
 1517 00f4 002C     		cmp	r4, #0
 1518 00f6 DAD0     		beq	.L116
 1519 00f8 0024     		movs	r4, #0
 1520              	.LVL163:
 1521 00fa 0DE0     		b	.L117
 1522              	.LVL164:
 1523              	.L118:
1828:Generated_Source\PSoC4/CapSense_Sensing.c ****                           CapSense_dsFlash.wdgtArray[wdgtIndex].ptr2WdgtRam;
 1524              		.loc 1 1828 0 is_stmt 1
 1525 00fc 2C23     		movs	r3, #44
 1526 00fe 6343     		muls	r3, r4
 1527 0100 0B4A     		ldr	r2, .L120+12
 1528 0102 D318     		adds	r3, r2, r3
 1529 0104 5968     		ldr	r1, [r3, #4]
 1530              	.LVL165:
1831:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1531              		.loc 1 1831 0
 1532 0106 2000     		movs	r0, r4
 1533 0108 FFF7FEFF 		bl	CapSense_SsSetWidgetSenseClkSrc
 1534              	.LVL166:
1834:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1535              		.loc 1 1834 0
 1536 010c 5521     		movs	r1, #85
 1537 010e 2000     		movs	r0, r4
 1538 0110 FFF7FEFF 		bl	CapSense_CSDCalibrateWidget
 1539              	.LVL167:
 1540 0114 0543     		orrs	r5, r0
 1541              	.LVL168:
1823:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1542              		.loc 1 1823 0
 1543 0116 0134     		adds	r4, r4, #1
 1544              	.LVL169:
 1545              	.L117:
1823:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1546              		.loc 1 1823 0 is_stmt 0 discriminator 1
 1547 0118 002C     		cmp	r4, #0
 1548 011a EFD0     		beq	.L118
1843:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE)) */
 1549              		.loc 1 1843 0 is_stmt 1
 1550 011c 2800     		movs	r0, r5
 1551 011e 0AB0     		add	sp, sp, #40
 1552              		@ sp needed
 1553              	.LVL170:
 1554              	.LVL171:
 1555 0120 70BD     		pop	{r4, r5, r6, pc}
 1556              	.L121:
 1557 0122 C046     		.align	2
 1558              	.L120:
 1559 0124 E5070000 		.word	2021
 1560 0128 00000000 		.word	CapSense_dsRam
 1561 012c 80BB0000 		.word	48000
 1562 0130 00000000 		.word	CapSense_dsFlash
 1563 0134 DC050000 		.word	1500
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 81


 1564 0138 00000000 		.word	CapSense_calibratedIdac
 1565 013c 00000000 		.word	CapSense_calibratedRawcount
 1566 0140 FF0F0000 		.word	4095
 1567 0144 870D0100 		.word	68999
 1568 0148 70170000 		.word	6000
 1569              		.cfi_endproc
 1570              	.LFE17:
 1571              		.size	CapSense_SsAutoTune, .-CapSense_SsAutoTune
 1572              		.section	.text.CapSense_SsInitializeSourceSenseClk,"ax",%progbits
 1573              		.align	2
 1574              		.global	CapSense_SsInitializeSourceSenseClk
 1575              		.code	16
 1576              		.thumb_func
 1577              		.type	CapSense_SsInitializeSourceSenseClk, %function
 1578              	CapSense_SsInitializeSourceSenseClk:
 1579              	.LFB18:
2186:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 wdgtIndex;
 1580              		.loc 1 2186 0
 1581              		.cfi_startproc
 1582              		@ args = 0, pretend = 0, frame = 0
 1583              		@ frame_needed = 0, uses_anonymous_args = 0
 1584 0000 10B5     		push	{r4, lr}
 1585              		.cfi_def_cfa_offset 8
 1586              		.cfi_offset 4, -8
 1587              		.cfi_offset 14, -4
 1588              	.LVL172:
2190:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1589              		.loc 1 2190 0
 1590 0002 0024     		movs	r4, #0
 1591 0004 08E0     		b	.L123
 1592              	.LVL173:
 1593              	.L124:
2192:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1594              		.loc 1 2192 0
 1595 0006 2C23     		movs	r3, #44
 1596 0008 6343     		muls	r3, r4
 1597 000a 054A     		ldr	r2, .L125
 1598 000c D318     		adds	r3, r2, r3
 1599 000e 5968     		ldr	r1, [r3, #4]
 1600              	.LVL174:
2198:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 1601              		.loc 1 2198 0
 1602 0010 2000     		movs	r0, r4
 1603 0012 FFF7FEFF 		bl	CapSense_SsSetWidgetSenseClkSrc
 1604              	.LVL175:
2190:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1605              		.loc 1 2190 0
 1606 0016 0134     		adds	r4, r4, #1
 1607              	.LVL176:
 1608              	.L123:
2190:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1609              		.loc 1 2190 0 is_stmt 0 discriminator 1
 1610 0018 002C     		cmp	r4, #0
 1611 001a F4D0     		beq	.L124
2213:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) || \
 1612              		.loc 1 2213 0 is_stmt 1
 1613              		@ sp needed
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 82


 1614              	.LVL177:
 1615 001c 10BD     		pop	{r4, pc}
 1616              	.L126:
 1617 001e C046     		.align	2
 1618              	.L125:
 1619 0020 00000000 		.word	CapSense_dsFlash
 1620              		.cfi_endproc
 1621              	.LFE18:
 1622              		.size	CapSense_SsInitializeSourceSenseClk, .-CapSense_SsInitializeSourceSenseClk
 1623              		.section	.text.CapSense_SsInitialize,"ax",%progbits
 1624              		.align	2
 1625              		.global	CapSense_SsInitialize
 1626              		.code	16
 1627              		.thumb_func
 1628              		.type	CapSense_SsInitialize, %function
 1629              	CapSense_SsInitialize:
 1630              	.LFB5:
 517:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus initStatus;
 1631              		.loc 1 517 0
 1632              		.cfi_startproc
 1633              		@ args = 0, pretend = 0, frame = 0
 1634              		@ frame_needed = 0, uses_anonymous_args = 0
 1635 0000 10B5     		push	{r4, lr}
 1636              		.cfi_def_cfa_offset 8
 1637              		.cfi_offset 4, -8
 1638              		.cfi_offset 14, -4
 1639              	.LVL178:
 556:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) ||\
 1640              		.loc 1 556 0
 1641 0002 FFF7FEFF 		bl	CapSense_SsInitializeSourceSenseClk
 1642              	.LVL179:
 561:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1643              		.loc 1 561 0
 1644 0006 FFF7FEFF 		bl	CapSense_SsSetIOsInDefaultState
 1645              	.LVL180:
 567:Generated_Source\PSoC4/CapSense_Sensing.c ****     #elif (CapSense_ENABLE == CapSense_CSX_EN)
 1646              		.loc 1 567 0
 1647 000a 0120     		movs	r0, #1
 1648 000c FFF7FEFF 		bl	CapSense_SsSwitchSensingMode
 1649              	.LVL181:
 578:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1650              		.loc 1 578 0
 1651 0010 0020     		movs	r0, #0
 1652              		@ sp needed
 1653 0012 10BD     		pop	{r4, pc}
 1654              		.cfi_endproc
 1655              	.LFE5:
 1656              		.size	CapSense_SsInitialize, .-CapSense_SsInitialize
 1657              		.section	.text.CapSense_BistDischargeExtCapacitors,"ax",%progbits
 1658              		.align	2
 1659              		.global	CapSense_BistDischargeExtCapacitors
 1660              		.code	16
 1661              		.thumb_func
 1662              		.type	CapSense_BistDischargeExtCapacitors, %function
 1663              	CapSense_BistDischargeExtCapacitors:
 1664              	.LFB26:
2802:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE) */
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 83


2803:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
2804:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2805:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2806:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSDV2)
2807:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2808:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_BistDischargeExtCapacitors
2809:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2810:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2811:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2812:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The function discharge available external capacitors.
2813:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2814:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2815:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The function discharge available external capacitors by connection them
2816:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  to GND using STRONG GPIO drive mode. Additionaly, the function disconnects 
2817:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  the capacitors from analog mux buses if connected.
2818:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Note: the function does not restore the connection to analog mux busses 
2819:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  and supposes that all the capacitors belong to a single device port.
2820:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2821:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2822:Generated_Source\PSoC4/CapSense_Sensing.c ****     void CapSense_BistDischargeExtCapacitors(void)
2823:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1665              		.loc 1 2823 0
 1666              		.cfi_startproc
 1667              		@ args = 0, pretend = 0, frame = 0
 1668              		@ frame_needed = 0, uses_anonymous_args = 0
 1669 0000 70B5     		push	{r4, r5, r6, lr}
 1670              		.cfi_def_cfa_offset 16
 1671              		.cfi_offset 4, -16
 1672              		.cfi_offset 5, -12
 1673              		.cfi_offset 6, -8
 1674              		.cfi_offset 14, -4
2824:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 newRegValue;
2825:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8  interruptState;
2826:Generated_Source\PSoC4/CapSense_Sensing.c ****         
2827:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect Ext Cap from AMUXBUS-A using HSIOM registers */
2828:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
 1675              		.loc 1 2828 0
 1676 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 1677              	.LVL182:
2829:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_EXT_CAP_HSIOM_PTR);
 1678              		.loc 1 2829 0
 1679 0006 134A     		ldr	r2, .L129
 1680 0008 1368     		ldr	r3, [r2]
 1681              	.LVL183:
2830:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_EXT_CAP_HSIOM_MASK);
 1682              		.loc 1 2830 0
 1683 000a F021     		movs	r1, #240
 1684 000c 8B43     		bics	r3, r1
 1685              	.LVL184:
2831:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_EXT_CAP_HSIOM_PTR, newRegValue);
 1686              		.loc 1 2831 0
 1687 000e 1360     		str	r3, [r2]
2832:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
 1688              		.loc 1 2832 0
 1689 0010 FFF7FEFF 		bl	CyExitCriticalSection
 1690              	.LVL185:
2833:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 84


2834:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Set output port register to 0 to connect to GND */
2835:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
 1691              		.loc 1 2835 0
 1692 0014 FFF7FEFF 		bl	CyEnterCriticalSection
 1693              	.LVL186:
2836:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_EXT_CAP_DR_PTR);
 1694              		.loc 1 2836 0
 1695 0018 0F4A     		ldr	r2, .L129+4
 1696 001a 1368     		ldr	r3, [r2]
 1697              	.LVL187:
2837:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_EXT_CAP_DR_MASK);
 1698              		.loc 1 2837 0
 1699 001c 0221     		movs	r1, #2
 1700 001e 8B43     		bics	r3, r1
 1701              	.LVL188:
2838:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_EXT_CAP_DR_PTR, newRegValue);
 1702              		.loc 1 2838 0
 1703 0020 1360     		str	r3, [r2]
2839:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
 1704              		.loc 1 2839 0
 1705 0022 FFF7FEFF 		bl	CyExitCriticalSection
 1706              	.LVL189:
2840:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2841:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Set port configuration register (drive mode) in STRONG mode */
2842:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
 1707              		.loc 1 2842 0
 1708 0026 FFF7FEFF 		bl	CyEnterCriticalSection
 1709              	.LVL190:
2843:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_EXT_CAP_PC_PTR);
 1710              		.loc 1 2843 0
 1711 002a 0C4C     		ldr	r4, .L129+8
 1712 002c 2368     		ldr	r3, [r4]
 1713              	.LVL191:
2844:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~((uint32)CapSense_EXT_CAP_PC_MASK));
 1714              		.loc 1 2844 0
 1715 002e 3825     		movs	r5, #56
 1716 0030 AB43     		bics	r3, r5
 1717              	.LVL192:
2845:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue |= (CapSense_EXT_CAP_PC_STRONG_CFG);
 1718              		.loc 1 2845 0
 1719 0032 3022     		movs	r2, #48
 1720 0034 1343     		orrs	r3, r2
 1721              	.LVL193:
2846:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_EXT_CAP_PC_PTR, newRegValue);
 1722              		.loc 1 2846 0
 1723 0036 2360     		str	r3, [r4]
2847:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
 1724              		.loc 1 2847 0
 1725 0038 FFF7FEFF 		bl	CyExitCriticalSection
 1726              	.LVL194:
2848:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2849:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Delay to discharge external capacitors */
2850:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyDelayUs(CapSense_EXT_CAP_DISCHARGE_TIME);
 1727              		.loc 1 2850 0
 1728 003c 0120     		movs	r0, #1
 1729 003e FFF7FEFF 		bl	CyDelayUs
 1730              	.LVL195:
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 85


2851:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2852:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Set port configuration register (drive mode) in STRONG mode */
2853:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
 1731              		.loc 1 2853 0
 1732 0042 FFF7FEFF 		bl	CyEnterCriticalSection
 1733              	.LVL196:
2854:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_EXT_CAP_PC_PTR);
 1734              		.loc 1 2854 0
 1735 0046 2368     		ldr	r3, [r4]
 1736              	.LVL197:
2855:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~((uint32)CapSense_EXT_CAP_PC_MASK));
 1737              		.loc 1 2855 0
 1738 0048 AB43     		bics	r3, r5
 1739              	.LVL198:
2856:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_EXT_CAP_PC_PTR, newRegValue);
 1740              		.loc 1 2856 0
 1741 004a 2360     		str	r3, [r4]
2857:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
 1742              		.loc 1 2857 0
 1743 004c FFF7FEFF 		bl	CyExitCriticalSection
 1744              	.LVL199:
2858:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 1745              		.loc 1 2858 0
 1746              		@ sp needed
 1747 0050 70BD     		pop	{r4, r5, r6, pc}
 1748              	.L130:
 1749 0052 C046     		.align	2
 1750              	.L129:
 1751 0054 00040240 		.word	1073873920
 1752 0058 00040440 		.word	1074004992
 1753 005c 08040440 		.word	1074005000
 1754              		.cfi_endproc
 1755              	.LFE26:
 1756              		.size	CapSense_BistDischargeExtCapacitors, .-CapSense_BistDischargeExtCapacitors
 1757              		.comm	CapSense_curSnsIOPtr,4,4
 1758              		.comm	CapSense_curRamSnsPtr,4,4
 1759              		.global	CapSense_requestScanAllWidget
 1760              		.global	CapSense_sensorIndex
 1761              		.global	CapSense_widgetIndex
 1762              		.global	CapSense_scanFreqIndex
 1763              		.global	CapSense_currentSenseMethod
 1764              		.section	.rodata
 1765              		.type	CapSense_scanFreqIndex, %object
 1766              		.size	CapSense_scanFreqIndex, 1
 1767              	CapSense_scanFreqIndex:
 1768 0000 00       		.space	1
 1769              		.bss
 1770              		.set	.LANCHOR0,. + 0
 1771              		.type	CapSense_currentSenseMethod, %object
 1772              		.size	CapSense_currentSenseMethod, 1
 1773              	CapSense_currentSenseMethod:
 1774 0000 00       		.space	1
 1775              		.type	CapSense_requestScanAllWidget, %object
 1776              		.size	CapSense_requestScanAllWidget, 1
 1777              	CapSense_requestScanAllWidget:
 1778 0001 00       		.space	1
 1779              		.type	CapSense_sensorIndex, %object
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 86


 1780              		.size	CapSense_sensorIndex, 1
 1781              	CapSense_sensorIndex:
 1782 0002 00       		.space	1
 1783              		.type	CapSense_widgetIndex, %object
 1784              		.size	CapSense_widgetIndex, 1
 1785              	CapSense_widgetIndex:
 1786 0003 00       		.space	1
 1787              		.text
 1788              	.Letext0:
 1789              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 1790              		.file 3 "Generated_Source\\PSoC4\\CapSense_Configuration.h"
 1791              		.file 4 "Generated_Source\\PSoC4\\CapSense_SmartSense_LL.h"
 1792              		.file 5 "Generated_Source\\PSoC4\\CapSense_Structure.h"
 1793              		.file 6 "Generated_Source\\PSoC4\\CapSense_SensingCSD_LL.h"
 1794              		.file 7 "Generated_Source\\PSoC4/CyLib.h"
 1795              		.file 8 "Generated_Source\\PSoC4\\CapSense_ISR.h"
 1796              		.section	.debug_info,"",%progbits
 1797              	.Ldebug_info0:
 1798 0000 94110000 		.4byte	0x1194
 1799 0004 0400     		.2byte	0x4
 1800 0006 00000000 		.4byte	.Ldebug_abbrev0
 1801 000a 04       		.byte	0x4
 1802 000b 01       		.uleb128 0x1
 1803 000c 93020000 		.4byte	.LASF196
 1804 0010 0C       		.byte	0xc
 1805 0011 5F090000 		.4byte	.LASF197
 1806 0015 BE000000 		.4byte	.LASF198
 1807 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1808 001d 00000000 		.4byte	0
 1809 0021 00000000 		.4byte	.Ldebug_line0
 1810 0025 02       		.uleb128 0x2
 1811 0026 01       		.byte	0x1
 1812 0027 06       		.byte	0x6
 1813 0028 A90B0000 		.4byte	.LASF0
 1814 002c 02       		.uleb128 0x2
 1815 002d 01       		.byte	0x1
 1816 002e 08       		.byte	0x8
 1817 002f 880A0000 		.4byte	.LASF1
 1818 0033 02       		.uleb128 0x2
 1819 0034 02       		.byte	0x2
 1820 0035 05       		.byte	0x5
 1821 0036 60080000 		.4byte	.LASF2
 1822 003a 02       		.uleb128 0x2
 1823 003b 02       		.byte	0x2
 1824 003c 07       		.byte	0x7
 1825 003d D10B0000 		.4byte	.LASF3
 1826 0041 02       		.uleb128 0x2
 1827 0042 04       		.byte	0x4
 1828 0043 05       		.byte	0x5
 1829 0044 98080000 		.4byte	.LASF4
 1830 0048 02       		.uleb128 0x2
 1831 0049 04       		.byte	0x4
 1832 004a 07       		.byte	0x7
 1833 004b F8090000 		.4byte	.LASF5
 1834 004f 02       		.uleb128 0x2
 1835 0050 08       		.byte	0x8
 1836 0051 05       		.byte	0x5
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 87


 1837 0052 ED050000 		.4byte	.LASF6
 1838 0056 02       		.uleb128 0x2
 1839 0057 08       		.byte	0x8
 1840 0058 07       		.byte	0x7
 1841 0059 4F030000 		.4byte	.LASF7
 1842 005d 03       		.uleb128 0x3
 1843 005e 04       		.byte	0x4
 1844 005f 05       		.byte	0x5
 1845 0060 696E7400 		.ascii	"int\000"
 1846 0064 02       		.uleb128 0x2
 1847 0065 04       		.byte	0x4
 1848 0066 07       		.byte	0x7
 1849 0067 1D010000 		.4byte	.LASF8
 1850 006b 04       		.uleb128 0x4
 1851 006c 3C0C0000 		.4byte	.LASF9
 1852 0070 02       		.byte	0x2
 1853 0071 E401     		.2byte	0x1e4
 1854 0073 2C000000 		.4byte	0x2c
 1855 0077 04       		.uleb128 0x4
 1856 0078 2A050000 		.4byte	.LASF10
 1857 007c 02       		.byte	0x2
 1858 007d E501     		.2byte	0x1e5
 1859 007f 3A000000 		.4byte	0x3a
 1860 0083 04       		.uleb128 0x4
 1861 0084 EE060000 		.4byte	.LASF11
 1862 0088 02       		.byte	0x2
 1863 0089 E601     		.2byte	0x1e6
 1864 008b 48000000 		.4byte	0x48
 1865 008f 02       		.uleb128 0x2
 1866 0090 04       		.byte	0x4
 1867 0091 04       		.byte	0x4
 1868 0092 6C020000 		.4byte	.LASF12
 1869 0096 02       		.uleb128 0x2
 1870 0097 08       		.byte	0x8
 1871 0098 04       		.byte	0x4
 1872 0099 420C0000 		.4byte	.LASF13
 1873 009d 02       		.uleb128 0x2
 1874 009e 01       		.byte	0x1
 1875 009f 08       		.byte	0x8
 1876 00a0 DF040000 		.4byte	.LASF14
 1877 00a4 04       		.uleb128 0x4
 1878 00a5 7F0A0000 		.4byte	.LASF15
 1879 00a9 02       		.byte	0x2
 1880 00aa 8602     		.2byte	0x286
 1881 00ac 48000000 		.4byte	0x48
 1882 00b0 05       		.uleb128 0x5
 1883 00b1 6B000000 		.4byte	0x6b
 1884 00b5 04       		.uleb128 0x4
 1885 00b6 AC070000 		.4byte	.LASF16
 1886 00ba 02       		.byte	0x2
 1887 00bb 9002     		.2byte	0x290
 1888 00bd C1000000 		.4byte	0xc1
 1889 00c1 05       		.uleb128 0x5
 1890 00c2 83000000 		.4byte	0x83
 1891 00c6 04       		.uleb128 0x4
 1892 00c7 BC060000 		.4byte	.LASF17
 1893 00cb 02       		.byte	0x2
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 88


 1894 00cc A002     		.2byte	0x2a0
 1895 00ce D2000000 		.4byte	0xd2
 1896 00d2 06       		.uleb128 0x6
 1897 00d3 04       		.byte	0x4
 1898 00d4 D8000000 		.4byte	0xd8
 1899 00d8 07       		.uleb128 0x7
 1900 00d9 04       		.uleb128 0x4
 1901 00da D40A0000 		.4byte	.LASF18
 1902 00de 03       		.byte	0x3
 1903 00df 2101     		.2byte	0x121
 1904 00e1 77000000 		.4byte	0x77
 1905 00e5 04       		.uleb128 0x4
 1906 00e6 7F050000 		.4byte	.LASF19
 1907 00ea 03       		.byte	0x3
 1908 00eb 2501     		.2byte	0x125
 1909 00ed 6B000000 		.4byte	0x6b
 1910 00f1 08       		.uleb128 0x8
 1911 00f2 1C       		.byte	0x1c
 1912 00f3 04       		.byte	0x4
 1913 00f4 2F       		.byte	0x2f
 1914 00f5 72010000 		.4byte	0x172
 1915 00f9 09       		.uleb128 0x9
 1916 00fa 9C070000 		.4byte	.LASF20
 1917 00fe 04       		.byte	0x4
 1918 00ff 34       		.byte	0x34
 1919 0100 77000000 		.4byte	0x77
 1920 0104 00       		.byte	0
 1921 0105 09       		.uleb128 0x9
 1922 0106 110A0000 		.4byte	.LASF21
 1923 010a 04       		.byte	0x4
 1924 010b 39       		.byte	0x39
 1925 010c 77000000 		.4byte	0x77
 1926 0110 02       		.byte	0x2
 1927 0111 09       		.uleb128 0x9
 1928 0112 70010000 		.4byte	.LASF22
 1929 0116 04       		.byte	0x4
 1930 0117 3E       		.byte	0x3e
 1931 0118 77000000 		.4byte	0x77
 1932 011c 04       		.byte	0x4
 1933 011d 09       		.uleb128 0x9
 1934 011e 3A090000 		.4byte	.LASF23
 1935 0122 04       		.byte	0x4
 1936 0123 43       		.byte	0x43
 1937 0124 77000000 		.4byte	0x77
 1938 0128 06       		.byte	0x6
 1939 0129 09       		.uleb128 0x9
 1940 012a B80A0000 		.4byte	.LASF24
 1941 012e 04       		.byte	0x4
 1942 012f 48       		.byte	0x48
 1943 0130 83000000 		.4byte	0x83
 1944 0134 08       		.byte	0x8
 1945 0135 09       		.uleb128 0x9
 1946 0136 94010000 		.4byte	.LASF25
 1947 013a 04       		.byte	0x4
 1948 013b 4D       		.byte	0x4d
 1949 013c 77000000 		.4byte	0x77
 1950 0140 0C       		.byte	0xc
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 89


 1951 0141 09       		.uleb128 0x9
 1952 0142 32040000 		.4byte	.LASF26
 1953 0146 04       		.byte	0x4
 1954 0147 52       		.byte	0x52
 1955 0148 77000000 		.4byte	0x77
 1956 014c 0E       		.byte	0xe
 1957 014d 09       		.uleb128 0x9
 1958 014e 55070000 		.4byte	.LASF27
 1959 0152 04       		.byte	0x4
 1960 0153 57       		.byte	0x57
 1961 0154 72010000 		.4byte	0x172
 1962 0158 10       		.byte	0x10
 1963 0159 09       		.uleb128 0x9
 1964 015a 49040000 		.4byte	.LASF28
 1965 015e 04       		.byte	0x4
 1966 015f 5C       		.byte	0x5c
 1967 0160 72010000 		.4byte	0x172
 1968 0164 14       		.byte	0x14
 1969 0165 09       		.uleb128 0x9
 1970 0166 1A070000 		.4byte	.LASF29
 1971 016a 04       		.byte	0x4
 1972 016b 61       		.byte	0x61
 1973 016c 6B000000 		.4byte	0x6b
 1974 0170 18       		.byte	0x18
 1975 0171 00       		.byte	0
 1976 0172 06       		.uleb128 0x6
 1977 0173 04       		.byte	0x4
 1978 0174 77000000 		.4byte	0x77
 1979 0178 0A       		.uleb128 0xa
 1980 0179 E40B0000 		.4byte	.LASF30
 1981 017d 04       		.byte	0x4
 1982 017e 63       		.byte	0x63
 1983 017f F1000000 		.4byte	0xf1
 1984 0183 08       		.uleb128 0x8
 1985 0184 0C       		.byte	0xc
 1986 0185 04       		.byte	0x4
 1987 0186 6E       		.byte	0x6e
 1988 0187 E0010000 		.4byte	0x1e0
 1989 018b 09       		.uleb128 0x9
 1990 018c 570C0000 		.4byte	.LASF31
 1991 0190 04       		.byte	0x4
 1992 0191 73       		.byte	0x73
 1993 0192 77000000 		.4byte	0x77
 1994 0196 00       		.byte	0
 1995 0197 09       		.uleb128 0x9
 1996 0198 5E0C0000 		.4byte	.LASF32
 1997 019c 04       		.byte	0x4
 1998 019d 77       		.byte	0x77
 1999 019e 77000000 		.4byte	0x77
 2000 01a2 02       		.byte	0x2
 2001 01a3 09       		.uleb128 0x9
 2002 01a4 650C0000 		.4byte	.LASF33
 2003 01a8 04       		.byte	0x4
 2004 01a9 7B       		.byte	0x7b
 2005 01aa 77000000 		.4byte	0x77
 2006 01ae 04       		.byte	0x4
 2007 01af 09       		.uleb128 0x9
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 90


 2008 01b0 6C0C0000 		.4byte	.LASF34
 2009 01b4 04       		.byte	0x4
 2010 01b5 7F       		.byte	0x7f
 2011 01b6 77000000 		.4byte	0x77
 2012 01ba 06       		.byte	0x6
 2013 01bb 09       		.uleb128 0x9
 2014 01bc 730C0000 		.4byte	.LASF35
 2015 01c0 04       		.byte	0x4
 2016 01c1 83       		.byte	0x83
 2017 01c2 77000000 		.4byte	0x77
 2018 01c6 08       		.byte	0x8
 2019 01c7 09       		.uleb128 0x9
 2020 01c8 7A0C0000 		.4byte	.LASF36
 2021 01cc 04       		.byte	0x4
 2022 01cd 87       		.byte	0x87
 2023 01ce 6B000000 		.4byte	0x6b
 2024 01d2 0A       		.byte	0xa
 2025 01d3 09       		.uleb128 0x9
 2026 01d4 810C0000 		.4byte	.LASF37
 2027 01d8 04       		.byte	0x4
 2028 01d9 8B       		.byte	0x8b
 2029 01da 6B000000 		.4byte	0x6b
 2030 01de 0B       		.byte	0xb
 2031 01df 00       		.byte	0
 2032 01e0 0A       		.uleb128 0xa
 2033 01e1 A3040000 		.4byte	.LASF38
 2034 01e5 04       		.byte	0x4
 2035 01e6 8C       		.byte	0x8c
 2036 01e7 83010000 		.4byte	0x183
 2037 01eb 0B       		.uleb128 0xb
 2038 01ec 01       		.byte	0x1
 2039 01ed 2C000000 		.4byte	0x2c
 2040 01f1 05       		.byte	0x5
 2041 01f2 70       		.byte	0x70
 2042 01f3 16020000 		.4byte	0x216
 2043 01f7 0C       		.uleb128 0xc
 2044 01f8 08010000 		.4byte	.LASF39
 2045 01fc 00       		.byte	0
 2046 01fd 0C       		.uleb128 0xc
 2047 01fe A7090000 		.4byte	.LASF40
 2048 0202 01       		.byte	0x1
 2049 0203 0C       		.uleb128 0xc
 2050 0204 BA080000 		.4byte	.LASF41
 2051 0208 02       		.byte	0x2
 2052 0209 0C       		.uleb128 0xc
 2053 020a FD0A0000 		.4byte	.LASF42
 2054 020e 03       		.byte	0x3
 2055 020f 0C       		.uleb128 0xc
 2056 0210 74070000 		.4byte	.LASF43
 2057 0214 04       		.byte	0x4
 2058 0215 00       		.byte	0
 2059 0216 0A       		.uleb128 0xa
 2060 0217 C3050000 		.4byte	.LASF44
 2061 021b 05       		.byte	0x5
 2062 021c 76       		.byte	0x76
 2063 021d EB010000 		.4byte	0x1eb
 2064 0221 08       		.uleb128 0x8
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 91


 2065 0222 12       		.byte	0x12
 2066 0223 05       		.byte	0x5
 2067 0224 8E       		.byte	0x8e
 2068 0225 BA020000 		.4byte	0x2ba
 2069 0229 09       		.uleb128 0x9
 2070 022a 54050000 		.4byte	.LASF45
 2071 022e 05       		.byte	0x5
 2072 022f 93       		.byte	0x93
 2073 0230 77000000 		.4byte	0x77
 2074 0234 00       		.byte	0
 2075 0235 09       		.uleb128 0x9
 2076 0236 6E0A0000 		.4byte	.LASF46
 2077 023a 05       		.byte	0x5
 2078 023b 98       		.byte	0x98
 2079 023c D9000000 		.4byte	0xd9
 2080 0240 02       		.byte	0x2
 2081 0241 09       		.uleb128 0x9
 2082 0242 D7040000 		.4byte	.LASF47
 2083 0246 05       		.byte	0x5
 2084 0247 9D       		.byte	0x9d
 2085 0248 6B000000 		.4byte	0x6b
 2086 024c 04       		.byte	0x4
 2087 024d 09       		.uleb128 0x9
 2088 024e A8060000 		.4byte	.LASF48
 2089 0252 05       		.byte	0x5
 2090 0253 A2       		.byte	0xa2
 2091 0254 6B000000 		.4byte	0x6b
 2092 0258 05       		.byte	0x5
 2093 0259 09       		.uleb128 0x9
 2094 025a 50040000 		.4byte	.LASF49
 2095 025e 05       		.byte	0x5
 2096 025f A8       		.byte	0xa8
 2097 0260 6B000000 		.4byte	0x6b
 2098 0264 06       		.byte	0x6
 2099 0265 09       		.uleb128 0x9
 2100 0266 1C060000 		.4byte	.LASF50
 2101 026a 05       		.byte	0x5
 2102 026b AE       		.byte	0xae
 2103 026c 6B000000 		.4byte	0x6b
 2104 0270 07       		.byte	0x7
 2105 0271 09       		.uleb128 0x9
 2106 0272 74040000 		.4byte	.LASF51
 2107 0276 05       		.byte	0x5
 2108 0277 B5       		.byte	0xb5
 2109 0278 E5000000 		.4byte	0xe5
 2110 027c 08       		.byte	0x8
 2111 027d 09       		.uleb128 0x9
 2112 027e 160A0000 		.4byte	.LASF52
 2113 0282 05       		.byte	0x5
 2114 0283 BC       		.byte	0xbc
 2115 0284 BA020000 		.4byte	0x2ba
 2116 0288 09       		.byte	0x9
 2117 0289 09       		.uleb128 0x9
 2118 028a 580B0000 		.4byte	.LASF53
 2119 028e 05       		.byte	0x5
 2120 028f C4       		.byte	0xc4
 2121 0290 77000000 		.4byte	0x77
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 92


 2122 0294 0A       		.byte	0xa
 2123 0295 09       		.uleb128 0x9
 2124 0296 11080000 		.4byte	.LASF54
 2125 029a 05       		.byte	0x5
 2126 029b C9       		.byte	0xc9
 2127 029c 6B000000 		.4byte	0x6b
 2128 02a0 0C       		.byte	0xc
 2129 02a1 09       		.uleb128 0x9
 2130 02a2 3A090000 		.4byte	.LASF23
 2131 02a6 05       		.byte	0x5
 2132 02a7 CF       		.byte	0xcf
 2133 02a8 77000000 		.4byte	0x77
 2134 02ac 0E       		.byte	0xe
 2135 02ad 09       		.uleb128 0x9
 2136 02ae 49040000 		.4byte	.LASF28
 2137 02b2 05       		.byte	0x5
 2138 02b3 D4       		.byte	0xd4
 2139 02b4 77000000 		.4byte	0x77
 2140 02b8 10       		.byte	0x10
 2141 02b9 00       		.byte	0
 2142 02ba 0D       		.uleb128 0xd
 2143 02bb 6B000000 		.4byte	0x6b
 2144 02bf CA020000 		.4byte	0x2ca
 2145 02c3 0E       		.uleb128 0xe
 2146 02c4 CA020000 		.4byte	0x2ca
 2147 02c8 00       		.byte	0
 2148 02c9 00       		.byte	0
 2149 02ca 02       		.uleb128 0x2
 2150 02cb 04       		.byte	0x4
 2151 02cc 07       		.byte	0x7
 2152 02cd E7090000 		.4byte	.LASF55
 2153 02d1 0A       		.uleb128 0xa
 2154 02d2 C9060000 		.4byte	.LASF56
 2155 02d6 05       		.byte	0x5
 2156 02d7 D5       		.byte	0xd5
 2157 02d8 21020000 		.4byte	0x221
 2158 02dc 08       		.uleb128 0x8
 2159 02dd 14       		.byte	0x14
 2160 02de 05       		.byte	0x5
 2161 02df DA       		.byte	0xda
 2162 02e0 88030000 		.4byte	0x388
 2163 02e4 09       		.uleb128 0x9
 2164 02e5 54050000 		.4byte	.LASF45
 2165 02e9 05       		.byte	0x5
 2166 02ea DF       		.byte	0xdf
 2167 02eb 77000000 		.4byte	0x77
 2168 02ef 00       		.byte	0
 2169 02f0 09       		.uleb128 0x9
 2170 02f1 6E0A0000 		.4byte	.LASF46
 2171 02f5 05       		.byte	0x5
 2172 02f6 E4       		.byte	0xe4
 2173 02f7 D9000000 		.4byte	0xd9
 2174 02fb 02       		.byte	0x2
 2175 02fc 09       		.uleb128 0x9
 2176 02fd D7040000 		.4byte	.LASF47
 2177 0301 05       		.byte	0x5
 2178 0302 E9       		.byte	0xe9
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 93


 2179 0303 6B000000 		.4byte	0x6b
 2180 0307 04       		.byte	0x4
 2181 0308 09       		.uleb128 0x9
 2182 0309 A8060000 		.4byte	.LASF48
 2183 030d 05       		.byte	0x5
 2184 030e EE       		.byte	0xee
 2185 030f 6B000000 		.4byte	0x6b
 2186 0313 05       		.byte	0x5
 2187 0314 09       		.uleb128 0x9
 2188 0315 50040000 		.4byte	.LASF49
 2189 0319 05       		.byte	0x5
 2190 031a F4       		.byte	0xf4
 2191 031b 6B000000 		.4byte	0x6b
 2192 031f 06       		.byte	0x6
 2193 0320 09       		.uleb128 0x9
 2194 0321 1C060000 		.4byte	.LASF50
 2195 0325 05       		.byte	0x5
 2196 0326 FA       		.byte	0xfa
 2197 0327 6B000000 		.4byte	0x6b
 2198 032b 07       		.byte	0x7
 2199 032c 0F       		.uleb128 0xf
 2200 032d 74040000 		.4byte	.LASF51
 2201 0331 05       		.byte	0x5
 2202 0332 0101     		.2byte	0x101
 2203 0334 E5000000 		.4byte	0xe5
 2204 0338 08       		.byte	0x8
 2205 0339 0F       		.uleb128 0xf
 2206 033a 160A0000 		.4byte	.LASF52
 2207 033e 05       		.byte	0x5
 2208 033f 0801     		.2byte	0x108
 2209 0341 BA020000 		.4byte	0x2ba
 2210 0345 09       		.byte	0x9
 2211 0346 0F       		.uleb128 0xf
 2212 0347 580B0000 		.4byte	.LASF53
 2213 034b 05       		.byte	0x5
 2214 034c 1001     		.2byte	0x110
 2215 034e 77000000 		.4byte	0x77
 2216 0352 0A       		.byte	0xa
 2217 0353 0F       		.uleb128 0xf
 2218 0354 11080000 		.4byte	.LASF54
 2219 0358 05       		.byte	0x5
 2220 0359 1501     		.2byte	0x115
 2221 035b 6B000000 		.4byte	0x6b
 2222 035f 0C       		.byte	0xc
 2223 0360 0F       		.uleb128 0xf
 2224 0361 3A090000 		.4byte	.LASF23
 2225 0365 05       		.byte	0x5
 2226 0366 1B01     		.2byte	0x11b
 2227 0368 77000000 		.4byte	0x77
 2228 036c 0E       		.byte	0xe
 2229 036d 0F       		.uleb128 0xf
 2230 036e 49040000 		.4byte	.LASF28
 2231 0372 05       		.byte	0x5
 2232 0373 2001     		.2byte	0x120
 2233 0375 77000000 		.4byte	0x77
 2234 0379 10       		.byte	0x10
 2235 037a 0F       		.uleb128 0xf
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 94


 2236 037b 050D0000 		.4byte	.LASF57
 2237 037f 05       		.byte	0x5
 2238 0380 2501     		.2byte	0x125
 2239 0382 88030000 		.4byte	0x388
 2240 0386 12       		.byte	0x12
 2241 0387 00       		.byte	0
 2242 0388 0D       		.uleb128 0xd
 2243 0389 77000000 		.4byte	0x77
 2244 038d 98030000 		.4byte	0x398
 2245 0391 0E       		.uleb128 0xe
 2246 0392 CA020000 		.4byte	0x2ca
 2247 0396 00       		.byte	0
 2248 0397 00       		.byte	0
 2249 0398 04       		.uleb128 0x4
 2250 0399 89090000 		.4byte	.LASF58
 2251 039d 05       		.byte	0x5
 2252 039e 2601     		.2byte	0x126
 2253 03a0 DC020000 		.4byte	0x2dc
 2254 03a4 10       		.uleb128 0x10
 2255 03a5 14       		.byte	0x14
 2256 03a6 05       		.byte	0x5
 2257 03a7 2C01     		.2byte	0x12c
 2258 03a9 BB030000 		.4byte	0x3bb
 2259 03ad 11       		.uleb128 0x11
 2260 03ae 736C6400 		.ascii	"sld\000"
 2261 03b2 05       		.byte	0x5
 2262 03b3 3101     		.2byte	0x131
 2263 03b5 98030000 		.4byte	0x398
 2264 03b9 00       		.byte	0
 2265 03ba 00       		.byte	0
 2266 03bb 04       		.uleb128 0x4
 2267 03bc E5010000 		.4byte	.LASF59
 2268 03c0 05       		.byte	0x5
 2269 03c1 3201     		.2byte	0x132
 2270 03c3 A4030000 		.4byte	0x3a4
 2271 03c7 10       		.uleb128 0x10
 2272 03c8 0A       		.byte	0xa
 2273 03c9 05       		.byte	0x5
 2274 03ca 3801     		.2byte	0x138
 2275 03cc 1F040000 		.4byte	0x41f
 2276 03d0 11       		.uleb128 0x11
 2277 03d1 72617700 		.ascii	"raw\000"
 2278 03d5 05       		.byte	0x5
 2279 03d6 3D01     		.2byte	0x13d
 2280 03d8 88030000 		.4byte	0x388
 2281 03dc 00       		.byte	0
 2282 03dd 0F       		.uleb128 0xf
 2283 03de CC0B0000 		.4byte	.LASF60
 2284 03e2 05       		.byte	0x5
 2285 03e3 4201     		.2byte	0x142
 2286 03e5 88030000 		.4byte	0x388
 2287 03e9 02       		.byte	0x2
 2288 03ea 0F       		.uleb128 0xf
 2289 03eb 770A0000 		.4byte	.LASF61
 2290 03ef 05       		.byte	0x5
 2291 03f0 4801     		.2byte	0x148
 2292 03f2 BA020000 		.4byte	0x2ba
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 95


 2293 03f6 04       		.byte	0x4
 2294 03f7 0F       		.uleb128 0xf
 2295 03f8 AC080000 		.4byte	.LASF62
 2296 03fc 05       		.byte	0x5
 2297 03fd 4D01     		.2byte	0x14d
 2298 03ff D9000000 		.4byte	0xd9
 2299 0403 06       		.byte	0x6
 2300 0404 0F       		.uleb128 0xf
 2301 0405 490C0000 		.4byte	.LASF63
 2302 0409 05       		.byte	0x5
 2303 040a 5201     		.2byte	0x152
 2304 040c 1F040000 		.4byte	0x41f
 2305 0410 08       		.byte	0x8
 2306 0411 0F       		.uleb128 0xf
 2307 0412 DE050000 		.4byte	.LASF64
 2308 0416 05       		.byte	0x5
 2309 0417 5701     		.2byte	0x157
 2310 0419 BA020000 		.4byte	0x2ba
 2311 041d 09       		.byte	0x9
 2312 041e 00       		.byte	0
 2313 041f 0D       		.uleb128 0xd
 2314 0420 E5000000 		.4byte	0xe5
 2315 0424 2F040000 		.4byte	0x42f
 2316 0428 0E       		.uleb128 0xe
 2317 0429 CA020000 		.4byte	0x2ca
 2318 042d 00       		.byte	0
 2319 042e 00       		.byte	0
 2320 042f 04       		.uleb128 0x4
 2321 0430 00040000 		.4byte	.LASF65
 2322 0434 05       		.byte	0x5
 2323 0435 5801     		.2byte	0x158
 2324 0437 C7030000 		.4byte	0x3c7
 2325 043b 10       		.uleb128 0x10
 2326 043c 32       		.byte	0x32
 2327 043d 05       		.byte	0x5
 2328 043e 5E01     		.2byte	0x15e
 2329 0440 52040000 		.4byte	0x452
 2330 0444 11       		.uleb128 0x11
 2331 0445 736C6400 		.ascii	"sld\000"
 2332 0449 05       		.byte	0x5
 2333 044a 6301     		.2byte	0x163
 2334 044c 52040000 		.4byte	0x452
 2335 0450 00       		.byte	0
 2336 0451 00       		.byte	0
 2337 0452 0D       		.uleb128 0xd
 2338 0453 2F040000 		.4byte	0x42f
 2339 0457 62040000 		.4byte	0x462
 2340 045b 0E       		.uleb128 0xe
 2341 045c CA020000 		.4byte	0x2ca
 2342 0460 04       		.byte	0x4
 2343 0461 00       		.byte	0
 2344 0462 04       		.uleb128 0x4
 2345 0463 0E0D0000 		.4byte	.LASF66
 2346 0467 05       		.byte	0x5
 2347 0468 6401     		.2byte	0x164
 2348 046a 3B040000 		.4byte	0x43b
 2349 046e 10       		.uleb128 0x10
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 96


 2350 046f 6C       		.byte	0x6c
 2351 0470 05       		.byte	0x5
 2352 0471 6A01     		.2byte	0x16a
 2353 0473 55050000 		.4byte	0x555
 2354 0477 0F       		.uleb128 0xf
 2355 0478 C5070000 		.4byte	.LASF67
 2356 047c 05       		.byte	0x5
 2357 047d 7101     		.2byte	0x171
 2358 047f 77000000 		.4byte	0x77
 2359 0483 00       		.byte	0
 2360 0484 0F       		.uleb128 0xf
 2361 0485 A40C0000 		.4byte	.LASF68
 2362 0489 05       		.byte	0x5
 2363 048a 7601     		.2byte	0x176
 2364 048c 77000000 		.4byte	0x77
 2365 0490 02       		.byte	0x2
 2366 0491 0F       		.uleb128 0xf
 2367 0492 36010000 		.4byte	.LASF69
 2368 0496 05       		.byte	0x5
 2369 0497 7B01     		.2byte	0x17b
 2370 0499 77000000 		.4byte	0x77
 2371 049d 04       		.byte	0x4
 2372 049e 0F       		.uleb128 0xf
 2373 049f B1080000 		.4byte	.LASF70
 2374 04a3 05       		.byte	0x5
 2375 04a4 8101     		.2byte	0x181
 2376 04a6 77000000 		.4byte	0x77
 2377 04aa 06       		.byte	0x6
 2378 04ab 0F       		.uleb128 0xf
 2379 04ac 2A010000 		.4byte	.LASF71
 2380 04b0 05       		.byte	0x5
 2381 04b1 8601     		.2byte	0x186
 2382 04b3 77000000 		.4byte	0x77
 2383 04b7 08       		.byte	0x8
 2384 04b8 0F       		.uleb128 0xf
 2385 04b9 5F050000 		.4byte	.LASF72
 2386 04bd 05       		.byte	0x5
 2387 04be 8B01     		.2byte	0x18b
 2388 04c0 C1000000 		.4byte	0xc1
 2389 04c4 0C       		.byte	0xc
 2390 04c5 0F       		.uleb128 0xf
 2391 04c6 A1080000 		.4byte	.LASF73
 2392 04ca 05       		.byte	0x5
 2393 04cb 9101     		.2byte	0x191
 2394 04cd 55050000 		.4byte	0x555
 2395 04d1 10       		.byte	0x10
 2396 04d2 0F       		.uleb128 0xf
 2397 04d3 44090000 		.4byte	.LASF74
 2398 04d7 05       		.byte	0x5
 2399 04d8 9801     		.2byte	0x198
 2400 04da 55050000 		.4byte	0x555
 2401 04de 14       		.byte	0x14
 2402 04df 0F       		.uleb128 0xf
 2403 04e0 07080000 		.4byte	.LASF75
 2404 04e4 05       		.byte	0x5
 2405 04e5 A801     		.2byte	0x1a8
 2406 04e7 BA020000 		.4byte	0x2ba
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 97


 2407 04eb 18       		.byte	0x18
 2408 04ec 0F       		.uleb128 0xf
 2409 04ed B1060000 		.4byte	.LASF76
 2410 04f1 05       		.byte	0x5
 2411 04f2 AE01     		.2byte	0x1ae
 2412 04f4 77000000 		.4byte	0x77
 2413 04f8 1A       		.byte	0x1a
 2414 04f9 0F       		.uleb128 0xf
 2415 04fa F6030000 		.4byte	.LASF77
 2416 04fe 05       		.byte	0x5
 2417 04ff B301     		.2byte	0x1b3
 2418 0501 6B000000 		.4byte	0x6b
 2419 0505 1C       		.byte	0x1c
 2420 0506 0F       		.uleb128 0xf
 2421 0507 3F060000 		.4byte	.LASF78
 2422 050b 05       		.byte	0x5
 2423 050c B801     		.2byte	0x1b8
 2424 050e BB030000 		.4byte	0x3bb
 2425 0512 1E       		.byte	0x1e
 2426 0513 0F       		.uleb128 0xf
 2427 0514 47030000 		.4byte	.LASF79
 2428 0518 05       		.byte	0x5
 2429 0519 BD01     		.2byte	0x1bd
 2430 051b 62040000 		.4byte	0x462
 2431 051f 32       		.byte	0x32
 2432 0520 0F       		.uleb128 0xf
 2433 0521 AE000000 		.4byte	.LASF80
 2434 0525 05       		.byte	0x5
 2435 0526 C201     		.2byte	0x1c2
 2436 0528 6B000000 		.4byte	0x6b
 2437 052c 64       		.byte	0x64
 2438 052d 0F       		.uleb128 0xf
 2439 052e 94030000 		.4byte	.LASF81
 2440 0532 05       		.byte	0x5
 2441 0533 C701     		.2byte	0x1c7
 2442 0535 6B000000 		.4byte	0x6b
 2443 0539 65       		.byte	0x65
 2444 053a 0F       		.uleb128 0xf
 2445 053b B2070000 		.4byte	.LASF82
 2446 053f 05       		.byte	0x5
 2447 0540 CC01     		.2byte	0x1cc
 2448 0542 77000000 		.4byte	0x77
 2449 0546 66       		.byte	0x66
 2450 0547 0F       		.uleb128 0xf
 2451 0548 98060000 		.4byte	.LASF83
 2452 054c 05       		.byte	0x5
 2453 054d D101     		.2byte	0x1d1
 2454 054f 88030000 		.4byte	0x388
 2455 0553 68       		.byte	0x68
 2456 0554 00       		.byte	0
 2457 0555 0D       		.uleb128 0xd
 2458 0556 83000000 		.4byte	0x83
 2459 055a 65050000 		.4byte	0x565
 2460 055e 0E       		.uleb128 0xe
 2461 055f CA020000 		.4byte	0x2ca
 2462 0563 00       		.byte	0
 2463 0564 00       		.byte	0
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 98


 2464 0565 04       		.uleb128 0x4
 2465 0566 6A080000 		.4byte	.LASF84
 2466 056a 05       		.byte	0x5
 2467 056b D201     		.2byte	0x1d2
 2468 056d 6E040000 		.4byte	0x46e
 2469 0571 10       		.uleb128 0x10
 2470 0572 1C       		.byte	0x1c
 2471 0573 05       		.byte	0x5
 2472 0574 D801     		.2byte	0x1d8
 2473 0576 F0050000 		.4byte	0x5f0
 2474 057a 0F       		.uleb128 0xf
 2475 057b E5060000 		.4byte	.LASF85
 2476 057f 05       		.byte	0x5
 2477 0580 DD01     		.2byte	0x1dd
 2478 0582 F0050000 		.4byte	0x5f0
 2479 0586 00       		.byte	0
 2480 0587 0F       		.uleb128 0xf
 2481 0588 E7050000 		.4byte	.LASF86
 2482 058c 05       		.byte	0x5
 2483 058d E201     		.2byte	0x1e2
 2484 058f F0050000 		.4byte	0x5f0
 2485 0593 04       		.byte	0x4
 2486 0594 0F       		.uleb128 0xf
 2487 0595 3C040000 		.4byte	.LASF87
 2488 0599 05       		.byte	0x5
 2489 059a E701     		.2byte	0x1e7
 2490 059c F0050000 		.4byte	0x5f0
 2491 05a0 08       		.byte	0x8
 2492 05a1 0F       		.uleb128 0xf
 2493 05a2 D6080000 		.4byte	.LASF88
 2494 05a6 05       		.byte	0x5
 2495 05a7 EC01     		.2byte	0x1ec
 2496 05a9 F0050000 		.4byte	0x5f0
 2497 05ad 0C       		.byte	0xc
 2498 05ae 0F       		.uleb128 0xf
 2499 05af 420B0000 		.4byte	.LASF89
 2500 05b3 05       		.byte	0x5
 2501 05b4 F101     		.2byte	0x1f1
 2502 05b6 83000000 		.4byte	0x83
 2503 05ba 10       		.byte	0x10
 2504 05bb 0F       		.uleb128 0xf
 2505 05bc 3E010000 		.4byte	.LASF90
 2506 05c0 05       		.byte	0x5
 2507 05c1 F601     		.2byte	0x1f6
 2508 05c3 83000000 		.4byte	0x83
 2509 05c7 14       		.byte	0x14
 2510 05c8 0F       		.uleb128 0xf
 2511 05c9 1F050000 		.4byte	.LASF91
 2512 05cd 05       		.byte	0x5
 2513 05ce FB01     		.2byte	0x1fb
 2514 05d0 6B000000 		.4byte	0x6b
 2515 05d4 18       		.byte	0x18
 2516 05d5 0F       		.uleb128 0xf
 2517 05d6 F0090000 		.4byte	.LASF92
 2518 05da 05       		.byte	0x5
 2519 05db 0002     		.2byte	0x200
 2520 05dd 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 99


 2521 05e1 19       		.byte	0x19
 2522 05e2 0F       		.uleb128 0xf
 2523 05e3 72020000 		.4byte	.LASF93
 2524 05e7 05       		.byte	0x5
 2525 05e8 0502     		.2byte	0x205
 2526 05ea 6B000000 		.4byte	0x6b
 2527 05ee 1A       		.byte	0x1a
 2528 05ef 00       		.byte	0
 2529 05f0 06       		.uleb128 0x6
 2530 05f1 04       		.byte	0x4
 2531 05f2 B5000000 		.4byte	0xb5
 2532 05f6 04       		.uleb128 0x4
 2533 05f7 7B030000 		.4byte	.LASF94
 2534 05fb 05       		.byte	0x5
 2535 05fc 0602     		.2byte	0x206
 2536 05fe 71050000 		.4byte	0x571
 2537 0602 10       		.uleb128 0x10
 2538 0603 2C       		.byte	0x2c
 2539 0604 05       		.byte	0x5
 2540 0605 3902     		.2byte	0x239
 2541 0607 B5060000 		.4byte	0x6b5
 2542 060b 0F       		.uleb128 0xf
 2543 060c 180C0000 		.4byte	.LASF95
 2544 0610 05       		.byte	0x5
 2545 0611 4202     		.2byte	0x242
 2546 0613 B5060000 		.4byte	0x6b5
 2547 0617 00       		.byte	0
 2548 0618 0F       		.uleb128 0xf
 2549 0619 C80A0000 		.4byte	.LASF96
 2550 061d 05       		.byte	0x5
 2551 061e 4902     		.2byte	0x249
 2552 0620 BC060000 		.4byte	0x6bc
 2553 0624 04       		.byte	0x4
 2554 0625 0F       		.uleb128 0xf
 2555 0626 CE070000 		.4byte	.LASF97
 2556 062a 05       		.byte	0x5
 2557 062b 4F02     		.2byte	0x24f
 2558 062d BE060000 		.4byte	0x6be
 2559 0631 08       		.byte	0x8
 2560 0632 0F       		.uleb128 0xf
 2561 0633 F5060000 		.4byte	.LASF98
 2562 0637 05       		.byte	0x5
 2563 0638 5502     		.2byte	0x255
 2564 063a BC060000 		.4byte	0x6bc
 2565 063e 0C       		.byte	0xc
 2566 063f 0F       		.uleb128 0xf
 2567 0640 330A0000 		.4byte	.LASF99
 2568 0644 05       		.byte	0x5
 2569 0645 5C02     		.2byte	0x25c
 2570 0647 C4060000 		.4byte	0x6c4
 2571 064b 10       		.byte	0x10
 2572 064c 0F       		.uleb128 0xf
 2573 064d AB0A0000 		.4byte	.LASF100
 2574 0651 05       		.byte	0x5
 2575 0652 6102     		.2byte	0x261
 2576 0654 83000000 		.4byte	0x83
 2577 0658 14       		.byte	0x14
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 100


 2578 0659 0F       		.uleb128 0xf
 2579 065a 97040000 		.4byte	.LASF101
 2580 065e 05       		.byte	0x5
 2581 065f 6802     		.2byte	0x268
 2582 0661 77000000 		.4byte	0x77
 2583 0665 18       		.byte	0x18
 2584 0666 0F       		.uleb128 0xf
 2585 0667 B3030000 		.4byte	.LASF102
 2586 066b 05       		.byte	0x5
 2587 066c 6F02     		.2byte	0x26f
 2588 066e 6B000000 		.4byte	0x6b
 2589 0672 1A       		.byte	0x1a
 2590 0673 0F       		.uleb128 0xf
 2591 0674 FB050000 		.4byte	.LASF103
 2592 0678 05       		.byte	0x5
 2593 0679 7902     		.2byte	0x279
 2594 067b 6B000000 		.4byte	0x6b
 2595 067f 1B       		.byte	0x1b
 2596 0680 0F       		.uleb128 0xf
 2597 0681 3B080000 		.4byte	.LASF104
 2598 0685 05       		.byte	0x5
 2599 0686 7E02     		.2byte	0x27e
 2600 0688 77000000 		.4byte	0x77
 2601 068c 1C       		.byte	0x1c
 2602 068d 0F       		.uleb128 0xf
 2603 068e 5A0A0000 		.4byte	.LASF105
 2604 0692 05       		.byte	0x5
 2605 0693 8702     		.2byte	0x287
 2606 0695 83000000 		.4byte	0x83
 2607 0699 20       		.byte	0x20
 2608 069a 0F       		.uleb128 0xf
 2609 069b A4030000 		.4byte	.LASF106
 2610 069f 05       		.byte	0x5
 2611 06a0 8F02     		.2byte	0x28f
 2612 06a2 CA060000 		.4byte	0x6ca
 2613 06a6 24       		.byte	0x24
 2614 06a7 0F       		.uleb128 0xf
 2615 06a8 01020000 		.4byte	.LASF107
 2616 06ac 05       		.byte	0x5
 2617 06ad 9402     		.2byte	0x294
 2618 06af 6B000000 		.4byte	0x6b
 2619 06b3 28       		.byte	0x28
 2620 06b4 00       		.byte	0
 2621 06b5 06       		.uleb128 0x6
 2622 06b6 04       		.byte	0x4
 2623 06b7 BB060000 		.4byte	0x6bb
 2624 06bb 12       		.uleb128 0x12
 2625 06bc 13       		.uleb128 0x13
 2626 06bd 04       		.byte	0x4
 2627 06be 06       		.uleb128 0x6
 2628 06bf 04       		.byte	0x4
 2629 06c0 2F040000 		.4byte	0x42f
 2630 06c4 06       		.uleb128 0x6
 2631 06c5 04       		.byte	0x4
 2632 06c6 6B000000 		.4byte	0x6b
 2633 06ca 06       		.uleb128 0x6
 2634 06cb 04       		.byte	0x4
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 101


 2635 06cc E0010000 		.4byte	0x1e0
 2636 06d0 04       		.uleb128 0x4
 2637 06d1 5B040000 		.4byte	.LASF108
 2638 06d5 05       		.byte	0x5
 2639 06d6 9502     		.2byte	0x295
 2640 06d8 02060000 		.4byte	0x602
 2641 06dc 10       		.uleb128 0x10
 2642 06dd 2C       		.byte	0x2c
 2643 06de 05       		.byte	0x5
 2644 06df 9B02     		.2byte	0x29b
 2645 06e1 F3060000 		.4byte	0x6f3
 2646 06e5 0F       		.uleb128 0xf
 2647 06e6 2B0D0000 		.4byte	.LASF109
 2648 06ea 05       		.byte	0x5
 2649 06eb A002     		.2byte	0x2a0
 2650 06ed F3060000 		.4byte	0x6f3
 2651 06f1 00       		.byte	0
 2652 06f2 00       		.byte	0
 2653 06f3 0D       		.uleb128 0xd
 2654 06f4 D0060000 		.4byte	0x6d0
 2655 06f8 03070000 		.4byte	0x703
 2656 06fc 0E       		.uleb128 0xe
 2657 06fd CA020000 		.4byte	0x2ca
 2658 0701 00       		.byte	0
 2659 0702 00       		.byte	0
 2660 0703 04       		.uleb128 0x4
 2661 0704 65060000 		.4byte	.LASF110
 2662 0708 05       		.byte	0x5
 2663 0709 A102     		.2byte	0x2a1
 2664 070b DC060000 		.4byte	0x6dc
 2665 070f 02       		.uleb128 0x2
 2666 0710 08       		.byte	0x8
 2667 0711 04       		.byte	0x4
 2668 0712 90070000 		.4byte	.LASF111
 2669 0716 14       		.uleb128 0x14
 2670 0717 7F040000 		.4byte	.LASF114
 2671 071b 01       		.byte	0x1
 2672 071c 6009     		.2byte	0x960
 2673 071e 6B000000 		.4byte	0x6b
 2674 0722 00000000 		.4byte	.LFB20
 2675 0726 84000000 		.4byte	.LFE20-.LFB20
 2676 072a 01       		.uleb128 0x1
 2677 072b 9C       		.byte	0x9c
 2678 072c 61070000 		.4byte	0x761
 2679 0730 15       		.uleb128 0x15
 2680 0731 880C0000 		.4byte	.LASF112
 2681 0735 01       		.byte	0x1
 2682 0736 6009     		.2byte	0x960
 2683 0738 83000000 		.4byte	0x83
 2684 073c 00000000 		.4byte	.LLST0
 2685 0740 15       		.uleb128 0x15
 2686 0741 31050000 		.4byte	.LASF113
 2687 0745 01       		.byte	0x1
 2688 0746 6009     		.2byte	0x960
 2689 0748 83000000 		.4byte	0x83
 2690 074c 2C000000 		.4byte	.LLST1
 2691 0750 16       		.uleb128 0x16
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 102


 2692 0751 BC030000 		.4byte	.LASF116
 2693 0755 01       		.byte	0x1
 2694 0756 6209     		.2byte	0x962
 2695 0758 6B000000 		.4byte	0x6b
 2696 075c 58000000 		.4byte	.LLST2
 2697 0760 00       		.byte	0
 2698 0761 14       		.uleb128 0x14
 2699 0762 53020000 		.4byte	.LASF115
 2700 0766 01       		.byte	0x1
 2701 0767 AC09     		.2byte	0x9ac
 2702 0769 6B000000 		.4byte	0x6b
 2703 076d 00000000 		.4byte	.LFB21
 2704 0771 42000000 		.4byte	.LFE21-.LFB21
 2705 0775 01       		.uleb128 0x1
 2706 0776 9C       		.byte	0x9c
 2707 0777 CC070000 		.4byte	0x7cc
 2708 077b 15       		.uleb128 0x15
 2709 077c 880C0000 		.4byte	.LASF112
 2710 0780 01       		.byte	0x1
 2711 0781 AC09     		.2byte	0x9ac
 2712 0783 83000000 		.4byte	0x83
 2713 0787 77000000 		.4byte	.LLST3
 2714 078b 15       		.uleb128 0x15
 2715 078c BC030000 		.4byte	.LASF116
 2716 0790 01       		.byte	0x1
 2717 0791 AC09     		.2byte	0x9ac
 2718 0793 6B000000 		.4byte	0x6b
 2719 0797 BC000000 		.4byte	.LLST4
 2720 079b 16       		.uleb128 0x16
 2721 079c 66010000 		.4byte	.LASF117
 2722 07a0 01       		.byte	0x1
 2723 07a1 AE09     		.2byte	0x9ae
 2724 07a3 83000000 		.4byte	0x83
 2725 07a7 F6000000 		.4byte	.LLST5
 2726 07ab 16       		.uleb128 0x16
 2727 07ac A5010000 		.4byte	.LASF118
 2728 07b0 01       		.byte	0x1
 2729 07b1 AF09     		.2byte	0x9af
 2730 07b3 83000000 		.4byte	0x83
 2731 07b7 20010000 		.4byte	.LLST6
 2732 07bb 16       		.uleb128 0x16
 2733 07bc 250C0000 		.4byte	.LASF119
 2734 07c0 01       		.byte	0x1
 2735 07c1 B009     		.2byte	0x9b0
 2736 07c3 83000000 		.4byte	0x83
 2737 07c7 49010000 		.4byte	.LLST7
 2738 07cb 00       		.byte	0
 2739 07cc 17       		.uleb128 0x17
 2740 07cd 3B000000 		.4byte	.LASF160
 2741 07d1 01       		.byte	0x1
 2742 07d2 FA02     		.2byte	0x2fa
 2743 07d4 00000000 		.4byte	.LFB7
 2744 07d8 24000000 		.4byte	.LFE7-.LFB7
 2745 07dc 01       		.uleb128 0x1
 2746 07dd 9C       		.byte	0x9c
 2747 07de FC070000 		.4byte	0x7fc
 2748 07e2 16       		.uleb128 0x16
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 103


 2749 07e3 300C0000 		.4byte	.LASF120
 2750 07e7 01       		.byte	0x1
 2751 07e8 FC02     		.2byte	0x2fc
 2752 07ea 83000000 		.4byte	0x83
 2753 07ee 5C010000 		.4byte	.LLST8
 2754 07f2 18       		.uleb128 0x18
 2755 07f3 1A000000 		.4byte	.LVL29
 2756 07f7 F5100000 		.4byte	0x10f5
 2757 07fb 00       		.byte	0
 2758 07fc 19       		.uleb128 0x19
 2759 07fd B4010000 		.4byte	.LASF199
 2760 0801 01       		.byte	0x1
 2761 0802 E9       		.byte	0xe9
 2762 0803 83000000 		.4byte	0x83
 2763 0807 00000000 		.4byte	.LFB1
 2764 080b 10000000 		.4byte	.LFE1-.LFB1
 2765 080f 01       		.uleb128 0x1
 2766 0810 9C       		.byte	0x9c
 2767 0811 1A       		.uleb128 0x1a
 2768 0812 DC080000 		.4byte	.LASF123
 2769 0816 01       		.byte	0x1
 2770 0817 1D01     		.2byte	0x11d
 2771 0819 A4000000 		.4byte	0xa4
 2772 081d 00000000 		.4byte	.LFB2
 2773 0821 40000000 		.4byte	.LFE2-.LFB2
 2774 0825 01       		.uleb128 0x1
 2775 0826 9C       		.byte	0x9c
 2776 0827 55080000 		.4byte	0x855
 2777 082b 15       		.uleb128 0x15
 2778 082c BA0C0000 		.4byte	.LASF121
 2779 0830 01       		.byte	0x1
 2780 0831 1D01     		.2byte	0x11d
 2781 0833 83000000 		.4byte	0x83
 2782 0837 6F010000 		.4byte	.LLST9
 2783 083b 16       		.uleb128 0x16
 2784 083c AD0C0000 		.4byte	.LASF122
 2785 0840 01       		.byte	0x1
 2786 0841 1F01     		.2byte	0x11f
 2787 0843 A4000000 		.4byte	0xa4
 2788 0847 90010000 		.4byte	.LLST10
 2789 084b 18       		.uleb128 0x18
 2790 084c 38000000 		.4byte	.LVL32
 2791 0850 01110000 		.4byte	0x1101
 2792 0854 00       		.byte	0
 2793 0855 1A       		.uleb128 0x1a
 2794 0856 7B060000 		.4byte	.LASF124
 2795 085a 01       		.byte	0x1
 2796 085b 7001     		.2byte	0x170
 2797 085d A4000000 		.4byte	0xa4
 2798 0861 00000000 		.4byte	.LFB3
 2799 0865 2C000000 		.4byte	.LFE3-.LFB3
 2800 0869 01       		.uleb128 0x1
 2801 086a 9C       		.byte	0x9c
 2802 086b 89080000 		.4byte	0x889
 2803 086f 16       		.uleb128 0x16
 2804 0870 30000000 		.4byte	.LASF125
 2805 0874 01       		.byte	0x1
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 104


 2806 0875 7201     		.2byte	0x172
 2807 0877 A4000000 		.4byte	0xa4
 2808 087b AE010000 		.4byte	.LLST11
 2809 087f 18       		.uleb128 0x18
 2810 0880 16000000 		.4byte	.LVL35
 2811 0884 0D110000 		.4byte	0x110d
 2812 0888 00       		.byte	0
 2813 0889 1A       		.uleb128 0x1a
 2814 088a 2A0B0000 		.4byte	.LASF126
 2815 088e 01       		.byte	0x1
 2816 088f AE01     		.2byte	0x1ae
 2817 0891 A4000000 		.4byte	0xa4
 2818 0895 00000000 		.4byte	.LFB4
 2819 0899 3C000000 		.4byte	.LFE4-.LFB4
 2820 089d 01       		.uleb128 0x1
 2821 089e 9C       		.byte	0x9c
 2822 089f E1080000 		.4byte	0x8e1
 2823 08a3 16       		.uleb128 0x16
 2824 08a4 30000000 		.4byte	.LASF125
 2825 08a8 01       		.byte	0x1
 2826 08a9 B001     		.2byte	0x1b0
 2827 08ab A4000000 		.4byte	0xa4
 2828 08af CD010000 		.4byte	.LLST12
 2829 08b3 16       		.uleb128 0x16
 2830 08b4 61070000 		.4byte	.LASF127
 2831 08b8 01       		.byte	0x1
 2832 08b9 B201     		.2byte	0x1b2
 2833 08bb 83000000 		.4byte	0x83
 2834 08bf 1B020000 		.4byte	.LLST13
 2835 08c3 1B       		.uleb128 0x1b
 2836 08c4 18000000 		.4byte	.LVL40
 2837 08c8 11080000 		.4byte	0x811
 2838 08cc D7080000 		.4byte	0x8d7
 2839 08d0 1C       		.uleb128 0x1c
 2840 08d1 01       		.uleb128 0x1
 2841 08d2 50       		.byte	0x50
 2842 08d3 02       		.uleb128 0x2
 2843 08d4 74       		.byte	0x74
 2844 08d5 00       		.sleb128 0
 2845 08d6 00       		.byte	0
 2846 08d7 18       		.uleb128 0x18
 2847 08d8 26000000 		.4byte	.LVL41
 2848 08dc 55080000 		.4byte	0x855
 2849 08e0 00       		.byte	0
 2850 08e1 1D       		.uleb128 0x1d
 2851 08e2 960A0000 		.4byte	.LASF134
 2852 08e6 01       		.byte	0x1
 2853 08e7 8902     		.2byte	0x289
 2854 08e9 00000000 		.4byte	.LFB6
 2855 08ed 9C000000 		.4byte	.LFE6-.LFB6
 2856 08f1 01       		.uleb128 0x1
 2857 08f2 9C       		.byte	0x9c
 2858 08f3 AB090000 		.4byte	0x9ab
 2859 08f7 15       		.uleb128 0x15
 2860 08f8 BA0C0000 		.4byte	.LASF121
 2861 08fc 01       		.byte	0x1
 2862 08fd 8902     		.2byte	0x289
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 105


 2863 08ff 83000000 		.4byte	0x83
 2864 0903 2E020000 		.4byte	.LLST14
 2865 0907 15       		.uleb128 0x15
 2866 0908 22000000 		.4byte	.LASF128
 2867 090c 01       		.byte	0x1
 2868 090d 8902     		.2byte	0x289
 2869 090f 83000000 		.4byte	0x83
 2870 0913 4F020000 		.4byte	.LLST15
 2871 0917 15       		.uleb128 0x15
 2872 0918 1A0B0000 		.4byte	.LASF129
 2873 091c 01       		.byte	0x1
 2874 091d 8902     		.2byte	0x289
 2875 091f 83000000 		.4byte	0x83
 2876 0923 70020000 		.4byte	.LLST16
 2877 0927 1E       		.uleb128 0x1e
 2878 0928 19020000 		.4byte	.LASF130
 2879 092c 01       		.byte	0x1
 2880 092d 8B02     		.2byte	0x28b
 2881 092f 83000000 		.4byte	0x83
 2882 0933 01       		.byte	0x1
 2883 0934 16       		.uleb128 0x16
 2884 0935 200B0000 		.4byte	.LASF131
 2885 0939 01       		.byte	0x1
 2886 093a 8C02     		.2byte	0x28c
 2887 093c 83000000 		.4byte	0x83
 2888 0940 9C020000 		.4byte	.LLST17
 2889 0944 16       		.uleb128 0x16
 2890 0945 57010000 		.4byte	.LASF132
 2891 0949 01       		.byte	0x1
 2892 094a 8D02     		.2byte	0x28d
 2893 094c 6B000000 		.4byte	0x6b
 2894 0950 BB020000 		.4byte	.LLST18
 2895 0954 16       		.uleb128 0x16
 2896 0955 C20A0000 		.4byte	.LASF133
 2897 0959 01       		.byte	0x1
 2898 095a 8E02     		.2byte	0x28e
 2899 095c AB090000 		.4byte	0x9ab
 2900 0960 E4020000 		.4byte	.LLST19
 2901 0964 18       		.uleb128 0x18
 2902 0965 1C000000 		.4byte	.LVL50
 2903 0969 19110000 		.4byte	0x1119
 2904 096d 18       		.uleb128 0x18
 2905 096e 3C000000 		.4byte	.LVL51
 2906 0972 24110000 		.4byte	0x1124
 2907 0976 18       		.uleb128 0x18
 2908 0977 4E000000 		.4byte	.LVL52
 2909 097b 19110000 		.4byte	0x1119
 2910 097f 18       		.uleb128 0x18
 2911 0980 6E000000 		.4byte	.LVL53
 2912 0984 24110000 		.4byte	0x1124
 2913 0988 18       		.uleb128 0x18
 2914 0989 74000000 		.4byte	.LVL54
 2915 098d 19110000 		.4byte	0x1119
 2916 0991 18       		.uleb128 0x18
 2917 0992 86000000 		.4byte	.LVL55
 2918 0996 24110000 		.4byte	0x1124
 2919 099a 1F       		.uleb128 0x1f
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 106


 2920 099b 8E000000 		.4byte	.LVL56
 2921 099f 2F110000 		.4byte	0x112f
 2922 09a3 1C       		.uleb128 0x1c
 2923 09a4 01       		.uleb128 0x1
 2924 09a5 50       		.byte	0x50
 2925 09a6 02       		.uleb128 0x2
 2926 09a7 74       		.byte	0x74
 2927 09a8 00       		.sleb128 0
 2928 09a9 00       		.byte	0
 2929 09aa 00       		.byte	0
 2930 09ab 06       		.uleb128 0x6
 2931 09ac 04       		.byte	0x4
 2932 09ad B1090000 		.4byte	0x9b1
 2933 09b1 20       		.uleb128 0x20
 2934 09b2 F6050000 		.4byte	0x5f6
 2935 09b6 1D       		.uleb128 0x1d
 2936 09b7 5F0B0000 		.4byte	.LASF135
 2937 09bb 01       		.byte	0x1
 2938 09bc 8503     		.2byte	0x385
 2939 09be 00000000 		.4byte	.LFB8
 2940 09c2 3C000000 		.4byte	.LFE8-.LFB8
 2941 09c6 01       		.uleb128 0x1
 2942 09c7 9C       		.byte	0x9c
 2943 09c8 EF090000 		.4byte	0x9ef
 2944 09cc 15       		.uleb128 0x15
 2945 09cd AF010000 		.4byte	.LASF136
 2946 09d1 01       		.byte	0x1
 2947 09d2 8503     		.2byte	0x385
 2948 09d4 16020000 		.4byte	0x216
 2949 09d8 F7020000 		.4byte	.LLST20
 2950 09dc 18       		.uleb128 0x18
 2951 09dd 14000000 		.4byte	.LVL63
 2952 09e1 CC070000 		.4byte	0x7cc
 2953 09e5 18       		.uleb128 0x18
 2954 09e6 1C000000 		.4byte	.LVL64
 2955 09ea 3B110000 		.4byte	0x113b
 2956 09ee 00       		.byte	0
 2957 09ef 1D       		.uleb128 0x1d
 2958 09f0 55000000 		.4byte	.LASF137
 2959 09f4 01       		.byte	0x1
 2960 09f5 E803     		.2byte	0x3e8
 2961 09f7 00000000 		.4byte	.LFB9
 2962 09fb 40000000 		.4byte	.LFE9-.LFB9
 2963 09ff 01       		.uleb128 0x1
 2964 0a00 9C       		.byte	0x9c
 2965 0a01 360A0000 		.4byte	0xa36
 2966 0a05 16       		.uleb128 0x16
 2967 0a06 C20A0000 		.4byte	.LASF133
 2968 0a0a 01       		.byte	0x1
 2969 0a0b EA03     		.2byte	0x3ea
 2970 0a0d AB090000 		.4byte	0x9ab
 2971 0a11 18030000 		.4byte	.LLST21
 2972 0a15 16       		.uleb128 0x16
 2973 0a16 49020000 		.4byte	.LASF138
 2974 0a1a 01       		.byte	0x1
 2975 0a1b EB03     		.2byte	0x3eb
 2976 0a1d 83000000 		.4byte	0x83
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 107


 2977 0a21 2B030000 		.4byte	.LLST22
 2978 0a25 16       		.uleb128 0x16
 2979 0a26 4E010000 		.4byte	.LASF139
 2980 0a2a 01       		.byte	0x1
 2981 0a2b EC03     		.2byte	0x3ec
 2982 0a2d 83000000 		.4byte	0x83
 2983 0a31 4A030000 		.4byte	.LLST23
 2984 0a35 00       		.byte	0
 2985 0a36 21       		.uleb128 0x21
 2986 0a37 FA0B0000 		.4byte	.LASF200
 2987 0a3b 01       		.byte	0x1
 2988 0a3c 6204     		.2byte	0x462
 2989 0a3e 00000000 		.4byte	.LFB10
 2990 0a42 02000000 		.4byte	.LFE10-.LFB10
 2991 0a46 01       		.uleb128 0x1
 2992 0a47 9C       		.byte	0x9c
 2993 0a48 1D       		.uleb128 0x1d
 2994 0a49 47080000 		.4byte	.LASF140
 2995 0a4d 01       		.byte	0x1
 2996 0a4e AF04     		.2byte	0x4af
 2997 0a50 00000000 		.4byte	.LFB11
 2998 0a54 08000000 		.4byte	.LFE11-.LFB11
 2999 0a58 01       		.uleb128 0x1
 3000 0a59 9C       		.byte	0x9c
 3001 0a5a 800A0000 		.4byte	0xa80
 3002 0a5e 15       		.uleb128 0x15
 3003 0a5f 27060000 		.4byte	.LASF141
 3004 0a63 01       		.byte	0x1
 3005 0a64 AF04     		.2byte	0x4af
 3006 0a66 C6000000 		.4byte	0xc6
 3007 0a6a 73030000 		.4byte	.LLST24
 3008 0a6e 1F       		.uleb128 0x1f
 3009 0a6f 06000000 		.4byte	.LVL78
 3010 0a73 47110000 		.4byte	0x1147
 3011 0a77 1C       		.uleb128 0x1c
 3012 0a78 01       		.uleb128 0x1
 3013 0a79 50       		.byte	0x50
 3014 0a7a 03       		.uleb128 0x3
 3015 0a7b F3       		.byte	0xf3
 3016 0a7c 01       		.uleb128 0x1
 3017 0a7d 50       		.byte	0x50
 3018 0a7e 00       		.byte	0
 3019 0a7f 00       		.byte	0
 3020 0a80 1D       		.uleb128 0x1d
 3021 0a81 C4010000 		.4byte	.LASF142
 3022 0a85 01       		.byte	0x1
 3023 0a86 C604     		.2byte	0x4c6
 3024 0a88 00000000 		.4byte	.LFB12
 3025 0a8c 30000000 		.4byte	.LFE12-.LFB12
 3026 0a90 01       		.uleb128 0x1
 3027 0a91 9C       		.byte	0x9c
 3028 0a92 A70A0000 		.4byte	0xaa7
 3029 0a96 15       		.uleb128 0x15
 3030 0a97 42040000 		.4byte	.LASF143
 3031 0a9b 01       		.byte	0x1
 3032 0a9c C604     		.2byte	0x4c6
 3033 0a9e 83000000 		.4byte	0x83
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 108


 3034 0aa2 94030000 		.4byte	.LLST25
 3035 0aa6 00       		.byte	0
 3036 0aa7 1D       		.uleb128 0x1d
 3037 0aa8 9A050000 		.4byte	.LASF144
 3038 0aac 01       		.byte	0x1
 3039 0aad 0A05     		.2byte	0x50a
 3040 0aaf 00000000 		.4byte	.LFB13
 3041 0ab3 14000000 		.4byte	.LFE13-.LFB13
 3042 0ab7 01       		.uleb128 0x1
 3043 0ab8 9C       		.byte	0x9c
 3044 0ab9 DE0A0000 		.4byte	0xade
 3045 0abd 15       		.uleb128 0x15
 3046 0abe 580B0000 		.4byte	.LASF53
 3047 0ac2 01       		.byte	0x1
 3048 0ac3 0A05     		.2byte	0x50a
 3049 0ac5 83000000 		.4byte	0x83
 3050 0ac9 C2030000 		.4byte	.LLST26
 3051 0acd 16       		.uleb128 0x16
 3052 0ace 300C0000 		.4byte	.LASF120
 3053 0ad2 01       		.byte	0x1
 3054 0ad3 0D05     		.2byte	0x50d
 3055 0ad5 83000000 		.4byte	0x83
 3056 0ad9 F0030000 		.4byte	.LLST27
 3057 0add 00       		.byte	0
 3058 0ade 1D       		.uleb128 0x1d
 3059 0adf 1F070000 		.4byte	.LASF145
 3060 0ae3 01       		.byte	0x1
 3061 0ae4 5E05     		.2byte	0x55e
 3062 0ae6 00000000 		.4byte	.LFB14
 3063 0aea 12000000 		.4byte	.LFE14-.LFB14
 3064 0aee 01       		.uleb128 0x1
 3065 0aef 9C       		.byte	0x9c
 3066 0af0 3A0B0000 		.4byte	0xb3a
 3067 0af4 15       		.uleb128 0x15
 3068 0af5 580B0000 		.4byte	.LASF53
 3069 0af9 01       		.byte	0x1
 3070 0afa 5E05     		.2byte	0x55e
 3071 0afc 83000000 		.4byte	0x83
 3072 0b00 19040000 		.4byte	.LLST28
 3073 0b04 15       		.uleb128 0x15
 3074 0b05 42040000 		.4byte	.LASF143
 3075 0b09 01       		.byte	0x1
 3076 0b0a 5E05     		.2byte	0x55e
 3077 0b0c 83000000 		.4byte	0x83
 3078 0b10 45040000 		.4byte	.LLST29
 3079 0b14 1B       		.uleb128 0x1b
 3080 0b15 0A000000 		.4byte	.LVL90
 3081 0b19 800A0000 		.4byte	0xa80
 3082 0b1d 290B0000 		.4byte	0xb29
 3083 0b21 1C       		.uleb128 0x1c
 3084 0b22 01       		.uleb128 0x1
 3085 0b23 50       		.byte	0x50
 3086 0b24 03       		.uleb128 0x3
 3087 0b25 F3       		.byte	0xf3
 3088 0b26 01       		.uleb128 0x1
 3089 0b27 51       		.byte	0x51
 3090 0b28 00       		.byte	0
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 109


 3091 0b29 1F       		.uleb128 0x1f
 3092 0b2a 10000000 		.4byte	.LVL91
 3093 0b2e A70A0000 		.4byte	0xaa7
 3094 0b32 1C       		.uleb128 0x1c
 3095 0b33 01       		.uleb128 0x1
 3096 0b34 50       		.byte	0x50
 3097 0b35 02       		.uleb128 0x2
 3098 0b36 74       		.byte	0x74
 3099 0b37 00       		.sleb128 0
 3100 0b38 00       		.byte	0
 3101 0b39 00       		.byte	0
 3102 0b3a 1A       		.uleb128 0x1a
 3103 0b3b 66050000 		.4byte	.LASF146
 3104 0b3f 01       		.byte	0x1
 3105 0b40 9205     		.2byte	0x592
 3106 0b42 A4000000 		.4byte	0xa4
 3107 0b46 00000000 		.4byte	.LFB15
 3108 0b4a 1A000000 		.4byte	.LFE15-.LFB15
 3109 0b4e 01       		.uleb128 0x1
 3110 0b4f 9C       		.byte	0x9c
 3111 0b50 8C0B0000 		.4byte	0xb8c
 3112 0b54 15       		.uleb128 0x15
 3113 0b55 BA0C0000 		.4byte	.LASF121
 3114 0b59 01       		.byte	0x1
 3115 0b5a 9205     		.2byte	0x592
 3116 0b5c 83000000 		.4byte	0x83
 3117 0b60 66040000 		.4byte	.LLST30
 3118 0b64 16       		.uleb128 0x16
 3119 0b65 2F060000 		.4byte	.LASF147
 3120 0b69 01       		.byte	0x1
 3121 0b6a 9405     		.2byte	0x594
 3122 0b6c A4000000 		.4byte	0xa4
 3123 0b70 A8040000 		.4byte	.LLST31
 3124 0b74 1F       		.uleb128 0x1f
 3125 0b75 18000000 		.4byte	.LVL99
 3126 0b79 52110000 		.4byte	0x1152
 3127 0b7d 1C       		.uleb128 0x1c
 3128 0b7e 01       		.uleb128 0x1
 3129 0b7f 50       		.byte	0x50
 3130 0b80 03       		.uleb128 0x3
 3131 0b81 F3       		.byte	0xf3
 3132 0b82 01       		.uleb128 0x1
 3133 0b83 50       		.byte	0x50
 3134 0b84 1C       		.uleb128 0x1c
 3135 0b85 01       		.uleb128 0x1
 3136 0b86 51       		.byte	0x51
 3137 0b87 02       		.uleb128 0x2
 3138 0b88 08       		.byte	0x8
 3139 0b89 55       		.byte	0x55
 3140 0b8a 00       		.byte	0
 3141 0b8b 00       		.byte	0
 3142 0b8c 1A       		.uleb128 0x1a
 3143 0b8d 48060000 		.4byte	.LASF148
 3144 0b91 01       		.byte	0x1
 3145 0b92 0306     		.2byte	0x603
 3146 0b94 A4000000 		.4byte	0xa4
 3147 0b98 00000000 		.4byte	.LFB16
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 110


 3148 0b9c 1A000000 		.4byte	.LFE16-.LFB16
 3149 0ba0 01       		.uleb128 0x1
 3150 0ba1 9C       		.byte	0x9c
 3151 0ba2 D70B0000 		.4byte	0xbd7
 3152 0ba6 16       		.uleb128 0x16
 3153 0ba7 2F060000 		.4byte	.LASF147
 3154 0bab 01       		.byte	0x1
 3155 0bac 0506     		.2byte	0x605
 3156 0bae A4000000 		.4byte	0xa4
 3157 0bb2 D2040000 		.4byte	.LLST32
 3158 0bb6 16       		.uleb128 0x16
 3159 0bb7 61070000 		.4byte	.LASF127
 3160 0bbb 01       		.byte	0x1
 3161 0bbc 0606     		.2byte	0x606
 3162 0bbe 83000000 		.4byte	0x83
 3163 0bc2 FC040000 		.4byte	.LLST33
 3164 0bc6 1F       		.uleb128 0x1f
 3165 0bc7 0E000000 		.4byte	.LVL102
 3166 0bcb 3A0B0000 		.4byte	0xb3a
 3167 0bcf 1C       		.uleb128 0x1c
 3168 0bd0 01       		.uleb128 0x1
 3169 0bd1 50       		.byte	0x50
 3170 0bd2 02       		.uleb128 0x2
 3171 0bd3 74       		.byte	0x74
 3172 0bd4 00       		.sleb128 0
 3173 0bd5 00       		.byte	0
 3174 0bd6 00       		.byte	0
 3175 0bd7 1D       		.uleb128 0x1d
 3176 0bd8 78020000 		.4byte	.LASF149
 3177 0bdc 01       		.byte	0x1
 3178 0bdd 060A     		.2byte	0xa06
 3179 0bdf 00000000 		.4byte	.LFB22
 3180 0be3 3C000000 		.4byte	.LFE22-.LFB22
 3181 0be7 01       		.uleb128 0x1
 3182 0be8 9C       		.byte	0x9c
 3183 0be9 380C0000 		.4byte	0xc38
 3184 0bed 16       		.uleb128 0x16
 3185 0bee 61070000 		.4byte	.LASF127
 3186 0bf2 01       		.byte	0x1
 3187 0bf3 080A     		.2byte	0xa08
 3188 0bf5 83000000 		.4byte	0x83
 3189 0bf9 1B050000 		.4byte	.LLST34
 3190 0bfd 16       		.uleb128 0x16
 3191 0bfe 6B070000 		.4byte	.LASF150
 3192 0c02 01       		.byte	0x1
 3193 0c03 090A     		.2byte	0xa09
 3194 0c05 83000000 		.4byte	0x83
 3195 0c09 3A050000 		.4byte	.LLST35
 3196 0c0d 16       		.uleb128 0x16
 3197 0c0e 4C0B0000 		.4byte	.LASF151
 3198 0c12 01       		.byte	0x1
 3199 0c13 150A     		.2byte	0xa15
 3200 0c15 AB090000 		.4byte	0x9ab
 3201 0c19 59050000 		.4byte	.LLST36
 3202 0c1d 1F       		.uleb128 0x1f
 3203 0c1e 1E000000 		.4byte	.LVL111
 3204 0c22 5E110000 		.4byte	0x115e
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 111


 3205 0c26 1C       		.uleb128 0x1c
 3206 0c27 01       		.uleb128 0x1
 3207 0c28 50       		.byte	0x50
 3208 0c29 0C       		.uleb128 0xc
 3209 0c2a 74       		.byte	0x74
 3210 0c2b 00       		.sleb128 0
 3211 0c2c 33       		.byte	0x33
 3212 0c2d 24       		.byte	0x24
 3213 0c2e 74       		.byte	0x74
 3214 0c2f 00       		.sleb128 0
 3215 0c30 1C       		.byte	0x1c
 3216 0c31 32       		.byte	0x32
 3217 0c32 24       		.byte	0x24
 3218 0c33 76       		.byte	0x76
 3219 0c34 00       		.sleb128 0
 3220 0c35 22       		.byte	0x22
 3221 0c36 00       		.byte	0
 3222 0c37 00       		.byte	0
 3223 0c38 1A       		.uleb128 0x1a
 3224 0c39 00000000 		.4byte	.LASF152
 3225 0c3d 01       		.byte	0x1
 3226 0c3e 580A     		.2byte	0xa58
 3227 0c40 83000000 		.4byte	0x83
 3228 0c44 00000000 		.4byte	.LFB23
 3229 0c48 14000000 		.4byte	.LFE23-.LFB23
 3230 0c4c 01       		.uleb128 0x1
 3231 0c4d 9C       		.byte	0x9c
 3232 0c4e 7F0C0000 		.4byte	0xc7f
 3233 0c52 15       		.uleb128 0x15
 3234 0c53 BA0C0000 		.4byte	.LASF121
 3235 0c57 01       		.byte	0x1
 3236 0c58 580A     		.2byte	0xa58
 3237 0c5a 83000000 		.4byte	0x83
 3238 0c5e 6C050000 		.4byte	.LLST37
 3239 0c62 22       		.uleb128 0x22
 3240 0c63 0A0A0000 		.4byte	.LASF153
 3241 0c67 01       		.byte	0x1
 3242 0c68 5A0A     		.2byte	0xa5a
 3243 0c6a 83000000 		.4byte	0x83
 3244 0c6e 01       		.uleb128 0x1
 3245 0c6f 50       		.byte	0x50
 3246 0c70 22       		.uleb128 0x22
 3247 0c71 21020000 		.4byte	.LASF154
 3248 0c75 01       		.byte	0x1
 3249 0c76 5E0A     		.2byte	0xa5e
 3250 0c78 7F0C0000 		.4byte	0xc7f
 3251 0c7c 01       		.uleb128 0x1
 3252 0c7d 53       		.byte	0x53
 3253 0c7e 00       		.byte	0
 3254 0c7f 06       		.uleb128 0x6
 3255 0c80 04       		.byte	0x4
 3256 0c81 D1020000 		.4byte	0x2d1
 3257 0c85 1D       		.uleb128 0x1d
 3258 0c86 C5030000 		.4byte	.LASF155
 3259 0c8a 01       		.byte	0x1
 3260 0c8b 820A     		.2byte	0xa82
 3261 0c8d 00000000 		.4byte	.LFB24
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 112


 3262 0c91 14000000 		.4byte	.LFE24-.LFB24
 3263 0c95 01       		.uleb128 0x1
 3264 0c96 9C       		.byte	0x9c
 3265 0c97 C80C0000 		.4byte	0xcc8
 3266 0c9b 15       		.uleb128 0x15
 3267 0c9c BA0C0000 		.4byte	.LASF121
 3268 0ca0 01       		.byte	0x1
 3269 0ca1 820A     		.2byte	0xa82
 3270 0ca3 83000000 		.4byte	0x83
 3271 0ca7 8D050000 		.4byte	.LLST38
 3272 0cab 23       		.uleb128 0x23
 3273 0cac B8050000 		.4byte	.LASF156
 3274 0cb0 01       		.byte	0x1
 3275 0cb1 820A     		.2byte	0xa82
 3276 0cb3 83000000 		.4byte	0x83
 3277 0cb7 01       		.uleb128 0x1
 3278 0cb8 51       		.byte	0x51
 3279 0cb9 22       		.uleb128 0x22
 3280 0cba 21020000 		.4byte	.LASF154
 3281 0cbe 01       		.byte	0x1
 3282 0cbf 860A     		.2byte	0xa86
 3283 0cc1 7F0C0000 		.4byte	0xc7f
 3284 0cc5 01       		.uleb128 0x1
 3285 0cc6 53       		.byte	0x53
 3286 0cc7 00       		.byte	0
 3287 0cc8 1A       		.uleb128 0x1a
 3288 0cc9 18040000 		.4byte	.LASF157
 3289 0ccd 01       		.byte	0x1
 3290 0cce D60A     		.2byte	0xad6
 3291 0cd0 6B000000 		.4byte	0x6b
 3292 0cd4 00000000 		.4byte	.LFB25
 3293 0cd8 24000000 		.4byte	.LFE25-.LFB25
 3294 0cdc 01       		.uleb128 0x1
 3295 0cdd 9C       		.byte	0x9c
 3296 0cde 1E0D0000 		.4byte	0xd1e
 3297 0ce2 15       		.uleb128 0x15
 3298 0ce3 880C0000 		.4byte	.LASF112
 3299 0ce7 01       		.byte	0x1
 3300 0ce8 D60A     		.2byte	0xad6
 3301 0cea 83000000 		.4byte	0x83
 3302 0cee AE050000 		.4byte	.LLST39
 3303 0cf2 23       		.uleb128 0x23
 3304 0cf3 54050000 		.4byte	.LASF45
 3305 0cf7 01       		.byte	0x1
 3306 0cf8 D60A     		.2byte	0xad6
 3307 0cfa 83000000 		.4byte	0x83
 3308 0cfe 01       		.uleb128 0x1
 3309 0cff 51       		.byte	0x51
 3310 0d00 16       		.uleb128 0x16
 3311 0d01 DF090000 		.4byte	.LASF158
 3312 0d05 01       		.byte	0x1
 3313 0d06 D80A     		.2byte	0xad8
 3314 0d08 83000000 		.4byte	0x83
 3315 0d0c E8050000 		.4byte	.LLST40
 3316 0d10 1E       		.uleb128 0x1e
 3317 0d11 960C0000 		.4byte	.LASF159
 3318 0d15 01       		.byte	0x1
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 113


 3319 0d16 D90A     		.2byte	0xad9
 3320 0d18 83000000 		.4byte	0x83
 3321 0d1c 01       		.byte	0x1
 3322 0d1d 00       		.byte	0
 3323 0d1e 17       		.uleb128 0x17
 3324 0d1f 29020000 		.4byte	.LASF161
 3325 0d23 01       		.byte	0x1
 3326 0d24 BE08     		.2byte	0x8be
 3327 0d26 00000000 		.4byte	.LFB19
 3328 0d2a 3A000000 		.4byte	.LFE19-.LFB19
 3329 0d2e 01       		.uleb128 0x1
 3330 0d2f 9C       		.byte	0x9c
 3331 0d30 030E0000 		.4byte	0xe03
 3332 0d34 15       		.uleb128 0x15
 3333 0d35 61070000 		.4byte	.LASF127
 3334 0d39 01       		.byte	0x1
 3335 0d3a BE08     		.2byte	0x8be
 3336 0d3c 83000000 		.4byte	0x83
 3337 0d40 FB050000 		.4byte	.LLST41
 3338 0d44 15       		.uleb128 0x15
 3339 0d45 21020000 		.4byte	.LASF154
 3340 0d49 01       		.byte	0x1
 3341 0d4a BE08     		.2byte	0x8be
 3342 0d4c 7F0C0000 		.4byte	0xc7f
 3343 0d50 1C060000 		.4byte	.LLST42
 3344 0d54 16       		.uleb128 0x16
 3345 0d55 BC030000 		.4byte	.LASF116
 3346 0d59 01       		.byte	0x1
 3347 0d5a C008     		.2byte	0x8c0
 3348 0d5c 6B000000 		.4byte	0x6b
 3349 0d60 48060000 		.4byte	.LLST43
 3350 0d64 16       		.uleb128 0x16
 3351 0d65 66010000 		.4byte	.LASF117
 3352 0d69 01       		.byte	0x1
 3353 0d6a C108     		.2byte	0x8c1
 3354 0d6c 6B000000 		.4byte	0x6b
 3355 0d70 66060000 		.4byte	.LLST44
 3356 0d74 16       		.uleb128 0x16
 3357 0d75 31050000 		.4byte	.LASF113
 3358 0d79 01       		.byte	0x1
 3359 0d7a C508     		.2byte	0x8c5
 3360 0d7c 83000000 		.4byte	0x83
 3361 0d80 79060000 		.4byte	.LLST45
 3362 0d84 16       		.uleb128 0x16
 3363 0d85 880C0000 		.4byte	.LASF112
 3364 0d89 01       		.byte	0x1
 3365 0d8a C708     		.2byte	0x8c7
 3366 0d8c 83000000 		.4byte	0x83
 3367 0d90 97060000 		.4byte	.LLST46
 3368 0d94 1B       		.uleb128 0x1b
 3369 0d95 08000000 		.4byte	.LVL129
 3370 0d99 380C0000 		.4byte	0xc38
 3371 0d9d A90D0000 		.4byte	0xda9
 3372 0da1 1C       		.uleb128 0x1c
 3373 0da2 01       		.uleb128 0x1
 3374 0da3 50       		.byte	0x50
 3375 0da4 03       		.uleb128 0x3
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 114


 3376 0da5 F3       		.byte	0xf3
 3377 0da6 01       		.uleb128 0x1
 3378 0da7 50       		.byte	0x50
 3379 0da8 00       		.byte	0
 3380 0da9 1B       		.uleb128 0x1b
 3381 0daa 12000000 		.4byte	.LVL131
 3382 0dae 6A110000 		.4byte	0x116a
 3383 0db2 C20D0000 		.4byte	0xdc2
 3384 0db6 1C       		.uleb128 0x1c
 3385 0db7 01       		.uleb128 0x1
 3386 0db8 50       		.byte	0x50
 3387 0db9 02       		.uleb128 0x2
 3388 0dba 75       		.byte	0x75
 3389 0dbb 00       		.sleb128 0
 3390 0dbc 1C       		.uleb128 0x1c
 3391 0dbd 01       		.uleb128 0x1
 3392 0dbe 52       		.byte	0x52
 3393 0dbf 01       		.uleb128 0x1
 3394 0dc0 30       		.byte	0x30
 3395 0dc1 00       		.byte	0
 3396 0dc2 1B       		.uleb128 0x1b
 3397 0dc3 1A000000 		.4byte	.LVL134
 3398 0dc7 16070000 		.4byte	0x716
 3399 0dcb D60D0000 		.4byte	0xdd6
 3400 0dcf 1C       		.uleb128 0x1c
 3401 0dd0 01       		.uleb128 0x1
 3402 0dd1 50       		.byte	0x50
 3403 0dd2 02       		.uleb128 0x2
 3404 0dd3 75       		.byte	0x75
 3405 0dd4 00       		.sleb128 0
 3406 0dd5 00       		.byte	0
 3407 0dd6 1B       		.uleb128 0x1b
 3408 0dd7 26000000 		.4byte	.LVL137
 3409 0ddb C80C0000 		.4byte	0xcc8
 3410 0ddf EC0D0000 		.4byte	0xdec
 3411 0de3 1C       		.uleb128 0x1c
 3412 0de4 01       		.uleb128 0x1
 3413 0de5 50       		.byte	0x50
 3414 0de6 04       		.uleb128 0x4
 3415 0de7 75       		.byte	0x75
 3416 0de8 00       		.sleb128 0
 3417 0de9 31       		.byte	0x31
 3418 0dea 24       		.byte	0x24
 3419 0deb 00       		.byte	0
 3420 0dec 1F       		.uleb128 0x1f
 3421 0ded 30000000 		.4byte	.LVL139
 3422 0df1 61070000 		.4byte	0x761
 3423 0df5 1C       		.uleb128 0x1c
 3424 0df6 01       		.uleb128 0x1
 3425 0df7 50       		.byte	0x50
 3426 0df8 02       		.uleb128 0x2
 3427 0df9 75       		.byte	0x75
 3428 0dfa 00       		.sleb128 0
 3429 0dfb 1C       		.uleb128 0x1c
 3430 0dfc 01       		.uleb128 0x1
 3431 0dfd 51       		.byte	0x51
 3432 0dfe 02       		.uleb128 0x2
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 115


 3433 0dff 74       		.byte	0x74
 3434 0e00 00       		.sleb128 0
 3435 0e01 00       		.byte	0
 3436 0e02 00       		.byte	0
 3437 0e03 24       		.uleb128 0x24
 3438 0e04 40050000 		.4byte	.LASF162
 3439 0e08 01       		.byte	0x1
 3440 0e09 2706     		.2byte	0x627
 3441 0e0b A4000000 		.4byte	0xa4
 3442 0e0f 00000000 		.4byte	.LFB17
 3443 0e13 4C010000 		.4byte	.LFE17-.LFB17
 3444 0e17 01       		.uleb128 0x1
 3445 0e18 9C       		.byte	0x9c
 3446 0e19 010F0000 		.4byte	0xf01
 3447 0e1d 16       		.uleb128 0x16
 3448 0e1e E7030000 		.4byte	.LASF163
 3449 0e22 01       		.byte	0x1
 3450 0e23 2906     		.2byte	0x629
 3451 0e25 A4000000 		.4byte	0xa4
 3452 0e29 B5060000 		.4byte	.LLST47
 3453 0e2d 16       		.uleb128 0x16
 3454 0e2e 61070000 		.4byte	.LASF127
 3455 0e32 01       		.byte	0x1
 3456 0e33 2A06     		.2byte	0x62a
 3457 0e35 83000000 		.4byte	0x83
 3458 0e39 EA060000 		.4byte	.LLST48
 3459 0e3d 25       		.uleb128 0x25
 3460 0e3e 637000   		.ascii	"cp\000"
 3461 0e41 01       		.byte	0x1
 3462 0e42 2C06     		.2byte	0x62c
 3463 0e44 83000000 		.4byte	0x83
 3464 0e48 1F070000 		.4byte	.LLST49
 3465 0e4c 22       		.uleb128 0x22
 3466 0e4d 10020000 		.4byte	.LASF164
 3467 0e51 01       		.byte	0x1
 3468 0e52 3106     		.2byte	0x631
 3469 0e54 55050000 		.4byte	0x555
 3470 0e58 02       		.uleb128 0x2
 3471 0e59 91       		.byte	0x91
 3472 0e5a 6C       		.sleb128 -20
 3473 0e5b 16       		.uleb128 0x16
 3474 0e5c 21020000 		.4byte	.LASF154
 3475 0e60 01       		.byte	0x1
 3476 0e61 3206     		.2byte	0x632
 3477 0e63 7F0C0000 		.4byte	0xc7f
 3478 0e67 3E070000 		.4byte	.LLST50
 3479 0e6b 22       		.uleb128 0x22
 3480 0e6c C8040000 		.4byte	.LASF165
 3481 0e70 01       		.byte	0x1
 3482 0e71 3306     		.2byte	0x633
 3483 0e73 78010000 		.4byte	0x178
 3484 0e77 02       		.uleb128 0x2
 3485 0e78 91       		.byte	0x91
 3486 0e79 50       		.sleb128 -48
 3487 0e7a 1B       		.uleb128 0x1b
 3488 0e7b 50000000 		.4byte	.LVL150
 3489 0e7f 52110000 		.4byte	0x1152
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 116


 3490 0e83 940E0000 		.4byte	0xe94
 3491 0e87 1C       		.uleb128 0x1c
 3492 0e88 01       		.uleb128 0x1
 3493 0e89 50       		.byte	0x50
 3494 0e8a 02       		.uleb128 0x2
 3495 0e8b 76       		.byte	0x76
 3496 0e8c 00       		.sleb128 0
 3497 0e8d 1C       		.uleb128 0x1c
 3498 0e8e 01       		.uleb128 0x1
 3499 0e8f 51       		.byte	0x51
 3500 0e90 02       		.uleb128 0x2
 3501 0e91 08       		.byte	0x8
 3502 0e92 55       		.byte	0x55
 3503 0e93 00       		.byte	0
 3504 0e94 1B       		.uleb128 0x1b
 3505 0e95 78000000 		.4byte	.LVL152
 3506 0e99 76110000 		.4byte	0x1176
 3507 0e9d A80E0000 		.4byte	0xea8
 3508 0ea1 1C       		.uleb128 0x1c
 3509 0ea2 01       		.uleb128 0x1
 3510 0ea3 50       		.byte	0x50
 3511 0ea4 02       		.uleb128 0x2
 3512 0ea5 91       		.byte	0x91
 3513 0ea6 50       		.sleb128 -48
 3514 0ea7 00       		.byte	0
 3515 0ea8 1B       		.uleb128 0x1b
 3516 0ea9 C0000000 		.4byte	.LVL159
 3517 0ead 52110000 		.4byte	0x1152
 3518 0eb1 C20E0000 		.4byte	0xec2
 3519 0eb5 1C       		.uleb128 0x1c
 3520 0eb6 01       		.uleb128 0x1
 3521 0eb7 50       		.byte	0x50
 3522 0eb8 02       		.uleb128 0x2
 3523 0eb9 74       		.byte	0x74
 3524 0eba 00       		.sleb128 0
 3525 0ebb 1C       		.uleb128 0x1c
 3526 0ebc 01       		.uleb128 0x1
 3527 0ebd 51       		.byte	0x51
 3528 0ebe 02       		.uleb128 0x2
 3529 0ebf 08       		.byte	0x8
 3530 0ec0 55       		.byte	0x55
 3531 0ec1 00       		.byte	0
 3532 0ec2 1B       		.uleb128 0x1b
 3533 0ec3 F0000000 		.4byte	.LVL161
 3534 0ec7 81110000 		.4byte	0x1181
 3535 0ecb D60E0000 		.4byte	0xed6
 3536 0ecf 1C       		.uleb128 0x1c
 3537 0ed0 01       		.uleb128 0x1
 3538 0ed1 50       		.byte	0x50
 3539 0ed2 02       		.uleb128 0x2
 3540 0ed3 91       		.byte	0x91
 3541 0ed4 50       		.sleb128 -48
 3542 0ed5 00       		.byte	0
 3543 0ed6 1B       		.uleb128 0x1b
 3544 0ed7 0C010000 		.4byte	.LVL166
 3545 0edb 1E0D0000 		.4byte	0xd1e
 3546 0edf EA0E0000 		.4byte	0xeea
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 117


 3547 0ee3 1C       		.uleb128 0x1c
 3548 0ee4 01       		.uleb128 0x1
 3549 0ee5 50       		.byte	0x50
 3550 0ee6 02       		.uleb128 0x2
 3551 0ee7 74       		.byte	0x74
 3552 0ee8 00       		.sleb128 0
 3553 0ee9 00       		.byte	0
 3554 0eea 1F       		.uleb128 0x1f
 3555 0eeb 14010000 		.4byte	.LVL167
 3556 0eef 52110000 		.4byte	0x1152
 3557 0ef3 1C       		.uleb128 0x1c
 3558 0ef4 01       		.uleb128 0x1
 3559 0ef5 50       		.byte	0x50
 3560 0ef6 02       		.uleb128 0x2
 3561 0ef7 74       		.byte	0x74
 3562 0ef8 00       		.sleb128 0
 3563 0ef9 1C       		.uleb128 0x1c
 3564 0efa 01       		.uleb128 0x1
 3565 0efb 51       		.byte	0x51
 3566 0efc 02       		.uleb128 0x2
 3567 0efd 08       		.byte	0x8
 3568 0efe 55       		.byte	0x55
 3569 0eff 00       		.byte	0
 3570 0f00 00       		.byte	0
 3571 0f01 1D       		.uleb128 0x1d
 3572 0f02 E10C0000 		.4byte	.LASF166
 3573 0f06 01       		.byte	0x1
 3574 0f07 8908     		.2byte	0x889
 3575 0f09 00000000 		.4byte	.LFB18
 3576 0f0d 24000000 		.4byte	.LFE18-.LFB18
 3577 0f11 01       		.uleb128 0x1
 3578 0f12 9C       		.byte	0x9c
 3579 0f13 480F0000 		.4byte	0xf48
 3580 0f17 16       		.uleb128 0x16
 3581 0f18 61070000 		.4byte	.LASF127
 3582 0f1c 01       		.byte	0x1
 3583 0f1d 8B08     		.2byte	0x88b
 3584 0f1f 83000000 		.4byte	0x83
 3585 0f23 67070000 		.4byte	.LLST51
 3586 0f27 16       		.uleb128 0x16
 3587 0f28 21020000 		.4byte	.LASF154
 3588 0f2c 01       		.byte	0x1
 3589 0f2d 8C08     		.2byte	0x88c
 3590 0f2f 7F0C0000 		.4byte	0xc7f
 3591 0f33 86070000 		.4byte	.LLST52
 3592 0f37 1F       		.uleb128 0x1f
 3593 0f38 16000000 		.4byte	.LVL175
 3594 0f3c 1E0D0000 		.4byte	0xd1e
 3595 0f40 1C       		.uleb128 0x1c
 3596 0f41 01       		.uleb128 0x1
 3597 0f42 50       		.byte	0x50
 3598 0f43 02       		.uleb128 0x2
 3599 0f44 74       		.byte	0x74
 3600 0f45 00       		.sleb128 0
 3601 0f46 00       		.byte	0
 3602 0f47 00       		.byte	0
 3603 0f48 1A       		.uleb128 0x1a
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 118


 3604 0f49 D9070000 		.4byte	.LASF167
 3605 0f4d 01       		.byte	0x1
 3606 0f4e 0402     		.2byte	0x204
 3607 0f50 A4000000 		.4byte	0xa4
 3608 0f54 00000000 		.4byte	.LFB5
 3609 0f58 14000000 		.4byte	.LFE5-.LFB5
 3610 0f5c 01       		.uleb128 0x1
 3611 0f5d 9C       		.byte	0x9c
 3612 0f5e 910F0000 		.4byte	0xf91
 3613 0f62 1E       		.uleb128 0x1e
 3614 0f63 43010000 		.4byte	.LASF168
 3615 0f67 01       		.byte	0x1
 3616 0f68 0602     		.2byte	0x206
 3617 0f6a A4000000 		.4byte	0xa4
 3618 0f6e 00       		.byte	0
 3619 0f6f 18       		.uleb128 0x18
 3620 0f70 06000000 		.4byte	.LVL179
 3621 0f74 010F0000 		.4byte	0xf01
 3622 0f78 18       		.uleb128 0x18
 3623 0f79 0A000000 		.4byte	.LVL180
 3624 0f7d EF090000 		.4byte	0x9ef
 3625 0f81 1F       		.uleb128 0x1f
 3626 0f82 10000000 		.4byte	.LVL181
 3627 0f86 B6090000 		.4byte	0x9b6
 3628 0f8a 1C       		.uleb128 0x1c
 3629 0f8b 01       		.uleb128 0x1
 3630 0f8c 50       		.byte	0x50
 3631 0f8d 01       		.uleb128 0x1
 3632 0f8e 31       		.byte	0x31
 3633 0f8f 00       		.byte	0
 3634 0f90 00       		.byte	0
 3635 0f91 1D       		.uleb128 0x1d
 3636 0f92 75000000 		.4byte	.LASF169
 3637 0f96 01       		.byte	0x1
 3638 0f97 060B     		.2byte	0xb06
 3639 0f99 00000000 		.4byte	.LFB26
 3640 0f9d 60000000 		.4byte	.LFE26-.LFB26
 3641 0fa1 01       		.uleb128 0x1
 3642 0fa2 9C       		.byte	0x9c
 3643 0fa3 23100000 		.4byte	0x1023
 3644 0fa7 16       		.uleb128 0x16
 3645 0fa8 300C0000 		.4byte	.LASF120
 3646 0fac 01       		.byte	0x1
 3647 0fad 080B     		.2byte	0xb08
 3648 0faf 83000000 		.4byte	0x83
 3649 0fb3 99070000 		.4byte	.LLST53
 3650 0fb7 16       		.uleb128 0x16
 3651 0fb8 57010000 		.4byte	.LASF132
 3652 0fbc 01       		.byte	0x1
 3653 0fbd 090B     		.2byte	0xb09
 3654 0fbf 6B000000 		.4byte	0x6b
 3655 0fc3 CD070000 		.4byte	.LLST54
 3656 0fc7 18       		.uleb128 0x18
 3657 0fc8 06000000 		.4byte	.LVL182
 3658 0fcc 19110000 		.4byte	0x1119
 3659 0fd0 18       		.uleb128 0x18
 3660 0fd1 14000000 		.4byte	.LVL185
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 119


 3661 0fd5 24110000 		.4byte	0x1124
 3662 0fd9 18       		.uleb128 0x18
 3663 0fda 18000000 		.4byte	.LVL186
 3664 0fde 19110000 		.4byte	0x1119
 3665 0fe2 18       		.uleb128 0x18
 3666 0fe3 26000000 		.4byte	.LVL189
 3667 0fe7 24110000 		.4byte	0x1124
 3668 0feb 18       		.uleb128 0x18
 3669 0fec 2A000000 		.4byte	.LVL190
 3670 0ff0 19110000 		.4byte	0x1119
 3671 0ff4 18       		.uleb128 0x18
 3672 0ff5 3C000000 		.4byte	.LVL194
 3673 0ff9 24110000 		.4byte	0x1124
 3674 0ffd 1B       		.uleb128 0x1b
 3675 0ffe 42000000 		.4byte	.LVL195
 3676 1002 8C110000 		.4byte	0x118c
 3677 1006 10100000 		.4byte	0x1010
 3678 100a 1C       		.uleb128 0x1c
 3679 100b 01       		.uleb128 0x1
 3680 100c 50       		.byte	0x50
 3681 100d 01       		.uleb128 0x1
 3682 100e 31       		.byte	0x31
 3683 100f 00       		.byte	0
 3684 1010 18       		.uleb128 0x18
 3685 1011 46000000 		.4byte	.LVL196
 3686 1015 19110000 		.4byte	0x1119
 3687 1019 18       		.uleb128 0x18
 3688 101a 50000000 		.4byte	.LVL199
 3689 101e 24110000 		.4byte	0x1124
 3690 1022 00       		.byte	0
 3691 1023 26       		.uleb128 0x26
 3692 1024 89060000 		.4byte	.LASF170
 3693 1028 05       		.byte	0x5
 3694 1029 3504     		.2byte	0x435
 3695 102b 65050000 		.4byte	0x565
 3696 102f 26       		.uleb128 0x26
 3697 1030 29090000 		.4byte	.LASF171
 3698 1034 05       		.byte	0x5
 3699 1035 3604     		.2byte	0x436
 3700 1037 3B100000 		.4byte	0x103b
 3701 103b 20       		.uleb128 0x20
 3702 103c 03070000 		.4byte	0x703
 3703 1040 0D       		.uleb128 0xd
 3704 1041 B1090000 		.4byte	0x9b1
 3705 1045 50100000 		.4byte	0x1050
 3706 1049 0E       		.uleb128 0xe
 3707 104a CA020000 		.4byte	0x2ca
 3708 104e 04       		.byte	0x4
 3709 104f 00       		.byte	0
 3710 1050 26       		.uleb128 0x26
 3711 1051 4F090000 		.4byte	.LASF172
 3712 1055 05       		.byte	0x5
 3713 1056 3704     		.2byte	0x437
 3714 1058 5C100000 		.4byte	0x105c
 3715 105c 20       		.uleb128 0x20
 3716 105d 40100000 		.4byte	0x1040
 3717 1061 27       		.uleb128 0x27
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 120


 3718 1062 99000000 		.4byte	.LASF173
 3719 1066 01       		.byte	0x1
 3720 1067 BB       		.byte	0xbb
 3721 1068 B0000000 		.4byte	0xb0
 3722 106c 05       		.uleb128 0x5
 3723 106d 03       		.byte	0x3
 3724 106e 00000000 		.4byte	CapSense_widgetIndex
 3725 1072 27       		.uleb128 0x27
 3726 1073 66030000 		.4byte	.LASF174
 3727 1077 01       		.byte	0x1
 3728 1078 BC       		.byte	0xbc
 3729 1079 B0000000 		.4byte	0xb0
 3730 107d 05       		.uleb128 0x5
 3731 107e 03       		.byte	0x3
 3732 107f 00000000 		.4byte	CapSense_sensorIndex
 3733 1083 27       		.uleb128 0x27
 3734 1084 C30C0000 		.4byte	.LASF175
 3735 1088 01       		.byte	0x1
 3736 1089 BD       		.byte	0xbd
 3737 108a 6B000000 		.4byte	0x6b
 3738 108e 05       		.uleb128 0x5
 3739 108f 03       		.byte	0x3
 3740 1090 00000000 		.4byte	CapSense_requestScanAllWidget
 3741 1094 27       		.uleb128 0x27
 3742 1095 930B0000 		.4byte	.LASF176
 3743 1099 01       		.byte	0x1
 3744 109a C0       		.byte	0xc0
 3745 109b BE060000 		.4byte	0x6be
 3746 109f 05       		.uleb128 0x5
 3747 10a0 03       		.byte	0x3
 3748 10a1 00000000 		.4byte	CapSense_curRamSnsPtr
 3749 10a5 27       		.uleb128 0x27
 3750 10a6 C3090000 		.4byte	.LASF177
 3751 10aa 01       		.byte	0x1
 3752 10ab AE       		.byte	0xae
 3753 10ac 16020000 		.4byte	0x216
 3754 10b0 05       		.uleb128 0x5
 3755 10b1 03       		.byte	0x3
 3756 10b2 00000000 		.4byte	CapSense_currentSenseMethod
 3757 10b6 27       		.uleb128 0x27
 3758 10b7 B50B0000 		.4byte	.LASF178
 3759 10bb 01       		.byte	0x1
 3760 10bc B7       		.byte	0xb7
 3761 10bd C7100000 		.4byte	0x10c7
 3762 10c1 05       		.uleb128 0x5
 3763 10c2 03       		.byte	0x3
 3764 10c3 00000000 		.4byte	CapSense_scanFreqIndex
 3765 10c7 20       		.uleb128 0x20
 3766 10c8 6B000000 		.4byte	0x6b
 3767 10cc 27       		.uleb128 0x27
 3768 10cd 05070000 		.4byte	.LASF179
 3769 10d1 01       		.byte	0x1
 3770 10d2 CF       		.byte	0xcf
 3771 10d3 AB090000 		.4byte	0x9ab
 3772 10d7 05       		.uleb128 0x5
 3773 10d8 03       		.byte	0x3
 3774 10d9 00000000 		.4byte	CapSense_curSnsIOPtr
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 121


 3775 10dd 26       		.uleb128 0x26
 3776 10de EF070000 		.4byte	.LASF180
 3777 10e2 06       		.byte	0x6
 3778 10e3 A501     		.2byte	0x1a5
 3779 10e5 6B000000 		.4byte	0x6b
 3780 10e9 26       		.uleb128 0x26
 3781 10ea 0D090000 		.4byte	.LASF181
 3782 10ee 06       		.byte	0x6
 3783 10ef A601     		.2byte	0x1a6
 3784 10f1 77000000 		.4byte	0x77
 3785 10f5 28       		.uleb128 0x28
 3786 10f6 1E080000 		.4byte	.LASF182
 3787 10fa 1E080000 		.4byte	.LASF182
 3788 10fe 06       		.byte	0x6
 3789 10ff D401     		.2byte	0x1d4
 3790 1101 28       		.uleb128 0x28
 3791 1102 25030000 		.4byte	.LASF183
 3792 1106 25030000 		.4byte	.LASF183
 3793 110a 06       		.byte	0x6
 3794 110b B701     		.2byte	0x1b7
 3795 110d 28       		.uleb128 0x28
 3796 110e EC0A0000 		.4byte	.LASF184
 3797 1112 EC0A0000 		.4byte	.LASF184
 3798 1116 06       		.byte	0x6
 3799 1117 B901     		.2byte	0x1b9
 3800 1119 29       		.uleb128 0x29
 3801 111a 7C0B0000 		.4byte	.LASF185
 3802 111e 7C0B0000 		.4byte	.LASF185
 3803 1122 07       		.byte	0x7
 3804 1123 E5       		.byte	0xe5
 3805 1124 29       		.uleb128 0x29
 3806 1125 E4040000 		.4byte	.LASF186
 3807 1129 E4040000 		.4byte	.LASF186
 3808 112d 07       		.byte	0x7
 3809 112e E6       		.byte	0xe6
 3810 112f 28       		.uleb128 0x28
 3811 1130 430A0000 		.4byte	.LASF187
 3812 1134 430A0000 		.4byte	.LASF187
 3813 1138 06       		.byte	0x6
 3814 1139 C001     		.2byte	0x1c0
 3815 113b 28       		.uleb128 0x28
 3816 113c 03060000 		.4byte	.LASF188
 3817 1140 03060000 		.4byte	.LASF188
 3818 1144 06       		.byte	0x6
 3819 1145 D001     		.2byte	0x1d0
 3820 1147 29       		.uleb128 0x29
 3821 1148 1E0A0000 		.4byte	.LASF189
 3822 114c 1E0A0000 		.4byte	.LASF189
 3823 1150 08       		.byte	0x8
 3824 1151 18       		.byte	0x18
 3825 1152 28       		.uleb128 0x28
 3826 1153 F1080000 		.4byte	.LASF190
 3827 1157 F1080000 		.4byte	.LASF190
 3828 115b 06       		.byte	0x6
 3829 115c BD01     		.2byte	0x1bd
 3830 115e 28       		.uleb128 0x28
 3831 115f 7E080000 		.4byte	.LASF191
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 122


 3832 1163 7E080000 		.4byte	.LASF191
 3833 1167 06       		.byte	0x6
 3834 1168 C101     		.2byte	0x1c1
 3835 116a 28       		.uleb128 0x28
 3836 116b FA040000 		.4byte	.LASF192
 3837 116f FA040000 		.4byte	.LASF192
 3838 1173 06       		.byte	0x6
 3839 1174 DB01     		.2byte	0x1db
 3840 1176 29       		.uleb128 0x29
 3841 1177 3B070000 		.4byte	.LASF193
 3842 117b 3B070000 		.4byte	.LASF193
 3843 117f 04       		.byte	0x4
 3844 1180 B0       		.byte	0xb0
 3845 1181 29       		.uleb128 0x29
 3846 1182 79010000 		.4byte	.LASF194
 3847 1186 79010000 		.4byte	.LASF194
 3848 118a 04       		.byte	0x4
 3849 118b B1       		.byte	0xb1
 3850 118c 29       		.uleb128 0x29
 3851 118d 3D030000 		.4byte	.LASF195
 3852 1191 3D030000 		.4byte	.LASF195
 3853 1195 07       		.byte	0x7
 3854 1196 DA       		.byte	0xda
 3855 1197 00       		.byte	0
 3856              		.section	.debug_abbrev,"",%progbits
 3857              	.Ldebug_abbrev0:
 3858 0000 01       		.uleb128 0x1
 3859 0001 11       		.uleb128 0x11
 3860 0002 01       		.byte	0x1
 3861 0003 25       		.uleb128 0x25
 3862 0004 0E       		.uleb128 0xe
 3863 0005 13       		.uleb128 0x13
 3864 0006 0B       		.uleb128 0xb
 3865 0007 03       		.uleb128 0x3
 3866 0008 0E       		.uleb128 0xe
 3867 0009 1B       		.uleb128 0x1b
 3868 000a 0E       		.uleb128 0xe
 3869 000b 55       		.uleb128 0x55
 3870 000c 17       		.uleb128 0x17
 3871 000d 11       		.uleb128 0x11
 3872 000e 01       		.uleb128 0x1
 3873 000f 10       		.uleb128 0x10
 3874 0010 17       		.uleb128 0x17
 3875 0011 00       		.byte	0
 3876 0012 00       		.byte	0
 3877 0013 02       		.uleb128 0x2
 3878 0014 24       		.uleb128 0x24
 3879 0015 00       		.byte	0
 3880 0016 0B       		.uleb128 0xb
 3881 0017 0B       		.uleb128 0xb
 3882 0018 3E       		.uleb128 0x3e
 3883 0019 0B       		.uleb128 0xb
 3884 001a 03       		.uleb128 0x3
 3885 001b 0E       		.uleb128 0xe
 3886 001c 00       		.byte	0
 3887 001d 00       		.byte	0
 3888 001e 03       		.uleb128 0x3
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 123


 3889 001f 24       		.uleb128 0x24
 3890 0020 00       		.byte	0
 3891 0021 0B       		.uleb128 0xb
 3892 0022 0B       		.uleb128 0xb
 3893 0023 3E       		.uleb128 0x3e
 3894 0024 0B       		.uleb128 0xb
 3895 0025 03       		.uleb128 0x3
 3896 0026 08       		.uleb128 0x8
 3897 0027 00       		.byte	0
 3898 0028 00       		.byte	0
 3899 0029 04       		.uleb128 0x4
 3900 002a 16       		.uleb128 0x16
 3901 002b 00       		.byte	0
 3902 002c 03       		.uleb128 0x3
 3903 002d 0E       		.uleb128 0xe
 3904 002e 3A       		.uleb128 0x3a
 3905 002f 0B       		.uleb128 0xb
 3906 0030 3B       		.uleb128 0x3b
 3907 0031 05       		.uleb128 0x5
 3908 0032 49       		.uleb128 0x49
 3909 0033 13       		.uleb128 0x13
 3910 0034 00       		.byte	0
 3911 0035 00       		.byte	0
 3912 0036 05       		.uleb128 0x5
 3913 0037 35       		.uleb128 0x35
 3914 0038 00       		.byte	0
 3915 0039 49       		.uleb128 0x49
 3916 003a 13       		.uleb128 0x13
 3917 003b 00       		.byte	0
 3918 003c 00       		.byte	0
 3919 003d 06       		.uleb128 0x6
 3920 003e 0F       		.uleb128 0xf
 3921 003f 00       		.byte	0
 3922 0040 0B       		.uleb128 0xb
 3923 0041 0B       		.uleb128 0xb
 3924 0042 49       		.uleb128 0x49
 3925 0043 13       		.uleb128 0x13
 3926 0044 00       		.byte	0
 3927 0045 00       		.byte	0
 3928 0046 07       		.uleb128 0x7
 3929 0047 15       		.uleb128 0x15
 3930 0048 00       		.byte	0
 3931 0049 27       		.uleb128 0x27
 3932 004a 19       		.uleb128 0x19
 3933 004b 00       		.byte	0
 3934 004c 00       		.byte	0
 3935 004d 08       		.uleb128 0x8
 3936 004e 13       		.uleb128 0x13
 3937 004f 01       		.byte	0x1
 3938 0050 0B       		.uleb128 0xb
 3939 0051 0B       		.uleb128 0xb
 3940 0052 3A       		.uleb128 0x3a
 3941 0053 0B       		.uleb128 0xb
 3942 0054 3B       		.uleb128 0x3b
 3943 0055 0B       		.uleb128 0xb
 3944 0056 01       		.uleb128 0x1
 3945 0057 13       		.uleb128 0x13
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 124


 3946 0058 00       		.byte	0
 3947 0059 00       		.byte	0
 3948 005a 09       		.uleb128 0x9
 3949 005b 0D       		.uleb128 0xd
 3950 005c 00       		.byte	0
 3951 005d 03       		.uleb128 0x3
 3952 005e 0E       		.uleb128 0xe
 3953 005f 3A       		.uleb128 0x3a
 3954 0060 0B       		.uleb128 0xb
 3955 0061 3B       		.uleb128 0x3b
 3956 0062 0B       		.uleb128 0xb
 3957 0063 49       		.uleb128 0x49
 3958 0064 13       		.uleb128 0x13
 3959 0065 38       		.uleb128 0x38
 3960 0066 0B       		.uleb128 0xb
 3961 0067 00       		.byte	0
 3962 0068 00       		.byte	0
 3963 0069 0A       		.uleb128 0xa
 3964 006a 16       		.uleb128 0x16
 3965 006b 00       		.byte	0
 3966 006c 03       		.uleb128 0x3
 3967 006d 0E       		.uleb128 0xe
 3968 006e 3A       		.uleb128 0x3a
 3969 006f 0B       		.uleb128 0xb
 3970 0070 3B       		.uleb128 0x3b
 3971 0071 0B       		.uleb128 0xb
 3972 0072 49       		.uleb128 0x49
 3973 0073 13       		.uleb128 0x13
 3974 0074 00       		.byte	0
 3975 0075 00       		.byte	0
 3976 0076 0B       		.uleb128 0xb
 3977 0077 04       		.uleb128 0x4
 3978 0078 01       		.byte	0x1
 3979 0079 0B       		.uleb128 0xb
 3980 007a 0B       		.uleb128 0xb
 3981 007b 49       		.uleb128 0x49
 3982 007c 13       		.uleb128 0x13
 3983 007d 3A       		.uleb128 0x3a
 3984 007e 0B       		.uleb128 0xb
 3985 007f 3B       		.uleb128 0x3b
 3986 0080 0B       		.uleb128 0xb
 3987 0081 01       		.uleb128 0x1
 3988 0082 13       		.uleb128 0x13
 3989 0083 00       		.byte	0
 3990 0084 00       		.byte	0
 3991 0085 0C       		.uleb128 0xc
 3992 0086 28       		.uleb128 0x28
 3993 0087 00       		.byte	0
 3994 0088 03       		.uleb128 0x3
 3995 0089 0E       		.uleb128 0xe
 3996 008a 1C       		.uleb128 0x1c
 3997 008b 0B       		.uleb128 0xb
 3998 008c 00       		.byte	0
 3999 008d 00       		.byte	0
 4000 008e 0D       		.uleb128 0xd
 4001 008f 01       		.uleb128 0x1
 4002 0090 01       		.byte	0x1
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 125


 4003 0091 49       		.uleb128 0x49
 4004 0092 13       		.uleb128 0x13
 4005 0093 01       		.uleb128 0x1
 4006 0094 13       		.uleb128 0x13
 4007 0095 00       		.byte	0
 4008 0096 00       		.byte	0
 4009 0097 0E       		.uleb128 0xe
 4010 0098 21       		.uleb128 0x21
 4011 0099 00       		.byte	0
 4012 009a 49       		.uleb128 0x49
 4013 009b 13       		.uleb128 0x13
 4014 009c 2F       		.uleb128 0x2f
 4015 009d 0B       		.uleb128 0xb
 4016 009e 00       		.byte	0
 4017 009f 00       		.byte	0
 4018 00a0 0F       		.uleb128 0xf
 4019 00a1 0D       		.uleb128 0xd
 4020 00a2 00       		.byte	0
 4021 00a3 03       		.uleb128 0x3
 4022 00a4 0E       		.uleb128 0xe
 4023 00a5 3A       		.uleb128 0x3a
 4024 00a6 0B       		.uleb128 0xb
 4025 00a7 3B       		.uleb128 0x3b
 4026 00a8 05       		.uleb128 0x5
 4027 00a9 49       		.uleb128 0x49
 4028 00aa 13       		.uleb128 0x13
 4029 00ab 38       		.uleb128 0x38
 4030 00ac 0B       		.uleb128 0xb
 4031 00ad 00       		.byte	0
 4032 00ae 00       		.byte	0
 4033 00af 10       		.uleb128 0x10
 4034 00b0 13       		.uleb128 0x13
 4035 00b1 01       		.byte	0x1
 4036 00b2 0B       		.uleb128 0xb
 4037 00b3 0B       		.uleb128 0xb
 4038 00b4 3A       		.uleb128 0x3a
 4039 00b5 0B       		.uleb128 0xb
 4040 00b6 3B       		.uleb128 0x3b
 4041 00b7 05       		.uleb128 0x5
 4042 00b8 01       		.uleb128 0x1
 4043 00b9 13       		.uleb128 0x13
 4044 00ba 00       		.byte	0
 4045 00bb 00       		.byte	0
 4046 00bc 11       		.uleb128 0x11
 4047 00bd 0D       		.uleb128 0xd
 4048 00be 00       		.byte	0
 4049 00bf 03       		.uleb128 0x3
 4050 00c0 08       		.uleb128 0x8
 4051 00c1 3A       		.uleb128 0x3a
 4052 00c2 0B       		.uleb128 0xb
 4053 00c3 3B       		.uleb128 0x3b
 4054 00c4 05       		.uleb128 0x5
 4055 00c5 49       		.uleb128 0x49
 4056 00c6 13       		.uleb128 0x13
 4057 00c7 38       		.uleb128 0x38
 4058 00c8 0B       		.uleb128 0xb
 4059 00c9 00       		.byte	0
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 126


 4060 00ca 00       		.byte	0
 4061 00cb 12       		.uleb128 0x12
 4062 00cc 26       		.uleb128 0x26
 4063 00cd 00       		.byte	0
 4064 00ce 00       		.byte	0
 4065 00cf 00       		.byte	0
 4066 00d0 13       		.uleb128 0x13
 4067 00d1 0F       		.uleb128 0xf
 4068 00d2 00       		.byte	0
 4069 00d3 0B       		.uleb128 0xb
 4070 00d4 0B       		.uleb128 0xb
 4071 00d5 00       		.byte	0
 4072 00d6 00       		.byte	0
 4073 00d7 14       		.uleb128 0x14
 4074 00d8 2E       		.uleb128 0x2e
 4075 00d9 01       		.byte	0x1
 4076 00da 03       		.uleb128 0x3
 4077 00db 0E       		.uleb128 0xe
 4078 00dc 3A       		.uleb128 0x3a
 4079 00dd 0B       		.uleb128 0xb
 4080 00de 3B       		.uleb128 0x3b
 4081 00df 05       		.uleb128 0x5
 4082 00e0 27       		.uleb128 0x27
 4083 00e1 19       		.uleb128 0x19
 4084 00e2 49       		.uleb128 0x49
 4085 00e3 13       		.uleb128 0x13
 4086 00e4 11       		.uleb128 0x11
 4087 00e5 01       		.uleb128 0x1
 4088 00e6 12       		.uleb128 0x12
 4089 00e7 06       		.uleb128 0x6
 4090 00e8 40       		.uleb128 0x40
 4091 00e9 18       		.uleb128 0x18
 4092 00ea 9642     		.uleb128 0x2116
 4093 00ec 19       		.uleb128 0x19
 4094 00ed 01       		.uleb128 0x1
 4095 00ee 13       		.uleb128 0x13
 4096 00ef 00       		.byte	0
 4097 00f0 00       		.byte	0
 4098 00f1 15       		.uleb128 0x15
 4099 00f2 05       		.uleb128 0x5
 4100 00f3 00       		.byte	0
 4101 00f4 03       		.uleb128 0x3
 4102 00f5 0E       		.uleb128 0xe
 4103 00f6 3A       		.uleb128 0x3a
 4104 00f7 0B       		.uleb128 0xb
 4105 00f8 3B       		.uleb128 0x3b
 4106 00f9 05       		.uleb128 0x5
 4107 00fa 49       		.uleb128 0x49
 4108 00fb 13       		.uleb128 0x13
 4109 00fc 02       		.uleb128 0x2
 4110 00fd 17       		.uleb128 0x17
 4111 00fe 00       		.byte	0
 4112 00ff 00       		.byte	0
 4113 0100 16       		.uleb128 0x16
 4114 0101 34       		.uleb128 0x34
 4115 0102 00       		.byte	0
 4116 0103 03       		.uleb128 0x3
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 127


 4117 0104 0E       		.uleb128 0xe
 4118 0105 3A       		.uleb128 0x3a
 4119 0106 0B       		.uleb128 0xb
 4120 0107 3B       		.uleb128 0x3b
 4121 0108 05       		.uleb128 0x5
 4122 0109 49       		.uleb128 0x49
 4123 010a 13       		.uleb128 0x13
 4124 010b 02       		.uleb128 0x2
 4125 010c 17       		.uleb128 0x17
 4126 010d 00       		.byte	0
 4127 010e 00       		.byte	0
 4128 010f 17       		.uleb128 0x17
 4129 0110 2E       		.uleb128 0x2e
 4130 0111 01       		.byte	0x1
 4131 0112 03       		.uleb128 0x3
 4132 0113 0E       		.uleb128 0xe
 4133 0114 3A       		.uleb128 0x3a
 4134 0115 0B       		.uleb128 0xb
 4135 0116 3B       		.uleb128 0x3b
 4136 0117 05       		.uleb128 0x5
 4137 0118 27       		.uleb128 0x27
 4138 0119 19       		.uleb128 0x19
 4139 011a 11       		.uleb128 0x11
 4140 011b 01       		.uleb128 0x1
 4141 011c 12       		.uleb128 0x12
 4142 011d 06       		.uleb128 0x6
 4143 011e 40       		.uleb128 0x40
 4144 011f 18       		.uleb128 0x18
 4145 0120 9742     		.uleb128 0x2117
 4146 0122 19       		.uleb128 0x19
 4147 0123 01       		.uleb128 0x1
 4148 0124 13       		.uleb128 0x13
 4149 0125 00       		.byte	0
 4150 0126 00       		.byte	0
 4151 0127 18       		.uleb128 0x18
 4152 0128 898201   		.uleb128 0x4109
 4153 012b 00       		.byte	0
 4154 012c 11       		.uleb128 0x11
 4155 012d 01       		.uleb128 0x1
 4156 012e 31       		.uleb128 0x31
 4157 012f 13       		.uleb128 0x13
 4158 0130 00       		.byte	0
 4159 0131 00       		.byte	0
 4160 0132 19       		.uleb128 0x19
 4161 0133 2E       		.uleb128 0x2e
 4162 0134 00       		.byte	0
 4163 0135 3F       		.uleb128 0x3f
 4164 0136 19       		.uleb128 0x19
 4165 0137 03       		.uleb128 0x3
 4166 0138 0E       		.uleb128 0xe
 4167 0139 3A       		.uleb128 0x3a
 4168 013a 0B       		.uleb128 0xb
 4169 013b 3B       		.uleb128 0x3b
 4170 013c 0B       		.uleb128 0xb
 4171 013d 27       		.uleb128 0x27
 4172 013e 19       		.uleb128 0x19
 4173 013f 49       		.uleb128 0x49
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 128


 4174 0140 13       		.uleb128 0x13
 4175 0141 11       		.uleb128 0x11
 4176 0142 01       		.uleb128 0x1
 4177 0143 12       		.uleb128 0x12
 4178 0144 06       		.uleb128 0x6
 4179 0145 40       		.uleb128 0x40
 4180 0146 18       		.uleb128 0x18
 4181 0147 9742     		.uleb128 0x2117
 4182 0149 19       		.uleb128 0x19
 4183 014a 00       		.byte	0
 4184 014b 00       		.byte	0
 4185 014c 1A       		.uleb128 0x1a
 4186 014d 2E       		.uleb128 0x2e
 4187 014e 01       		.byte	0x1
 4188 014f 3F       		.uleb128 0x3f
 4189 0150 19       		.uleb128 0x19
 4190 0151 03       		.uleb128 0x3
 4191 0152 0E       		.uleb128 0xe
 4192 0153 3A       		.uleb128 0x3a
 4193 0154 0B       		.uleb128 0xb
 4194 0155 3B       		.uleb128 0x3b
 4195 0156 05       		.uleb128 0x5
 4196 0157 27       		.uleb128 0x27
 4197 0158 19       		.uleb128 0x19
 4198 0159 49       		.uleb128 0x49
 4199 015a 13       		.uleb128 0x13
 4200 015b 11       		.uleb128 0x11
 4201 015c 01       		.uleb128 0x1
 4202 015d 12       		.uleb128 0x12
 4203 015e 06       		.uleb128 0x6
 4204 015f 40       		.uleb128 0x40
 4205 0160 18       		.uleb128 0x18
 4206 0161 9742     		.uleb128 0x2117
 4207 0163 19       		.uleb128 0x19
 4208 0164 01       		.uleb128 0x1
 4209 0165 13       		.uleb128 0x13
 4210 0166 00       		.byte	0
 4211 0167 00       		.byte	0
 4212 0168 1B       		.uleb128 0x1b
 4213 0169 898201   		.uleb128 0x4109
 4214 016c 01       		.byte	0x1
 4215 016d 11       		.uleb128 0x11
 4216 016e 01       		.uleb128 0x1
 4217 016f 31       		.uleb128 0x31
 4218 0170 13       		.uleb128 0x13
 4219 0171 01       		.uleb128 0x1
 4220 0172 13       		.uleb128 0x13
 4221 0173 00       		.byte	0
 4222 0174 00       		.byte	0
 4223 0175 1C       		.uleb128 0x1c
 4224 0176 8A8201   		.uleb128 0x410a
 4225 0179 00       		.byte	0
 4226 017a 02       		.uleb128 0x2
 4227 017b 18       		.uleb128 0x18
 4228 017c 9142     		.uleb128 0x2111
 4229 017e 18       		.uleb128 0x18
 4230 017f 00       		.byte	0
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 129


 4231 0180 00       		.byte	0
 4232 0181 1D       		.uleb128 0x1d
 4233 0182 2E       		.uleb128 0x2e
 4234 0183 01       		.byte	0x1
 4235 0184 3F       		.uleb128 0x3f
 4236 0185 19       		.uleb128 0x19
 4237 0186 03       		.uleb128 0x3
 4238 0187 0E       		.uleb128 0xe
 4239 0188 3A       		.uleb128 0x3a
 4240 0189 0B       		.uleb128 0xb
 4241 018a 3B       		.uleb128 0x3b
 4242 018b 05       		.uleb128 0x5
 4243 018c 27       		.uleb128 0x27
 4244 018d 19       		.uleb128 0x19
 4245 018e 11       		.uleb128 0x11
 4246 018f 01       		.uleb128 0x1
 4247 0190 12       		.uleb128 0x12
 4248 0191 06       		.uleb128 0x6
 4249 0192 40       		.uleb128 0x40
 4250 0193 18       		.uleb128 0x18
 4251 0194 9742     		.uleb128 0x2117
 4252 0196 19       		.uleb128 0x19
 4253 0197 01       		.uleb128 0x1
 4254 0198 13       		.uleb128 0x13
 4255 0199 00       		.byte	0
 4256 019a 00       		.byte	0
 4257 019b 1E       		.uleb128 0x1e
 4258 019c 34       		.uleb128 0x34
 4259 019d 00       		.byte	0
 4260 019e 03       		.uleb128 0x3
 4261 019f 0E       		.uleb128 0xe
 4262 01a0 3A       		.uleb128 0x3a
 4263 01a1 0B       		.uleb128 0xb
 4264 01a2 3B       		.uleb128 0x3b
 4265 01a3 05       		.uleb128 0x5
 4266 01a4 49       		.uleb128 0x49
 4267 01a5 13       		.uleb128 0x13
 4268 01a6 1C       		.uleb128 0x1c
 4269 01a7 0B       		.uleb128 0xb
 4270 01a8 00       		.byte	0
 4271 01a9 00       		.byte	0
 4272 01aa 1F       		.uleb128 0x1f
 4273 01ab 898201   		.uleb128 0x4109
 4274 01ae 01       		.byte	0x1
 4275 01af 11       		.uleb128 0x11
 4276 01b0 01       		.uleb128 0x1
 4277 01b1 31       		.uleb128 0x31
 4278 01b2 13       		.uleb128 0x13
 4279 01b3 00       		.byte	0
 4280 01b4 00       		.byte	0
 4281 01b5 20       		.uleb128 0x20
 4282 01b6 26       		.uleb128 0x26
 4283 01b7 00       		.byte	0
 4284 01b8 49       		.uleb128 0x49
 4285 01b9 13       		.uleb128 0x13
 4286 01ba 00       		.byte	0
 4287 01bb 00       		.byte	0
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 130


 4288 01bc 21       		.uleb128 0x21
 4289 01bd 2E       		.uleb128 0x2e
 4290 01be 00       		.byte	0
 4291 01bf 3F       		.uleb128 0x3f
 4292 01c0 19       		.uleb128 0x19
 4293 01c1 03       		.uleb128 0x3
 4294 01c2 0E       		.uleb128 0xe
 4295 01c3 3A       		.uleb128 0x3a
 4296 01c4 0B       		.uleb128 0xb
 4297 01c5 3B       		.uleb128 0x3b
 4298 01c6 05       		.uleb128 0x5
 4299 01c7 27       		.uleb128 0x27
 4300 01c8 19       		.uleb128 0x19
 4301 01c9 11       		.uleb128 0x11
 4302 01ca 01       		.uleb128 0x1
 4303 01cb 12       		.uleb128 0x12
 4304 01cc 06       		.uleb128 0x6
 4305 01cd 40       		.uleb128 0x40
 4306 01ce 18       		.uleb128 0x18
 4307 01cf 9742     		.uleb128 0x2117
 4308 01d1 19       		.uleb128 0x19
 4309 01d2 00       		.byte	0
 4310 01d3 00       		.byte	0
 4311 01d4 22       		.uleb128 0x22
 4312 01d5 34       		.uleb128 0x34
 4313 01d6 00       		.byte	0
 4314 01d7 03       		.uleb128 0x3
 4315 01d8 0E       		.uleb128 0xe
 4316 01d9 3A       		.uleb128 0x3a
 4317 01da 0B       		.uleb128 0xb
 4318 01db 3B       		.uleb128 0x3b
 4319 01dc 05       		.uleb128 0x5
 4320 01dd 49       		.uleb128 0x49
 4321 01de 13       		.uleb128 0x13
 4322 01df 02       		.uleb128 0x2
 4323 01e0 18       		.uleb128 0x18
 4324 01e1 00       		.byte	0
 4325 01e2 00       		.byte	0
 4326 01e3 23       		.uleb128 0x23
 4327 01e4 05       		.uleb128 0x5
 4328 01e5 00       		.byte	0
 4329 01e6 03       		.uleb128 0x3
 4330 01e7 0E       		.uleb128 0xe
 4331 01e8 3A       		.uleb128 0x3a
 4332 01e9 0B       		.uleb128 0xb
 4333 01ea 3B       		.uleb128 0x3b
 4334 01eb 05       		.uleb128 0x5
 4335 01ec 49       		.uleb128 0x49
 4336 01ed 13       		.uleb128 0x13
 4337 01ee 02       		.uleb128 0x2
 4338 01ef 18       		.uleb128 0x18
 4339 01f0 00       		.byte	0
 4340 01f1 00       		.byte	0
 4341 01f2 24       		.uleb128 0x24
 4342 01f3 2E       		.uleb128 0x2e
 4343 01f4 01       		.byte	0x1
 4344 01f5 3F       		.uleb128 0x3f
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 131


 4345 01f6 19       		.uleb128 0x19
 4346 01f7 03       		.uleb128 0x3
 4347 01f8 0E       		.uleb128 0xe
 4348 01f9 3A       		.uleb128 0x3a
 4349 01fa 0B       		.uleb128 0xb
 4350 01fb 3B       		.uleb128 0x3b
 4351 01fc 05       		.uleb128 0x5
 4352 01fd 27       		.uleb128 0x27
 4353 01fe 19       		.uleb128 0x19
 4354 01ff 49       		.uleb128 0x49
 4355 0200 13       		.uleb128 0x13
 4356 0201 11       		.uleb128 0x11
 4357 0202 01       		.uleb128 0x1
 4358 0203 12       		.uleb128 0x12
 4359 0204 06       		.uleb128 0x6
 4360 0205 40       		.uleb128 0x40
 4361 0206 18       		.uleb128 0x18
 4362 0207 9642     		.uleb128 0x2116
 4363 0209 19       		.uleb128 0x19
 4364 020a 01       		.uleb128 0x1
 4365 020b 13       		.uleb128 0x13
 4366 020c 00       		.byte	0
 4367 020d 00       		.byte	0
 4368 020e 25       		.uleb128 0x25
 4369 020f 34       		.uleb128 0x34
 4370 0210 00       		.byte	0
 4371 0211 03       		.uleb128 0x3
 4372 0212 08       		.uleb128 0x8
 4373 0213 3A       		.uleb128 0x3a
 4374 0214 0B       		.uleb128 0xb
 4375 0215 3B       		.uleb128 0x3b
 4376 0216 05       		.uleb128 0x5
 4377 0217 49       		.uleb128 0x49
 4378 0218 13       		.uleb128 0x13
 4379 0219 02       		.uleb128 0x2
 4380 021a 17       		.uleb128 0x17
 4381 021b 00       		.byte	0
 4382 021c 00       		.byte	0
 4383 021d 26       		.uleb128 0x26
 4384 021e 34       		.uleb128 0x34
 4385 021f 00       		.byte	0
 4386 0220 03       		.uleb128 0x3
 4387 0221 0E       		.uleb128 0xe
 4388 0222 3A       		.uleb128 0x3a
 4389 0223 0B       		.uleb128 0xb
 4390 0224 3B       		.uleb128 0x3b
 4391 0225 05       		.uleb128 0x5
 4392 0226 49       		.uleb128 0x49
 4393 0227 13       		.uleb128 0x13
 4394 0228 3F       		.uleb128 0x3f
 4395 0229 19       		.uleb128 0x19
 4396 022a 3C       		.uleb128 0x3c
 4397 022b 19       		.uleb128 0x19
 4398 022c 00       		.byte	0
 4399 022d 00       		.byte	0
 4400 022e 27       		.uleb128 0x27
 4401 022f 34       		.uleb128 0x34
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 132


 4402 0230 00       		.byte	0
 4403 0231 03       		.uleb128 0x3
 4404 0232 0E       		.uleb128 0xe
 4405 0233 3A       		.uleb128 0x3a
 4406 0234 0B       		.uleb128 0xb
 4407 0235 3B       		.uleb128 0x3b
 4408 0236 0B       		.uleb128 0xb
 4409 0237 49       		.uleb128 0x49
 4410 0238 13       		.uleb128 0x13
 4411 0239 3F       		.uleb128 0x3f
 4412 023a 19       		.uleb128 0x19
 4413 023b 02       		.uleb128 0x2
 4414 023c 18       		.uleb128 0x18
 4415 023d 00       		.byte	0
 4416 023e 00       		.byte	0
 4417 023f 28       		.uleb128 0x28
 4418 0240 2E       		.uleb128 0x2e
 4419 0241 00       		.byte	0
 4420 0242 3F       		.uleb128 0x3f
 4421 0243 19       		.uleb128 0x19
 4422 0244 3C       		.uleb128 0x3c
 4423 0245 19       		.uleb128 0x19
 4424 0246 6E       		.uleb128 0x6e
 4425 0247 0E       		.uleb128 0xe
 4426 0248 03       		.uleb128 0x3
 4427 0249 0E       		.uleb128 0xe
 4428 024a 3A       		.uleb128 0x3a
 4429 024b 0B       		.uleb128 0xb
 4430 024c 3B       		.uleb128 0x3b
 4431 024d 05       		.uleb128 0x5
 4432 024e 00       		.byte	0
 4433 024f 00       		.byte	0
 4434 0250 29       		.uleb128 0x29
 4435 0251 2E       		.uleb128 0x2e
 4436 0252 00       		.byte	0
 4437 0253 3F       		.uleb128 0x3f
 4438 0254 19       		.uleb128 0x19
 4439 0255 3C       		.uleb128 0x3c
 4440 0256 19       		.uleb128 0x19
 4441 0257 6E       		.uleb128 0x6e
 4442 0258 0E       		.uleb128 0xe
 4443 0259 03       		.uleb128 0x3
 4444 025a 0E       		.uleb128 0xe
 4445 025b 3A       		.uleb128 0x3a
 4446 025c 0B       		.uleb128 0xb
 4447 025d 3B       		.uleb128 0x3b
 4448 025e 0B       		.uleb128 0xb
 4449 025f 00       		.byte	0
 4450 0260 00       		.byte	0
 4451 0261 00       		.byte	0
 4452              		.section	.debug_loc,"",%progbits
 4453              	.Ldebug_loc0:
 4454              	.LLST0:
 4455 0000 00000000 		.4byte	.LVL0
 4456 0004 14000000 		.4byte	.LVL3
 4457 0008 0100     		.2byte	0x1
 4458 000a 50       		.byte	0x50
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 133


 4459 000b 14000000 		.4byte	.LVL3
 4460 000f 76000000 		.4byte	.LVL9
 4461 0013 0100     		.2byte	0x1
 4462 0015 54       		.byte	0x54
 4463 0016 76000000 		.4byte	.LVL9
 4464 001a 84000000 		.4byte	.LFE20
 4465 001e 0400     		.2byte	0x4
 4466 0020 F3       		.byte	0xf3
 4467 0021 01       		.uleb128 0x1
 4468 0022 50       		.byte	0x50
 4469 0023 9F       		.byte	0x9f
 4470 0024 00000000 		.4byte	0
 4471 0028 00000000 		.4byte	0
 4472              	.LLST1:
 4473 002c 00000000 		.4byte	.LVL0
 4474 0030 12000000 		.4byte	.LVL2
 4475 0034 0100     		.2byte	0x1
 4476 0036 51       		.byte	0x51
 4477 0037 12000000 		.4byte	.LVL2
 4478 003b 76000000 		.4byte	.LVL10
 4479 003f 0100     		.2byte	0x1
 4480 0041 55       		.byte	0x55
 4481 0042 76000000 		.4byte	.LVL10
 4482 0046 84000000 		.4byte	.LFE20
 4483 004a 0400     		.2byte	0x4
 4484 004c F3       		.byte	0xf3
 4485 004d 01       		.uleb128 0x1
 4486 004e 51       		.byte	0x51
 4487 004f 9F       		.byte	0x9f
 4488 0050 00000000 		.4byte	0
 4489 0054 00000000 		.4byte	0
 4490              	.LLST2:
 4491 0058 06000000 		.4byte	.LVL1
 4492 005c 76000000 		.4byte	.LVL8
 4493 0060 0200     		.2byte	0x2
 4494 0062 30       		.byte	0x30
 4495 0063 9F       		.byte	0x9f
 4496 0064 76000000 		.4byte	.LVL8
 4497 0068 84000000 		.4byte	.LFE20
 4498 006c 0100     		.2byte	0x1
 4499 006e 50       		.byte	0x50
 4500 006f 00000000 		.4byte	0
 4501 0073 00000000 		.4byte	0
 4502              	.LLST3:
 4503 0077 00000000 		.4byte	.LVL11
 4504 007b 20000000 		.4byte	.LVL15
 4505 007f 0100     		.2byte	0x1
 4506 0081 50       		.byte	0x50
 4507 0082 20000000 		.4byte	.LVL15
 4508 0086 23000000 		.4byte	.LVL16-1
 4509 008a 0100     		.2byte	0x1
 4510 008c 51       		.byte	0x51
 4511 008d 23000000 		.4byte	.LVL16-1
 4512 0091 38000000 		.4byte	.LVL21
 4513 0095 0400     		.2byte	0x4
 4514 0097 F3       		.byte	0xf3
 4515 0098 01       		.uleb128 0x1
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 134


 4516 0099 50       		.byte	0x50
 4517 009a 9F       		.byte	0x9f
 4518 009b 38000000 		.4byte	.LVL21
 4519 009f 3E000000 		.4byte	.LVL24
 4520 00a3 0100     		.2byte	0x1
 4521 00a5 50       		.byte	0x50
 4522 00a6 3E000000 		.4byte	.LVL24
 4523 00aa 42000000 		.4byte	.LFE21
 4524 00ae 0400     		.2byte	0x4
 4525 00b0 F3       		.byte	0xf3
 4526 00b1 01       		.uleb128 0x1
 4527 00b2 50       		.byte	0x50
 4528 00b3 9F       		.byte	0x9f
 4529 00b4 00000000 		.4byte	0
 4530 00b8 00000000 		.4byte	0
 4531              	.LLST4:
 4532 00bc 00000000 		.4byte	.LVL11
 4533 00c0 1E000000 		.4byte	.LVL14
 4534 00c4 0100     		.2byte	0x1
 4535 00c6 51       		.byte	0x51
 4536 00c7 1E000000 		.4byte	.LVL14
 4537 00cb 38000000 		.4byte	.LVL21
 4538 00cf 0400     		.2byte	0x4
 4539 00d1 F3       		.byte	0xf3
 4540 00d2 01       		.uleb128 0x1
 4541 00d3 51       		.byte	0x51
 4542 00d4 9F       		.byte	0x9f
 4543 00d5 38000000 		.4byte	.LVL21
 4544 00d9 3E000000 		.4byte	.LVL24
 4545 00dd 0100     		.2byte	0x1
 4546 00df 51       		.byte	0x51
 4547 00e0 3E000000 		.4byte	.LVL24
 4548 00e4 42000000 		.4byte	.LFE21
 4549 00e8 0400     		.2byte	0x4
 4550 00ea F3       		.byte	0xf3
 4551 00eb 01       		.uleb128 0x1
 4552 00ec 51       		.byte	0x51
 4553 00ed 9F       		.byte	0x9f
 4554 00ee 00000000 		.4byte	0
 4555 00f2 00000000 		.4byte	0
 4556              	.LLST5:
 4557 00f6 24000000 		.4byte	.LVL16
 4558 00fa 28000000 		.4byte	.LVL17
 4559 00fe 0200     		.2byte	0x2
 4560 0100 30       		.byte	0x30
 4561 0101 9F       		.byte	0x9f
 4562 0102 28000000 		.4byte	.LVL17
 4563 0106 38000000 		.4byte	.LVL21
 4564 010a 0100     		.2byte	0x1
 4565 010c 53       		.byte	0x53
 4566 010d 3E000000 		.4byte	.LVL24
 4567 0111 42000000 		.4byte	.LFE21
 4568 0115 0100     		.2byte	0x1
 4569 0117 53       		.byte	0x53
 4570 0118 00000000 		.4byte	0
 4571 011c 00000000 		.4byte	0
 4572              	.LLST6:
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 135


 4573 0120 10000000 		.4byte	.LVL12
 4574 0124 1C000000 		.4byte	.LVL13
 4575 0128 0100     		.2byte	0x1
 4576 012a 53       		.byte	0x53
 4577 012b 38000000 		.4byte	.LVL21
 4578 012f 3A000000 		.4byte	.LVL22
 4579 0133 0100     		.2byte	0x1
 4580 0135 53       		.byte	0x53
 4581 0136 3C000000 		.4byte	.LVL23
 4582 013a 3E000000 		.4byte	.LVL24
 4583 013e 0100     		.2byte	0x1
 4584 0140 53       		.byte	0x53
 4585 0141 00000000 		.4byte	0
 4586 0145 00000000 		.4byte	0
 4587              	.LLST7:
 4588 0149 24000000 		.4byte	.LVL16
 4589 014d 38000000 		.4byte	.LVL21
 4590 0151 0100     		.2byte	0x1
 4591 0153 50       		.byte	0x50
 4592 0154 00000000 		.4byte	0
 4593 0158 00000000 		.4byte	0
 4594              	.LLST8:
 4595 015c 06000000 		.4byte	.LVL25
 4596 0160 19000000 		.4byte	.LVL29-1
 4597 0164 0100     		.2byte	0x1
 4598 0166 53       		.byte	0x53
 4599 0167 00000000 		.4byte	0
 4600 016b 00000000 		.4byte	0
 4601              	.LLST9:
 4602 016f 00000000 		.4byte	.LVL30
 4603 0173 37000000 		.4byte	.LVL32-1
 4604 0177 0100     		.2byte	0x1
 4605 0179 50       		.byte	0x50
 4606 017a 37000000 		.4byte	.LVL32-1
 4607 017e 40000000 		.4byte	.LFE2
 4608 0182 0400     		.2byte	0x4
 4609 0184 F3       		.byte	0xf3
 4610 0185 01       		.uleb128 0x1
 4611 0186 50       		.byte	0x50
 4612 0187 9F       		.byte	0x9f
 4613 0188 00000000 		.4byte	0
 4614 018c 00000000 		.4byte	0
 4615              	.LLST10:
 4616 0190 30000000 		.4byte	.LVL31
 4617 0194 3A000000 		.4byte	.LVL33
 4618 0198 0100     		.2byte	0x1
 4619 019a 54       		.byte	0x54
 4620 019b 3A000000 		.4byte	.LVL33
 4621 019f 40000000 		.4byte	.LFE2
 4622 01a3 0100     		.2byte	0x1
 4623 01a5 50       		.byte	0x50
 4624 01a6 00000000 		.4byte	0
 4625 01aa 00000000 		.4byte	0
 4626              	.LLST11:
 4627 01ae 02000000 		.4byte	.LVL34
 4628 01b2 22000000 		.4byte	.LVL36
 4629 01b6 0200     		.2byte	0x2
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 136


 4630 01b8 30       		.byte	0x30
 4631 01b9 9F       		.byte	0x9f
 4632 01ba 22000000 		.4byte	.LVL36
 4633 01be 2C000000 		.4byte	.LFE3
 4634 01c2 0100     		.2byte	0x1
 4635 01c4 50       		.byte	0x50
 4636 01c5 00000000 		.4byte	0
 4637 01c9 00000000 		.4byte	0
 4638              	.LLST12:
 4639 01cd 02000000 		.4byte	.LVL37
 4640 01d1 12000000 		.4byte	.LVL38
 4641 01d5 0300     		.2byte	0x3
 4642 01d7 09       		.byte	0x9
 4643 01d8 FF       		.byte	0xff
 4644 01d9 9F       		.byte	0x9f
 4645 01da 12000000 		.4byte	.LVL38
 4646 01de 14000000 		.4byte	.LVL39
 4647 01e2 0100     		.2byte	0x1
 4648 01e4 50       		.byte	0x50
 4649 01e5 18000000 		.4byte	.LVL40
 4650 01e9 25000000 		.4byte	.LVL41-1
 4651 01ed 0100     		.2byte	0x1
 4652 01ef 50       		.byte	0x50
 4653 01f0 26000000 		.4byte	.LVL41
 4654 01f4 30000000 		.4byte	.LVL43
 4655 01f8 0100     		.2byte	0x1
 4656 01fa 50       		.byte	0x50
 4657 01fb 30000000 		.4byte	.LVL43
 4658 01ff 32000000 		.4byte	.LVL44
 4659 0203 0300     		.2byte	0x3
 4660 0205 09       		.byte	0x9
 4661 0206 FF       		.byte	0xff
 4662 0207 9F       		.byte	0x9f
 4663 0208 32000000 		.4byte	.LVL44
 4664 020c 3C000000 		.4byte	.LFE4
 4665 0210 0100     		.2byte	0x1
 4666 0212 50       		.byte	0x50
 4667 0213 00000000 		.4byte	0
 4668 0217 00000000 		.4byte	0
 4669              	.LLST13:
 4670 021b 12000000 		.4byte	.LVL38
 4671 021f 30000000 		.4byte	.LVL43
 4672 0223 0100     		.2byte	0x1
 4673 0225 54       		.byte	0x54
 4674 0226 00000000 		.4byte	0
 4675 022a 00000000 		.4byte	0
 4676              	.LLST14:
 4677 022e 00000000 		.4byte	.LVL45
 4678 0232 08000000 		.4byte	.LVL46
 4679 0236 0100     		.2byte	0x1
 4680 0238 50       		.byte	0x50
 4681 0239 08000000 		.4byte	.LVL46
 4682 023d 9C000000 		.4byte	.LFE6
 4683 0241 0400     		.2byte	0x4
 4684 0243 F3       		.byte	0xf3
 4685 0244 01       		.uleb128 0x1
 4686 0245 50       		.byte	0x50
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 137


 4687 0246 9F       		.byte	0x9f
 4688 0247 00000000 		.4byte	0
 4689 024b 00000000 		.4byte	0
 4690              	.LLST15:
 4691 024f 00000000 		.4byte	.LVL45
 4692 0253 10000000 		.4byte	.LVL47
 4693 0257 0100     		.2byte	0x1
 4694 0259 51       		.byte	0x51
 4695 025a 10000000 		.4byte	.LVL47
 4696 025e 9C000000 		.4byte	.LFE6
 4697 0262 0400     		.2byte	0x4
 4698 0264 F3       		.byte	0xf3
 4699 0265 01       		.uleb128 0x1
 4700 0266 51       		.byte	0x51
 4701 0267 9F       		.byte	0x9f
 4702 0268 00000000 		.4byte	0
 4703 026c 00000000 		.4byte	0
 4704              	.LLST16:
 4705 0270 00000000 		.4byte	.LVL45
 4706 0274 18000000 		.4byte	.LVL49
 4707 0278 0100     		.2byte	0x1
 4708 027a 52       		.byte	0x52
 4709 027b 18000000 		.4byte	.LVL49
 4710 027f 96000000 		.4byte	.LVL61
 4711 0283 0100     		.2byte	0x1
 4712 0285 56       		.byte	0x56
 4713 0286 96000000 		.4byte	.LVL61
 4714 028a 9C000000 		.4byte	.LFE6
 4715 028e 0400     		.2byte	0x4
 4716 0290 F3       		.byte	0xf3
 4717 0291 01       		.uleb128 0x1
 4718 0292 52       		.byte	0x52
 4719 0293 9F       		.byte	0x9f
 4720 0294 00000000 		.4byte	0
 4721 0298 00000000 		.4byte	0
 4722              	.LLST17:
 4723 029c 14000000 		.4byte	.LVL48
 4724 02a0 18000000 		.4byte	.LVL49
 4725 02a4 0200     		.2byte	0x2
 4726 02a6 30       		.byte	0x30
 4727 02a7 9F       		.byte	0x9f
 4728 02a8 18000000 		.4byte	.LVL49
 4729 02ac 96000000 		.4byte	.LVL60
 4730 02b0 0100     		.2byte	0x1
 4731 02b2 55       		.byte	0x55
 4732 02b3 00000000 		.4byte	0
 4733 02b7 00000000 		.4byte	0
 4734              	.LLST18:
 4735 02bb 1C000000 		.4byte	.LVL50
 4736 02bf 3B000000 		.4byte	.LVL51-1
 4737 02c3 0100     		.2byte	0x1
 4738 02c5 50       		.byte	0x50
 4739 02c6 4E000000 		.4byte	.LVL52
 4740 02ca 6D000000 		.4byte	.LVL53-1
 4741 02ce 0100     		.2byte	0x1
 4742 02d0 50       		.byte	0x50
 4743 02d1 74000000 		.4byte	.LVL54
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 138


 4744 02d5 85000000 		.4byte	.LVL55-1
 4745 02d9 0100     		.2byte	0x1
 4746 02db 50       		.byte	0x50
 4747 02dc 00000000 		.4byte	0
 4748 02e0 00000000 		.4byte	0
 4749              	.LLST19:
 4750 02e4 14000000 		.4byte	.LVL48
 4751 02e8 96000000 		.4byte	.LVL59
 4752 02ec 0100     		.2byte	0x1
 4753 02ee 54       		.byte	0x54
 4754 02ef 00000000 		.4byte	0
 4755 02f3 00000000 		.4byte	0
 4756              	.LLST20:
 4757 02f7 00000000 		.4byte	.LVL62
 4758 02fb 13000000 		.4byte	.LVL63-1
 4759 02ff 0100     		.2byte	0x1
 4760 0301 50       		.byte	0x50
 4761 0302 13000000 		.4byte	.LVL63-1
 4762 0306 3C000000 		.4byte	.LFE8
 4763 030a 0400     		.2byte	0x4
 4764 030c F3       		.byte	0xf3
 4765 030d 01       		.uleb128 0x1
 4766 030e 50       		.byte	0x50
 4767 030f 9F       		.byte	0x9f
 4768 0310 00000000 		.4byte	0
 4769 0314 00000000 		.4byte	0
 4770              	.LLST21:
 4771 0318 08000000 		.4byte	.LVL66
 4772 031c 40000000 		.4byte	.LFE9
 4773 0320 0100     		.2byte	0x1
 4774 0322 53       		.byte	0x53
 4775 0323 00000000 		.4byte	0
 4776 0327 00000000 		.4byte	0
 4777              	.LLST22:
 4778 032b 02000000 		.4byte	.LVL65
 4779 032f 08000000 		.4byte	.LVL66
 4780 0333 0200     		.2byte	0x2
 4781 0335 30       		.byte	0x30
 4782 0336 9F       		.byte	0x9f
 4783 0337 08000000 		.4byte	.LVL66
 4784 033b 40000000 		.4byte	.LFE9
 4785 033f 0100     		.2byte	0x1
 4786 0341 50       		.byte	0x50
 4787 0342 00000000 		.4byte	0
 4788 0346 00000000 		.4byte	0
 4789              	.LLST23:
 4790 034a 0C000000 		.4byte	.LVL67
 4791 034e 1E000000 		.4byte	.LVL70
 4792 0352 0100     		.2byte	0x1
 4793 0354 52       		.byte	0x52
 4794 0355 20000000 		.4byte	.LVL71
 4795 0359 26000000 		.4byte	.LVL72
 4796 035d 0100     		.2byte	0x1
 4797 035f 51       		.byte	0x51
 4798 0360 26000000 		.4byte	.LVL72
 4799 0364 36000000 		.4byte	.LVL76
 4800 0368 0100     		.2byte	0x1
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 139


 4801 036a 52       		.byte	0x52
 4802 036b 00000000 		.4byte	0
 4803 036f 00000000 		.4byte	0
 4804              	.LLST24:
 4805 0373 00000000 		.4byte	.LVL77
 4806 0377 05000000 		.4byte	.LVL78-1
 4807 037b 0100     		.2byte	0x1
 4808 037d 50       		.byte	0x50
 4809 037e 05000000 		.4byte	.LVL78-1
 4810 0382 08000000 		.4byte	.LFE11
 4811 0386 0400     		.2byte	0x4
 4812 0388 F3       		.byte	0xf3
 4813 0389 01       		.uleb128 0x1
 4814 038a 50       		.byte	0x50
 4815 038b 9F       		.byte	0x9f
 4816 038c 00000000 		.4byte	0
 4817 0390 00000000 		.4byte	0
 4818              	.LLST25:
 4819 0394 00000000 		.4byte	.LVL79
 4820 0398 08000000 		.4byte	.LVL80
 4821 039c 0100     		.2byte	0x1
 4822 039e 50       		.byte	0x50
 4823 039f 08000000 		.4byte	.LVL80
 4824 03a3 0A000000 		.4byte	.LVL81
 4825 03a7 0300     		.2byte	0x3
 4826 03a9 70       		.byte	0x70
 4827 03aa 01       		.sleb128 1
 4828 03ab 9F       		.byte	0x9f
 4829 03ac 0A000000 		.4byte	.LVL81
 4830 03b0 30000000 		.4byte	.LFE12
 4831 03b4 0400     		.2byte	0x4
 4832 03b6 F3       		.byte	0xf3
 4833 03b7 01       		.uleb128 0x1
 4834 03b8 50       		.byte	0x50
 4835 03b9 9F       		.byte	0x9f
 4836 03ba 00000000 		.4byte	0
 4837 03be 00000000 		.4byte	0
 4838              	.LLST26:
 4839 03c2 00000000 		.4byte	.LVL82
 4840 03c6 0A000000 		.4byte	.LVL86
 4841 03ca 0100     		.2byte	0x1
 4842 03cc 50       		.byte	0x50
 4843 03cd 0A000000 		.4byte	.LVL86
 4844 03d1 0C000000 		.4byte	.LVL87
 4845 03d5 0300     		.2byte	0x3
 4846 03d7 70       		.byte	0x70
 4847 03d8 01       		.sleb128 1
 4848 03d9 9F       		.byte	0x9f
 4849 03da 0C000000 		.4byte	.LVL87
 4850 03de 14000000 		.4byte	.LFE13
 4851 03e2 0400     		.2byte	0x4
 4852 03e4 F3       		.byte	0xf3
 4853 03e5 01       		.uleb128 0x1
 4854 03e6 50       		.byte	0x50
 4855 03e7 9F       		.byte	0x9f
 4856 03e8 00000000 		.4byte	0
 4857 03ec 00000000 		.4byte	0
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 140


 4858              	.LLST27:
 4859 03f0 04000000 		.4byte	.LVL83
 4860 03f4 06000000 		.4byte	.LVL84
 4861 03f8 0100     		.2byte	0x1
 4862 03fa 53       		.byte	0x53
 4863 03fb 08000000 		.4byte	.LVL85
 4864 03ff 0C000000 		.4byte	.LVL87
 4865 0403 0100     		.2byte	0x1
 4866 0405 53       		.byte	0x53
 4867 0406 0C000000 		.4byte	.LVL87
 4868 040a 14000000 		.4byte	.LFE13
 4869 040e 0100     		.2byte	0x1
 4870 0410 50       		.byte	0x50
 4871 0411 00000000 		.4byte	0
 4872 0415 00000000 		.4byte	0
 4873              	.LLST28:
 4874 0419 00000000 		.4byte	.LVL88
 4875 041d 06000000 		.4byte	.LVL89
 4876 0421 0100     		.2byte	0x1
 4877 0423 50       		.byte	0x50
 4878 0424 06000000 		.4byte	.LVL89
 4879 0428 10000000 		.4byte	.LVL92
 4880 042c 0100     		.2byte	0x1
 4881 042e 54       		.byte	0x54
 4882 042f 10000000 		.4byte	.LVL92
 4883 0433 12000000 		.4byte	.LFE14
 4884 0437 0400     		.2byte	0x4
 4885 0439 F3       		.byte	0xf3
 4886 043a 01       		.uleb128 0x1
 4887 043b 50       		.byte	0x50
 4888 043c 9F       		.byte	0x9f
 4889 043d 00000000 		.4byte	0
 4890 0441 00000000 		.4byte	0
 4891              	.LLST29:
 4892 0445 00000000 		.4byte	.LVL88
 4893 0449 09000000 		.4byte	.LVL90-1
 4894 044d 0100     		.2byte	0x1
 4895 044f 51       		.byte	0x51
 4896 0450 09000000 		.4byte	.LVL90-1
 4897 0454 12000000 		.4byte	.LFE14
 4898 0458 0400     		.2byte	0x4
 4899 045a F3       		.byte	0xf3
 4900 045b 01       		.uleb128 0x1
 4901 045c 51       		.byte	0x51
 4902 045d 9F       		.byte	0x9f
 4903 045e 00000000 		.4byte	0
 4904 0462 00000000 		.4byte	0
 4905              	.LLST30:
 4906 0466 00000000 		.4byte	.LVL93
 4907 046a 08000000 		.4byte	.LVL95
 4908 046e 0100     		.2byte	0x1
 4909 0470 50       		.byte	0x50
 4910 0471 08000000 		.4byte	.LVL95
 4911 0475 0A000000 		.4byte	.LVL96
 4912 0479 0100     		.2byte	0x1
 4913 047b 53       		.byte	0x53
 4914 047c 0A000000 		.4byte	.LVL96
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 141


 4915 0480 0C000000 		.4byte	.LVL97
 4916 0484 0100     		.2byte	0x1
 4917 0486 50       		.byte	0x50
 4918 0487 0C000000 		.4byte	.LVL97
 4919 048b 17000000 		.4byte	.LVL99-1
 4920 048f 0100     		.2byte	0x1
 4921 0491 53       		.byte	0x53
 4922 0492 17000000 		.4byte	.LVL99-1
 4923 0496 1A000000 		.4byte	.LFE15
 4924 049a 0400     		.2byte	0x4
 4925 049c F3       		.byte	0xf3
 4926 049d 01       		.uleb128 0x1
 4927 049e 50       		.byte	0x50
 4928 049f 9F       		.byte	0x9f
 4929 04a0 00000000 		.4byte	0
 4930 04a4 00000000 		.4byte	0
 4931              	.LLST31:
 4932 04a8 04000000 		.4byte	.LVL94
 4933 04ac 0C000000 		.4byte	.LVL97
 4934 04b0 0200     		.2byte	0x2
 4935 04b2 30       		.byte	0x30
 4936 04b3 9F       		.byte	0x9f
 4937 04b4 0C000000 		.4byte	.LVL97
 4938 04b8 14000000 		.4byte	.LVL98
 4939 04bc 0100     		.2byte	0x1
 4940 04be 50       		.byte	0x50
 4941 04bf 18000000 		.4byte	.LVL99
 4942 04c3 1A000000 		.4byte	.LFE15
 4943 04c7 0100     		.2byte	0x1
 4944 04c9 50       		.byte	0x50
 4945 04ca 00000000 		.4byte	0
 4946 04ce 00000000 		.4byte	0
 4947              	.LLST32:
 4948 04d2 02000000 		.4byte	.LVL100
 4949 04d6 08000000 		.4byte	.LVL101
 4950 04da 0200     		.2byte	0x2
 4951 04dc 30       		.byte	0x30
 4952 04dd 9F       		.byte	0x9f
 4953 04de 08000000 		.4byte	.LVL101
 4954 04e2 18000000 		.4byte	.LVL106
 4955 04e6 0100     		.2byte	0x1
 4956 04e8 55       		.byte	0x55
 4957 04e9 18000000 		.4byte	.LVL106
 4958 04ed 1A000000 		.4byte	.LFE16
 4959 04f1 0100     		.2byte	0x1
 4960 04f3 50       		.byte	0x50
 4961 04f4 00000000 		.4byte	0
 4962 04f8 00000000 		.4byte	0
 4963              	.LLST33:
 4964 04fc 02000000 		.4byte	.LVL100
 4965 0500 08000000 		.4byte	.LVL101
 4966 0504 0200     		.2byte	0x2
 4967 0506 30       		.byte	0x30
 4968 0507 9F       		.byte	0x9f
 4969 0508 08000000 		.4byte	.LVL101
 4970 050c 18000000 		.4byte	.LVL105
 4971 0510 0100     		.2byte	0x1
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 142


 4972 0512 54       		.byte	0x54
 4973 0513 00000000 		.4byte	0
 4974 0517 00000000 		.4byte	0
 4975              	.LLST34:
 4976 051b 02000000 		.4byte	.LVL107
 4977 051f 06000000 		.4byte	.LVL108
 4978 0523 0200     		.2byte	0x2
 4979 0525 30       		.byte	0x30
 4980 0526 9F       		.byte	0x9f
 4981 0527 06000000 		.4byte	.LVL108
 4982 052b 34000000 		.4byte	.LVL114
 4983 052f 0100     		.2byte	0x1
 4984 0531 55       		.byte	0x55
 4985 0532 00000000 		.4byte	0
 4986 0536 00000000 		.4byte	0
 4987              	.LLST35:
 4988 053a 0E000000 		.4byte	.LVL109
 4989 053e 12000000 		.4byte	.LVL110
 4990 0542 0200     		.2byte	0x2
 4991 0544 30       		.byte	0x30
 4992 0545 9F       		.byte	0x9f
 4993 0546 12000000 		.4byte	.LVL110
 4994 054a 30000000 		.4byte	.LVL113
 4995 054e 0100     		.2byte	0x1
 4996 0550 54       		.byte	0x54
 4997 0551 00000000 		.4byte	0
 4998 0555 00000000 		.4byte	0
 4999              	.LLST36:
 5000 0559 0E000000 		.4byte	.LVL109
 5001 055d 30000000 		.4byte	.LVL113
 5002 0561 0100     		.2byte	0x1
 5003 0563 56       		.byte	0x56
 5004 0564 00000000 		.4byte	0
 5005 0568 00000000 		.4byte	0
 5006              	.LLST37:
 5007 056c 00000000 		.4byte	.LVL115
 5008 0570 04000000 		.4byte	.LVL116
 5009 0574 0100     		.2byte	0x1
 5010 0576 50       		.byte	0x50
 5011 0577 04000000 		.4byte	.LVL116
 5012 057b 14000000 		.4byte	.LFE23
 5013 057f 0400     		.2byte	0x4
 5014 0581 F3       		.byte	0xf3
 5015 0582 01       		.uleb128 0x1
 5016 0583 50       		.byte	0x50
 5017 0584 9F       		.byte	0x9f
 5018 0585 00000000 		.4byte	0
 5019 0589 00000000 		.4byte	0
 5020              	.LLST38:
 5021 058d 00000000 		.4byte	.LVL119
 5022 0591 04000000 		.4byte	.LVL120
 5023 0595 0100     		.2byte	0x1
 5024 0597 50       		.byte	0x50
 5025 0598 04000000 		.4byte	.LVL120
 5026 059c 14000000 		.4byte	.LFE24
 5027 05a0 0400     		.2byte	0x4
 5028 05a2 F3       		.byte	0xf3
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 143


 5029 05a3 01       		.uleb128 0x1
 5030 05a4 50       		.byte	0x50
 5031 05a5 9F       		.byte	0x9f
 5032 05a6 00000000 		.4byte	0
 5033 05aa 00000000 		.4byte	0
 5034              	.LLST39:
 5035 05ae 00000000 		.4byte	.LVL122
 5036 05b2 12000000 		.4byte	.LVL123
 5037 05b6 0100     		.2byte	0x1
 5038 05b8 50       		.byte	0x50
 5039 05b9 12000000 		.4byte	.LVL123
 5040 05bd 1A000000 		.4byte	.LVL124
 5041 05c1 0400     		.2byte	0x4
 5042 05c3 F3       		.byte	0xf3
 5043 05c4 01       		.uleb128 0x1
 5044 05c5 50       		.byte	0x50
 5045 05c6 9F       		.byte	0x9f
 5046 05c7 1A000000 		.4byte	.LVL124
 5047 05cb 1C000000 		.4byte	.LVL125
 5048 05cf 0100     		.2byte	0x1
 5049 05d1 50       		.byte	0x50
 5050 05d2 1C000000 		.4byte	.LVL125
 5051 05d6 24000000 		.4byte	.LFE25
 5052 05da 0400     		.2byte	0x4
 5053 05dc F3       		.byte	0xf3
 5054 05dd 01       		.uleb128 0x1
 5055 05de 50       		.byte	0x50
 5056 05df 9F       		.byte	0x9f
 5057 05e0 00000000 		.4byte	0
 5058 05e4 00000000 		.4byte	0
 5059              	.LLST40:
 5060 05e8 20000000 		.4byte	.LVL126
 5061 05ec 22000000 		.4byte	.LVL127
 5062 05f0 0100     		.2byte	0x1
 5063 05f2 50       		.byte	0x50
 5064 05f3 00000000 		.4byte	0
 5065 05f7 00000000 		.4byte	0
 5066              	.LLST41:
 5067 05fb 00000000 		.4byte	.LVL128
 5068 05ff 07000000 		.4byte	.LVL129-1
 5069 0603 0100     		.2byte	0x1
 5070 0605 50       		.byte	0x50
 5071 0606 07000000 		.4byte	.LVL129-1
 5072 060a 3A000000 		.4byte	.LFE19
 5073 060e 0400     		.2byte	0x4
 5074 0610 F3       		.byte	0xf3
 5075 0611 01       		.uleb128 0x1
 5076 0612 50       		.byte	0x50
 5077 0613 9F       		.byte	0x9f
 5078 0614 00000000 		.4byte	0
 5079 0618 00000000 		.4byte	0
 5080              	.LLST42:
 5081 061c 00000000 		.4byte	.LVL128
 5082 0620 07000000 		.4byte	.LVL129-1
 5083 0624 0100     		.2byte	0x1
 5084 0626 51       		.byte	0x51
 5085 0627 07000000 		.4byte	.LVL129-1
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 144


 5086 062b 38000000 		.4byte	.LVL143
 5087 062f 0100     		.2byte	0x1
 5088 0631 56       		.byte	0x56
 5089 0632 38000000 		.4byte	.LVL143
 5090 0636 3A000000 		.4byte	.LFE19
 5091 063a 0400     		.2byte	0x4
 5092 063c F3       		.byte	0xf3
 5093 063d 01       		.uleb128 0x1
 5094 063e 51       		.byte	0x51
 5095 063f 9F       		.byte	0x9f
 5096 0640 00000000 		.4byte	0
 5097 0644 00000000 		.4byte	0
 5098              	.LLST43:
 5099 0648 1C000000 		.4byte	.LVL135
 5100 064c 20000000 		.4byte	.LVL136
 5101 0650 0100     		.2byte	0x1
 5102 0652 50       		.byte	0x50
 5103 0653 20000000 		.4byte	.LVL136
 5104 0657 38000000 		.4byte	.LVL141
 5105 065b 0100     		.2byte	0x1
 5106 065d 54       		.byte	0x54
 5107 065e 00000000 		.4byte	0
 5108 0662 00000000 		.4byte	0
 5109              	.LLST44:
 5110 0666 30000000 		.4byte	.LVL139
 5111 066a 32000000 		.4byte	.LVL140
 5112 066e 0100     		.2byte	0x1
 5113 0670 50       		.byte	0x50
 5114 0671 00000000 		.4byte	0
 5115 0675 00000000 		.4byte	0
 5116              	.LLST45:
 5117 0679 14000000 		.4byte	.LVL132
 5118 067d 16000000 		.4byte	.LVL133
 5119 0681 0100     		.2byte	0x1
 5120 0683 50       		.byte	0x50
 5121 0684 16000000 		.4byte	.LVL133
 5122 0688 19000000 		.4byte	.LVL134-1
 5123 068c 0100     		.2byte	0x1
 5124 068e 51       		.byte	0x51
 5125 068f 00000000 		.4byte	0
 5126 0693 00000000 		.4byte	0
 5127              	.LLST46:
 5128 0697 0A000000 		.4byte	.LVL130
 5129 069b 11000000 		.4byte	.LVL131-1
 5130 069f 0100     		.2byte	0x1
 5131 06a1 50       		.byte	0x50
 5132 06a2 11000000 		.4byte	.LVL131-1
 5133 06a6 38000000 		.4byte	.LVL142
 5134 06aa 0100     		.2byte	0x1
 5135 06ac 55       		.byte	0x55
 5136 06ad 00000000 		.4byte	0
 5137 06b1 00000000 		.4byte	0
 5138              	.LLST47:
 5139 06b5 04000000 		.4byte	.LVL144
 5140 06b9 2A000000 		.4byte	.LVL147
 5141 06bd 0200     		.2byte	0x2
 5142 06bf 30       		.byte	0x30
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 145


 5143 06c0 9F       		.byte	0x9f
 5144 06c1 2A000000 		.4byte	.LVL147
 5145 06c5 80000000 		.4byte	.LVL153
 5146 06c9 0100     		.2byte	0x1
 5147 06cb 55       		.byte	0x55
 5148 06cc 82000000 		.4byte	.LVL154
 5149 06d0 20010000 		.4byte	.LVL171
 5150 06d4 0100     		.2byte	0x1
 5151 06d6 55       		.byte	0x55
 5152 06d7 20010000 		.4byte	.LVL171
 5153 06db 4C010000 		.4byte	.LFE17
 5154 06df 0100     		.2byte	0x1
 5155 06e1 50       		.byte	0x50
 5156 06e2 00000000 		.4byte	0
 5157 06e6 00000000 		.4byte	0
 5158              	.LLST48:
 5159 06ea 24000000 		.4byte	.LVL146
 5160 06ee 2A000000 		.4byte	.LVL147
 5161 06f2 0200     		.2byte	0x2
 5162 06f4 30       		.byte	0x30
 5163 06f5 9F       		.byte	0x9f
 5164 06f6 2A000000 		.4byte	.LVL147
 5165 06fa AE000000 		.4byte	.LVL157
 5166 06fe 0100     		.2byte	0x1
 5167 0700 56       		.byte	0x56
 5168 0701 AE000000 		.4byte	.LVL157
 5169 0705 FA000000 		.4byte	.LVL163
 5170 0709 0100     		.2byte	0x1
 5171 070b 54       		.byte	0x54
 5172 070c FC000000 		.4byte	.LVL164
 5173 0710 20010000 		.4byte	.LVL170
 5174 0714 0100     		.2byte	0x1
 5175 0716 54       		.byte	0x54
 5176 0717 00000000 		.4byte	0
 5177 071b 00000000 		.4byte	0
 5178              	.LLST49:
 5179 071f 04000000 		.4byte	.LVL144
 5180 0723 2A000000 		.4byte	.LVL147
 5181 0727 0200     		.2byte	0x2
 5182 0729 30       		.byte	0x30
 5183 072a 9F       		.byte	0x9f
 5184 072b 78000000 		.4byte	.LVL152
 5185 072f A6000000 		.4byte	.LVL156
 5186 0733 0100     		.2byte	0x1
 5187 0735 50       		.byte	0x50
 5188 0736 00000000 		.4byte	0
 5189 073a 00000000 		.4byte	0
 5190              	.LLST50:
 5191 073e 34000000 		.4byte	.LVL148
 5192 0742 A6000000 		.4byte	.LVL156
 5193 0746 0100     		.2byte	0x1
 5194 0748 54       		.byte	0x54
 5195 0749 B8000000 		.4byte	.LVL158
 5196 074d F4000000 		.4byte	.LVL162
 5197 0751 0100     		.2byte	0x1
 5198 0753 56       		.byte	0x56
 5199 0754 06010000 		.4byte	.LVL165
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 146


 5200 0758 0B010000 		.4byte	.LVL166-1
 5201 075c 0100     		.2byte	0x1
 5202 075e 51       		.byte	0x51
 5203 075f 00000000 		.4byte	0
 5204 0763 00000000 		.4byte	0
 5205              	.LLST51:
 5206 0767 02000000 		.4byte	.LVL172
 5207 076b 06000000 		.4byte	.LVL173
 5208 076f 0200     		.2byte	0x2
 5209 0771 30       		.byte	0x30
 5210 0772 9F       		.byte	0x9f
 5211 0773 06000000 		.4byte	.LVL173
 5212 0777 1C000000 		.4byte	.LVL177
 5213 077b 0100     		.2byte	0x1
 5214 077d 54       		.byte	0x54
 5215 077e 00000000 		.4byte	0
 5216 0782 00000000 		.4byte	0
 5217              	.LLST52:
 5218 0786 10000000 		.4byte	.LVL174
 5219 078a 15000000 		.4byte	.LVL175-1
 5220 078e 0100     		.2byte	0x1
 5221 0790 51       		.byte	0x51
 5222 0791 00000000 		.4byte	0
 5223 0795 00000000 		.4byte	0
 5224              	.LLST53:
 5225 0799 0A000000 		.4byte	.LVL183
 5226 079d 13000000 		.4byte	.LVL185-1
 5227 07a1 0100     		.2byte	0x1
 5228 07a3 53       		.byte	0x53
 5229 07a4 1C000000 		.4byte	.LVL187
 5230 07a8 25000000 		.4byte	.LVL189-1
 5231 07ac 0100     		.2byte	0x1
 5232 07ae 53       		.byte	0x53
 5233 07af 2E000000 		.4byte	.LVL191
 5234 07b3 3B000000 		.4byte	.LVL194-1
 5235 07b7 0100     		.2byte	0x1
 5236 07b9 53       		.byte	0x53
 5237 07ba 48000000 		.4byte	.LVL197
 5238 07be 4F000000 		.4byte	.LVL199-1
 5239 07c2 0100     		.2byte	0x1
 5240 07c4 53       		.byte	0x53
 5241 07c5 00000000 		.4byte	0
 5242 07c9 00000000 		.4byte	0
 5243              	.LLST54:
 5244 07cd 06000000 		.4byte	.LVL182
 5245 07d1 13000000 		.4byte	.LVL185-1
 5246 07d5 0100     		.2byte	0x1
 5247 07d7 50       		.byte	0x50
 5248 07d8 18000000 		.4byte	.LVL186
 5249 07dc 25000000 		.4byte	.LVL189-1
 5250 07e0 0100     		.2byte	0x1
 5251 07e2 50       		.byte	0x50
 5252 07e3 2A000000 		.4byte	.LVL190
 5253 07e7 3B000000 		.4byte	.LVL194-1
 5254 07eb 0100     		.2byte	0x1
 5255 07ed 50       		.byte	0x50
 5256 07ee 46000000 		.4byte	.LVL196
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 147


 5257 07f2 4F000000 		.4byte	.LVL199-1
 5258 07f6 0100     		.2byte	0x1
 5259 07f8 50       		.byte	0x50
 5260 07f9 00000000 		.4byte	0
 5261 07fd 00000000 		.4byte	0
 5262              		.section	.debug_aranges,"",%progbits
 5263 0000 E4000000 		.4byte	0xe4
 5264 0004 0200     		.2byte	0x2
 5265 0006 00000000 		.4byte	.Ldebug_info0
 5266 000a 04       		.byte	0x4
 5267 000b 00       		.byte	0
 5268 000c 0000     		.2byte	0
 5269 000e 0000     		.2byte	0
 5270 0010 00000000 		.4byte	.LFB20
 5271 0014 84000000 		.4byte	.LFE20-.LFB20
 5272 0018 00000000 		.4byte	.LFB21
 5273 001c 42000000 		.4byte	.LFE21-.LFB21
 5274 0020 00000000 		.4byte	.LFB7
 5275 0024 24000000 		.4byte	.LFE7-.LFB7
 5276 0028 00000000 		.4byte	.LFB1
 5277 002c 10000000 		.4byte	.LFE1-.LFB1
 5278 0030 00000000 		.4byte	.LFB2
 5279 0034 40000000 		.4byte	.LFE2-.LFB2
 5280 0038 00000000 		.4byte	.LFB3
 5281 003c 2C000000 		.4byte	.LFE3-.LFB3
 5282 0040 00000000 		.4byte	.LFB4
 5283 0044 3C000000 		.4byte	.LFE4-.LFB4
 5284 0048 00000000 		.4byte	.LFB6
 5285 004c 9C000000 		.4byte	.LFE6-.LFB6
 5286 0050 00000000 		.4byte	.LFB8
 5287 0054 3C000000 		.4byte	.LFE8-.LFB8
 5288 0058 00000000 		.4byte	.LFB9
 5289 005c 40000000 		.4byte	.LFE9-.LFB9
 5290 0060 00000000 		.4byte	.LFB10
 5291 0064 02000000 		.4byte	.LFE10-.LFB10
 5292 0068 00000000 		.4byte	.LFB11
 5293 006c 08000000 		.4byte	.LFE11-.LFB11
 5294 0070 00000000 		.4byte	.LFB12
 5295 0074 30000000 		.4byte	.LFE12-.LFB12
 5296 0078 00000000 		.4byte	.LFB13
 5297 007c 14000000 		.4byte	.LFE13-.LFB13
 5298 0080 00000000 		.4byte	.LFB14
 5299 0084 12000000 		.4byte	.LFE14-.LFB14
 5300 0088 00000000 		.4byte	.LFB15
 5301 008c 1A000000 		.4byte	.LFE15-.LFB15
 5302 0090 00000000 		.4byte	.LFB16
 5303 0094 1A000000 		.4byte	.LFE16-.LFB16
 5304 0098 00000000 		.4byte	.LFB22
 5305 009c 3C000000 		.4byte	.LFE22-.LFB22
 5306 00a0 00000000 		.4byte	.LFB23
 5307 00a4 14000000 		.4byte	.LFE23-.LFB23
 5308 00a8 00000000 		.4byte	.LFB24
 5309 00ac 14000000 		.4byte	.LFE24-.LFB24
 5310 00b0 00000000 		.4byte	.LFB25
 5311 00b4 24000000 		.4byte	.LFE25-.LFB25
 5312 00b8 00000000 		.4byte	.LFB19
 5313 00bc 3A000000 		.4byte	.LFE19-.LFB19
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 148


 5314 00c0 00000000 		.4byte	.LFB17
 5315 00c4 4C010000 		.4byte	.LFE17-.LFB17
 5316 00c8 00000000 		.4byte	.LFB18
 5317 00cc 24000000 		.4byte	.LFE18-.LFB18
 5318 00d0 00000000 		.4byte	.LFB5
 5319 00d4 14000000 		.4byte	.LFE5-.LFB5
 5320 00d8 00000000 		.4byte	.LFB26
 5321 00dc 60000000 		.4byte	.LFE26-.LFB26
 5322 00e0 00000000 		.4byte	0
 5323 00e4 00000000 		.4byte	0
 5324              		.section	.debug_ranges,"",%progbits
 5325              	.Ldebug_ranges0:
 5326 0000 00000000 		.4byte	.LFB20
 5327 0004 84000000 		.4byte	.LFE20
 5328 0008 00000000 		.4byte	.LFB21
 5329 000c 42000000 		.4byte	.LFE21
 5330 0010 00000000 		.4byte	.LFB7
 5331 0014 24000000 		.4byte	.LFE7
 5332 0018 00000000 		.4byte	.LFB1
 5333 001c 10000000 		.4byte	.LFE1
 5334 0020 00000000 		.4byte	.LFB2
 5335 0024 40000000 		.4byte	.LFE2
 5336 0028 00000000 		.4byte	.LFB3
 5337 002c 2C000000 		.4byte	.LFE3
 5338 0030 00000000 		.4byte	.LFB4
 5339 0034 3C000000 		.4byte	.LFE4
 5340 0038 00000000 		.4byte	.LFB6
 5341 003c 9C000000 		.4byte	.LFE6
 5342 0040 00000000 		.4byte	.LFB8
 5343 0044 3C000000 		.4byte	.LFE8
 5344 0048 00000000 		.4byte	.LFB9
 5345 004c 40000000 		.4byte	.LFE9
 5346 0050 00000000 		.4byte	.LFB10
 5347 0054 02000000 		.4byte	.LFE10
 5348 0058 00000000 		.4byte	.LFB11
 5349 005c 08000000 		.4byte	.LFE11
 5350 0060 00000000 		.4byte	.LFB12
 5351 0064 30000000 		.4byte	.LFE12
 5352 0068 00000000 		.4byte	.LFB13
 5353 006c 14000000 		.4byte	.LFE13
 5354 0070 00000000 		.4byte	.LFB14
 5355 0074 12000000 		.4byte	.LFE14
 5356 0078 00000000 		.4byte	.LFB15
 5357 007c 1A000000 		.4byte	.LFE15
 5358 0080 00000000 		.4byte	.LFB16
 5359 0084 1A000000 		.4byte	.LFE16
 5360 0088 00000000 		.4byte	.LFB22
 5361 008c 3C000000 		.4byte	.LFE22
 5362 0090 00000000 		.4byte	.LFB23
 5363 0094 14000000 		.4byte	.LFE23
 5364 0098 00000000 		.4byte	.LFB24
 5365 009c 14000000 		.4byte	.LFE24
 5366 00a0 00000000 		.4byte	.LFB25
 5367 00a4 24000000 		.4byte	.LFE25
 5368 00a8 00000000 		.4byte	.LFB19
 5369 00ac 3A000000 		.4byte	.LFE19
 5370 00b0 00000000 		.4byte	.LFB17
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 149


 5371 00b4 4C010000 		.4byte	.LFE17
 5372 00b8 00000000 		.4byte	.LFB18
 5373 00bc 24000000 		.4byte	.LFE18
 5374 00c0 00000000 		.4byte	.LFB5
 5375 00c4 14000000 		.4byte	.LFE5
 5376 00c8 00000000 		.4byte	.LFB26
 5377 00cc 60000000 		.4byte	.LFE26
 5378 00d0 00000000 		.4byte	0
 5379 00d4 00000000 		.4byte	0
 5380              		.section	.debug_line,"",%progbits
 5381              	.Ldebug_line0:
 5382 0000 BB040000 		.section	.debug_str,"MS",%progbits,1
 5382      0200D600 
 5382      00000201 
 5382      FB0E0D00 
 5382      01010101 
 5383              	.LASF152:
 5384 0000 43617053 		.ascii	"CapSense_SsCSDGetColSnsClkDivider\000"
 5384      656E7365 
 5384      5F537343 
 5384      53444765 
 5384      74436F6C 
 5385              	.LASF128:
 5386 0022 73656E73 		.ascii	"sensorElement\000"
 5386      6F72456C 
 5386      656D656E 
 5386      7400
 5387              	.LASF125:
 5388 0030 7363616E 		.ascii	"scanStatus\000"
 5388      53746174 
 5388      757300
 5389              	.LASF160:
 5390 003b 43617053 		.ascii	"CapSense_SsCSDDisableMode\000"
 5390      656E7365 
 5390      5F537343 
 5390      53444469 
 5390      7361626C 
 5391              	.LASF137:
 5392 0055 43617053 		.ascii	"CapSense_SsSetIOsInDefaultState\000"
 5392      656E7365 
 5392      5F537353 
 5392      6574494F 
 5392      73496E44 
 5393              	.LASF169:
 5394 0075 43617053 		.ascii	"CapSense_BistDischargeExtCapacitors\000"
 5394      656E7365 
 5394      5F426973 
 5394      74446973 
 5394      63686172 
 5395              	.LASF173:
 5396 0099 43617053 		.ascii	"CapSense_widgetIndex\000"
 5396      656E7365 
 5396      5F776964 
 5396      67657449 
 5396      6E646578 
 5397              	.LASF80:
 5398 00ae 736E7254 		.ascii	"snrTestWidgetId\000"
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 150


 5398      65737457 
 5398      69646765 
 5398      74496400 
 5399              	.LASF198:
 5400 00be 433A5C55 		.ascii	"C:\\Users\\dmytro.fedorchenko\\Documents\\PSoC Crea"
 5400      73657273 
 5400      5C646D79 
 5400      74726F2E 
 5400      6665646F 
 5401 00ed 746F725C 		.ascii	"tor\\PWM01\\midiPlayer.cydsn\000"
 5401      50574D30 
 5401      315C6D69 
 5401      6469506C 
 5401      61796572 
 5402              	.LASF39:
 5403 0108 43617053 		.ascii	"CapSense_UNDEFINED_E\000"
 5403      656E7365 
 5403      5F554E44 
 5403      4546494E 
 5403      45445F45 
 5404              	.LASF8:
 5405 011d 756E7369 		.ascii	"unsigned int\000"
 5405      676E6564 
 5405      20696E74 
 5405      00
 5406              	.LASF71:
 5407 012a 7363616E 		.ascii	"scanCounter\000"
 5407      436F756E 
 5407      74657200 
 5408              	.LASF69:
 5409 0136 6877436C 		.ascii	"hwClock\000"
 5409      6F636B00 
 5410              	.LASF90:
 5411 013e 6D61736B 		.ascii	"mask\000"
 5411      00
 5412              	.LASF168:
 5413 0143 696E6974 		.ascii	"initStatus\000"
 5413      53746174 
 5413      757300
 5414              	.LASF139:
 5415 014e 72656756 		.ascii	"regValue\000"
 5415      616C7565 
 5415      00
 5416              	.LASF132:
 5417 0157 696E7465 		.ascii	"interruptState\000"
 5417      72727570 
 5417      74537461 
 5417      746500
 5418              	.LASF117:
 5419 0166 6C667372 		.ascii	"lfsrScale\000"
 5419      5363616C 
 5419      6500
 5420              	.LASF22:
 5421 0170 69446163 		.ascii	"iDacGain\000"
 5421      4761696E 
 5421      00
 5422              	.LASF194:
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 151


 5423 0179 536D6172 		.ascii	"SmartSense_TuneSensitivity\000"
 5423      7453656E 
 5423      73655F54 
 5423      756E6553 
 5423      656E7369 
 5424              	.LASF25:
 5425 0194 736E7343 		.ascii	"snsClkInputClock\000"
 5425      6C6B496E 
 5425      70757443 
 5425      6C6F636B 
 5425      00
 5426              	.LASF118:
 5427 01a5 6C667372 		.ascii	"lfsrRange\000"
 5427      52616E67 
 5427      6500
 5428              	.LASF136:
 5429 01af 6D6F6465 		.ascii	"mode\000"
 5429      00
 5430              	.LASF199:
 5431 01b4 43617053 		.ascii	"CapSense_IsBusy\000"
 5431      656E7365 
 5431      5F497342 
 5431      75737900 
 5432              	.LASF142:
 5433 01c4 43617053 		.ascii	"CapSense_SsSetModClkClockDivider\000"
 5433      656E7365 
 5433      5F537353 
 5433      65744D6F 
 5433      64436C6B 
 5434              	.LASF59:
 5435 01e5 43617053 		.ascii	"CapSense_RAM_WD_LIST_STRUCT\000"
 5435      656E7365 
 5435      5F52414D 
 5435      5F57445F 
 5435      4C495354 
 5436              	.LASF107:
 5437 0201 69697246 		.ascii	"iirFilterCoeff\000"
 5437      696C7465 
 5437      72436F65 
 5437      666600
 5438              	.LASF164:
 5439 0210 63705769 		.ascii	"cpWidget\000"
 5439      64676574 
 5439      00
 5440              	.LASF130:
 5441 0219 656C7464 		.ascii	"eltdNum\000"
 5441      4E756D00 
 5442              	.LASF154:
 5443 0221 70747257 		.ascii	"ptrWdgt\000"
 5443      64677400 
 5444              	.LASF161:
 5445 0229 43617053 		.ascii	"CapSense_SsSetWidgetSenseClkSrc\000"
 5445      656E7365 
 5445      5F537353 
 5445      65745769 
 5445      64676574 
 5446              	.LASF138:
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 152


 5447 0249 6C6F6F70 		.ascii	"loopIndex\000"
 5447      496E6465 
 5447      7800
 5448              	.LASF115:
 5449 0253 43617053 		.ascii	"CapSense_SsCalcLfsrScale\000"
 5449      656E7365 
 5449      5F537343 
 5449      616C634C 
 5449      66737253 
 5450              	.LASF12:
 5451 026c 666C6F61 		.ascii	"float\000"
 5451      7400
 5452              	.LASF93:
 5453 0272 73686966 		.ascii	"shift\000"
 5453      7400
 5454              	.LASF149:
 5455 0278 43617053 		.ascii	"CapSense_SsClearCSDSensors\000"
 5455      656E7365 
 5455      5F537343 
 5455      6C656172 
 5455      43534453 
 5456              	.LASF196:
 5457 0293 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 5457      43313120 
 5457      352E342E 
 5457      31203230 
 5457      31363036 
 5458 02c6 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0plus -mthumb -"
 5458      20726576 
 5458      6973696F 
 5458      6E203233 
 5458      37373135 
 5459 02f9 67202D4F 		.ascii	"g -Og -ffunction-sections -ffat-lto-objects\000"
 5459      67202D66 
 5459      66756E63 
 5459      74696F6E 
 5459      2D736563 
 5460              	.LASF183:
 5461 0325 43617053 		.ascii	"CapSense_CSDSetupWidget\000"
 5461      656E7365 
 5461      5F435344 
 5461      53657475 
 5461      70576964 
 5462              	.LASF195:
 5463 033d 43794465 		.ascii	"CyDelayUs\000"
 5463      6C617955 
 5463      7300
 5464              	.LASF79:
 5465 0347 736E734C 		.ascii	"snsList\000"
 5465      69737400 
 5466              	.LASF7:
 5467 034f 6C6F6E67 		.ascii	"long long unsigned int\000"
 5467      206C6F6E 
 5467      6720756E 
 5467      7369676E 
 5467      65642069 
 5468              	.LASF174:
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 153


 5469 0366 43617053 		.ascii	"CapSense_sensorIndex\000"
 5469      656E7365 
 5469      5F73656E 
 5469      736F7249 
 5469      6E646578 
 5470              	.LASF94:
 5471 037b 43617053 		.ascii	"CapSense_FLASH_IO_STRUCT\000"
 5471      656E7365 
 5471      5F464C41 
 5471      53485F49 
 5471      4F5F5354 
 5472              	.LASF81:
 5473 0394 736E7254 		.ascii	"snrTestSensorId\000"
 5473      65737453 
 5473      656E736F 
 5473      72496400 
 5474              	.LASF106:
 5475 03a4 70747232 		.ascii	"ptr2NoiseEnvlp\000"
 5475      4E6F6973 
 5475      65456E76 
 5475      6C7000
 5476              	.LASF102:
 5477 03b3 77646774 		.ascii	"wdgtType\000"
 5477      54797065 
 5477      00
 5478              	.LASF116:
 5479 03bc 6C667372 		.ascii	"lfsrSize\000"
 5479      53697A65 
 5479      00
 5480              	.LASF155:
 5481 03c5 43617053 		.ascii	"CapSense_SsCSDSetColSnsClkDivider\000"
 5481      656E7365 
 5481      5F537343 
 5481      53445365 
 5481      74436F6C 
 5482              	.LASF163:
 5483 03e7 6175746F 		.ascii	"autoTuneStatus\000"
 5483      54756E65 
 5483      53746174 
 5483      757300
 5484              	.LASF77:
 5485 03f6 6D6F6443 		.ascii	"modCsdClk\000"
 5485      7364436C 
 5485      6B00
 5486              	.LASF65:
 5487 0400 43617053 		.ascii	"CapSense_RAM_SNS_STRUCT\000"
 5487      656E7365 
 5487      5F52414D 
 5487      5F534E53 
 5487      5F535452 
 5488              	.LASF157:
 5489 0418 43617053 		.ascii	"CapSense_SsCSDCalcPrsSize\000"
 5489      656E7365 
 5489      5F537343 
 5489      53444361 
 5489      6C635072 
 5490              	.LASF26:
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 154


 5491 0432 63616C54 		.ascii	"calTarget\000"
 5491      61726765 
 5491      7400
 5492              	.LASF87:
 5493 043c 64725074 		.ascii	"drPtr\000"
 5493      7200
 5494              	.LASF143:
 5495 0442 6D6F6443 		.ascii	"modClk\000"
 5495      6C6B00
 5496              	.LASF28:
 5497 0449 73696750 		.ascii	"sigPFC\000"
 5497      464300
 5498              	.LASF49:
 5499 0450 68797374 		.ascii	"hysteresis\000"
 5499      65726573 
 5499      697300
 5500              	.LASF108:
 5501 045b 43617053 		.ascii	"CapSense_FLASH_WD_STRUCT\000"
 5501      656E7365 
 5501      5F464C41 
 5501      53485F57 
 5501      445F5354 
 5502              	.LASF51:
 5503 0474 6C6F7742 		.ascii	"lowBslnRst\000"
 5503      736C6E52 
 5503      737400
 5504              	.LASF114:
 5505 047f 43617053 		.ascii	"CapSense_SsCalcLfsrSize\000"
 5505      656E7365 
 5505      5F537343 
 5505      616C634C 
 5505      66737253 
 5506              	.LASF101:
 5507 0497 746F7461 		.ascii	"totalNumSns\000"
 5507      6C4E756D 
 5507      536E7300 
 5508              	.LASF38:
 5509 04a3 534D4152 		.ascii	"SMARTSENSE_CSD_NOISE_ENVELOPE_STRUCT\000"
 5509      5453454E 
 5509      53455F43 
 5509      53445F4E 
 5509      4F495345 
 5510              	.LASF165:
 5511 04c8 6175746F 		.ascii	"autoTuneConfig\000"
 5511      54756E65 
 5511      436F6E66 
 5511      696700
 5512              	.LASF47:
 5513 04d7 6E6F6973 		.ascii	"noiseTh\000"
 5513      65546800 
 5514              	.LASF14:
 5515 04df 63686172 		.ascii	"char\000"
 5515      00
 5516              	.LASF186:
 5517 04e4 43794578 		.ascii	"CyExitCriticalSection\000"
 5517      69744372 
 5517      69746963 
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 155


 5517      616C5365 
 5517      6374696F 
 5518              	.LASF192:
 5519 04fa 43617053 		.ascii	"CapSense_SsCSDGetNumberOfConversions\000"
 5519      656E7365 
 5519      5F537343 
 5519      53444765 
 5519      744E756D 
 5520              	.LASF91:
 5521 051f 6873696F 		.ascii	"hsiomShift\000"
 5521      6D536869 
 5521      667400
 5522              	.LASF10:
 5523 052a 75696E74 		.ascii	"uint16\000"
 5523      313600
 5524              	.LASF113:
 5525 0531 636F6E76 		.ascii	"conversionsNum\000"
 5525      65727369 
 5525      6F6E734E 
 5525      756D00
 5526              	.LASF162:
 5527 0540 43617053 		.ascii	"CapSense_SsAutoTune\000"
 5527      656E7365 
 5527      5F537341 
 5527      75746F54 
 5527      756E6500 
 5528              	.LASF45:
 5529 0554 7265736F 		.ascii	"resolution\000"
 5529      6C757469 
 5529      6F6E00
 5530              	.LASF72:
 5531 055f 73746174 		.ascii	"status\000"
 5531      757300
 5532              	.LASF146:
 5533 0566 43617053 		.ascii	"CapSense_CalibrateWidget\000"
 5533      656E7365 
 5533      5F43616C 
 5533      69627261 
 5533      74655769 
 5534              	.LASF19:
 5535 057f 43617053 		.ascii	"CapSense_LOW_BSLN_RST_TYPE\000"
 5535      656E7365 
 5535      5F4C4F57 
 5535      5F42534C 
 5535      4E5F5253 
 5536              	.LASF144:
 5537 059a 43617053 		.ascii	"CapSense_SsSetSnsClockDivider\000"
 5537      656E7365 
 5537      5F537353 
 5537      6574536E 
 5537      73436C6F 
 5538              	.LASF156:
 5539 05b8 64697669 		.ascii	"dividerVal\000"
 5539      64657256 
 5539      616C00
 5540              	.LASF44:
 5541 05c3 43617053 		.ascii	"CapSense_SENSE_METHOD_ENUM\000"
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 156


 5541      656E7365 
 5541      5F53454E 
 5541      53455F4D 
 5541      4554484F 
 5542              	.LASF64:
 5543 05de 69646163 		.ascii	"idacComp\000"
 5543      436F6D70 
 5543      00
 5544              	.LASF86:
 5545 05e7 70635074 		.ascii	"pcPtr\000"
 5545      7200
 5546              	.LASF6:
 5547 05ed 6C6F6E67 		.ascii	"long long int\000"
 5547      206C6F6E 
 5547      6720696E 
 5547      7400
 5548              	.LASF103:
 5549 05fb 6E756D43 		.ascii	"numCols\000"
 5549      6F6C7300 
 5550              	.LASF188:
 5551 0603 43617053 		.ascii	"CapSense_SsCSDInitialize\000"
 5551      656E7365 
 5551      5F537343 
 5551      5344496E 
 5551      69746961 
 5552              	.LASF50:
 5553 061c 6F6E4465 		.ascii	"onDebounce\000"
 5553      626F756E 
 5553      636500
 5554              	.LASF141:
 5555 0627 61646472 		.ascii	"address\000"
 5555      65737300 
 5556              	.LASF147:
 5557 062f 63616C69 		.ascii	"calibrateStatus\000"
 5557      62726174 
 5557      65537461 
 5557      74757300 
 5558              	.LASF78:
 5559 063f 77646774 		.ascii	"wdgtList\000"
 5559      4C697374 
 5559      00
 5560              	.LASF148:
 5561 0648 43617053 		.ascii	"CapSense_CalibrateAllWidgets\000"
 5561      656E7365 
 5561      5F43616C 
 5561      69627261 
 5561      7465416C 
 5562              	.LASF110:
 5563 0665 43617053 		.ascii	"CapSense_FLASH_STRUCT\000"
 5563      656E7365 
 5563      5F464C41 
 5563      53485F53 
 5563      54525543 
 5564              	.LASF124:
 5565 067b 43617053 		.ascii	"CapSense_Scan\000"
 5565      656E7365 
 5565      5F536361 
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 157


 5565      6E00
 5566              	.LASF170:
 5567 0689 43617053 		.ascii	"CapSense_dsRam\000"
 5567      656E7365 
 5567      5F647352 
 5567      616D00
 5568              	.LASF83:
 5569 0698 736E7254 		.ascii	"snrTestRawCount\000"
 5569      65737452 
 5569      6177436F 
 5569      756E7400 
 5570              	.LASF48:
 5571 06a8 6E4E6F69 		.ascii	"nNoiseTh\000"
 5571      73655468 
 5571      00
 5572              	.LASF76:
 5573 06b1 63736430 		.ascii	"csd0Config\000"
 5573      436F6E66 
 5573      696700
 5574              	.LASF17:
 5575 06bc 63796973 		.ascii	"cyisraddress\000"
 5575      72616464 
 5575      72657373 
 5575      00
 5576              	.LASF56:
 5577 06c9 43617053 		.ascii	"CapSense_RAM_WD_BASE_STRUCT\000"
 5577      656E7365 
 5577      5F52414D 
 5577      5F57445F 
 5577      42415345 
 5578              	.LASF85:
 5579 06e5 6873696F 		.ascii	"hsiomPtr\000"
 5579      6D507472 
 5579      00
 5580              	.LASF11:
 5581 06ee 75696E74 		.ascii	"uint32\000"
 5581      333200
 5582              	.LASF98:
 5583 06f5 70747232 		.ascii	"ptr2FltrHistory\000"
 5583      466C7472 
 5583      48697374 
 5583      6F727900 
 5584              	.LASF179:
 5585 0705 43617053 		.ascii	"CapSense_curSnsIOPtr\000"
 5585      656E7365 
 5585      5F637572 
 5585      536E7349 
 5585      4F507472 
 5586              	.LASF29:
 5587 071a 69446163 		.ascii	"iDac\000"
 5587      00
 5588              	.LASF145:
 5589 071f 43617053 		.ascii	"CapSense_SsSetClockDividers\000"
 5589      656E7365 
 5589      5F537353 
 5589      6574436C 
 5589      6F636B44 
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 158


 5590              	.LASF193:
 5591 073b 536D6172 		.ascii	"SmartSense_TunePrescalers\000"
 5591      7453656E 
 5591      73655F54 
 5591      756E6550 
 5591      72657363 
 5592              	.LASF27:
 5593 0755 70747253 		.ascii	"ptrSenseClk\000"
 5593      656E7365 
 5593      436C6B00 
 5594              	.LASF127:
 5595 0761 77646774 		.ascii	"wdgtIndex\000"
 5595      496E6465 
 5595      7800
 5596              	.LASF150:
 5597 076b 736E7349 		.ascii	"snsIndex\000"
 5597      6E646578 
 5597      00
 5598              	.LASF43:
 5599 0774 43617053 		.ascii	"CapSense_SENSE_METHOD_ISX_E\000"
 5599      656E7365 
 5599      5F53454E 
 5599      53455F4D 
 5599      4554484F 
 5600              	.LASF111:
 5601 0790 6C6F6E67 		.ascii	"long double\000"
 5601      20646F75 
 5601      626C6500 
 5602              	.LASF20:
 5603 079c 736E7343 		.ascii	"snsClkConstantR\000"
 5603      6C6B436F 
 5603      6E737461 
 5603      6E745200 
 5604              	.LASF16:
 5605 07ac 72656733 		.ascii	"reg32\000"
 5605      3200
 5606              	.LASF82:
 5607 07b2 736E7254 		.ascii	"snrTestScanCounter\000"
 5607      65737453 
 5607      63616E43 
 5607      6F756E74 
 5607      657200
 5608              	.LASF67:
 5609 07c5 636F6E66 		.ascii	"configId\000"
 5609      69674964 
 5609      00
 5610              	.LASF97:
 5611 07ce 70747232 		.ascii	"ptr2SnsRam\000"
 5611      536E7352 
 5611      616D00
 5612              	.LASF167:
 5613 07d9 43617053 		.ascii	"CapSense_SsInitialize\000"
 5613      656E7365 
 5613      5F537349 
 5613      6E697469 
 5613      616C697A 
 5614              	.LASF180:
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 159


 5615 07ef 43617053 		.ascii	"CapSense_calibratedIdac\000"
 5615      656E7365 
 5615      5F63616C 
 5615      69627261 
 5615      74656449 
 5616              	.LASF75:
 5617 0807 736E7353 		.ascii	"snsStatus\000"
 5617      74617475 
 5617      7300
 5618              	.LASF54:
 5619 0811 736E7343 		.ascii	"snsClkSource\000"
 5619      6C6B536F 
 5619      75726365 
 5619      00
 5620              	.LASF182:
 5621 081e 43617053 		.ascii	"CapSense_SsCSDElectrodeCheck\000"
 5621      656E7365 
 5621      5F537343 
 5621      5344456C 
 5621      65637472 
 5622              	.LASF104:
 5623 083b 78526573 		.ascii	"xResolution\000"
 5623      6F6C7574 
 5623      696F6E00 
 5624              	.LASF140:
 5625 0847 43617053 		.ascii	"CapSense_SsIsrInitialize\000"
 5625      656E7365 
 5625      5F537349 
 5625      7372496E 
 5625      69746961 
 5626              	.LASF2:
 5627 0860 73686F72 		.ascii	"short int\000"
 5627      7420696E 
 5627      7400
 5628              	.LASF84:
 5629 086a 43617053 		.ascii	"CapSense_RAM_STRUCT\000"
 5629      656E7365 
 5629      5F52414D 
 5629      5F535452 
 5629      55435400 
 5630              	.LASF191:
 5631 087e 43617053 		.ascii	"CapSense_CSDDisconnectSns\000"
 5631      656E7365 
 5631      5F435344 
 5631      44697363 
 5631      6F6E6E65 
 5632              	.LASF4:
 5633 0898 6C6F6E67 		.ascii	"long int\000"
 5633      20696E74 
 5633      00
 5634              	.LASF73:
 5635 08a1 77646774 		.ascii	"wdgtEnable\000"
 5635      456E6162 
 5635      6C6500
 5636              	.LASF62:
 5637 08ac 64696666 		.ascii	"diff\000"
 5637      00
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 160


 5638              	.LASF70:
 5639 08b1 74756E65 		.ascii	"tunerCmd\000"
 5639      72436D64 
 5639      00
 5640              	.LASF41:
 5641 08ba 43617053 		.ascii	"CapSense_SENSE_METHOD_CSX_E\000"
 5641      656E7365 
 5641      5F53454E 
 5641      53455F4D 
 5641      4554484F 
 5642              	.LASF88:
 5643 08d6 70735074 		.ascii	"psPtr\000"
 5643      7200
 5644              	.LASF123:
 5645 08dc 43617053 		.ascii	"CapSense_SetupWidget\000"
 5645      656E7365 
 5645      5F536574 
 5645      75705769 
 5645      64676574 
 5646              	.LASF190:
 5647 08f1 43617053 		.ascii	"CapSense_CSDCalibrateWidget\000"
 5647      656E7365 
 5647      5F435344 
 5647      43616C69 
 5647      62726174 
 5648              	.LASF181:
 5649 090d 43617053 		.ascii	"CapSense_calibratedRawcount\000"
 5649      656E7365 
 5649      5F63616C 
 5649      69627261 
 5649      74656452 
 5650              	.LASF171:
 5651 0929 43617053 		.ascii	"CapSense_dsFlash\000"
 5651      656E7365 
 5651      5F647346 
 5651      6C617368 
 5651      00
 5652              	.LASF23:
 5653 093a 66696E67 		.ascii	"fingerCap\000"
 5653      65724361 
 5653      7000
 5654              	.LASF74:
 5655 0944 77646774 		.ascii	"wdgtStatus\000"
 5655      53746174 
 5655      757300
 5656              	.LASF172:
 5657 094f 43617053 		.ascii	"CapSense_ioList\000"
 5657      656E7365 
 5657      5F696F4C 
 5657      69737400 
 5658              	.LASF197:
 5659 095f 47656E65 		.ascii	"Generated_Source\\PSoC4\\CapSense_Sensing.c\000"
 5659      72617465 
 5659      645F536F 
 5659      75726365 
 5659      5C50536F 
 5660              	.LASF58:
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 161


 5661 0989 43617053 		.ascii	"CapSense_RAM_WD_SLIDER_STRUCT\000"
 5661      656E7365 
 5661      5F52414D 
 5661      5F57445F 
 5661      534C4944 
 5662              	.LASF40:
 5663 09a7 43617053 		.ascii	"CapSense_SENSE_METHOD_CSD_E\000"
 5663      656E7365 
 5663      5F53454E 
 5663      53455F4D 
 5663      4554484F 
 5664              	.LASF177:
 5665 09c3 43617053 		.ascii	"CapSense_currentSenseMethod\000"
 5665      656E7365 
 5665      5F637572 
 5665      72656E74 
 5665      53656E73 
 5666              	.LASF158:
 5667 09df 70727353 		.ascii	"prsSize\000"
 5667      697A6500 
 5668              	.LASF55:
 5669 09e7 73697A65 		.ascii	"sizetype\000"
 5669      74797065 
 5669      00
 5670              	.LASF92:
 5671 09f0 64725368 		.ascii	"drShift\000"
 5671      69667400 
 5672              	.LASF5:
 5673 09f8 6C6F6E67 		.ascii	"long unsigned int\000"
 5673      20756E73 
 5673      69676E65 
 5673      6420696E 
 5673      7400
 5674              	.LASF153:
 5675 0a0a 72657456 		.ascii	"retVal\000"
 5675      616C00
 5676              	.LASF21:
 5677 0a11 76526566 		.ascii	"vRef\000"
 5677      00
 5678              	.LASF52:
 5679 0a16 69646163 		.ascii	"idacMod\000"
 5679      4D6F6400 
 5680              	.LASF189:
 5681 0a1e 43617053 		.ascii	"CapSense_ISR_StartEx\000"
 5681      656E7365 
 5681      5F495352 
 5681      5F537461 
 5681      72744578 
 5682              	.LASF99:
 5683 0a33 70747232 		.ascii	"ptr2DebounceArr\000"
 5683      4465626F 
 5683      756E6365 
 5683      41727200 
 5684              	.LASF187:
 5685 0a43 43617053 		.ascii	"CapSense_CSDConnectSns\000"
 5685      656E7365 
 5685      5F435344 
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 162


 5685      436F6E6E 
 5685      65637453 
 5686              	.LASF105:
 5687 0a5a 7843656E 		.ascii	"xCentroidMultiplier\000"
 5687      74726F69 
 5687      644D756C 
 5687      7469706C 
 5687      69657200 
 5688              	.LASF46:
 5689 0a6e 66696E67 		.ascii	"fingerTh\000"
 5689      65725468 
 5689      00
 5690              	.LASF61:
 5691 0a77 62736C6E 		.ascii	"bslnExt\000"
 5691      45787400 
 5692              	.LASF15:
 5693 0a7f 63797374 		.ascii	"cystatus\000"
 5693      61747573 
 5693      00
 5694              	.LASF1:
 5695 0a88 756E7369 		.ascii	"unsigned char\000"
 5695      676E6564 
 5695      20636861 
 5695      7200
 5696              	.LASF134:
 5697 0a96 43617053 		.ascii	"CapSense_SetPinState\000"
 5697      656E7365 
 5697      5F536574 
 5697      50696E53 
 5697      74617465 
 5698              	.LASF100:
 5699 0aab 73746174 		.ascii	"staticConfig\000"
 5699      6963436F 
 5699      6E666967 
 5699      00
 5700              	.LASF24:
 5701 0ab8 73656E73 		.ascii	"sensorCap\000"
 5701      6F724361 
 5701      7000
 5702              	.LASF133:
 5703 0ac2 696F5074 		.ascii	"ioPtr\000"
 5703      7200
 5704              	.LASF96:
 5705 0ac8 70747232 		.ascii	"ptr2WdgtRam\000"
 5705      57646774 
 5705      52616D00 
 5706              	.LASF18:
 5707 0ad4 43617053 		.ascii	"CapSense_THRESHOLD_TYPE\000"
 5707      656E7365 
 5707      5F544852 
 5707      4553484F 
 5707      4C445F54 
 5708              	.LASF184:
 5709 0aec 43617053 		.ascii	"CapSense_CSDScan\000"
 5709      656E7365 
 5709      5F435344 
 5709      5363616E 
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 163


 5709      00
 5710              	.LASF42:
 5711 0afd 43617053 		.ascii	"CapSense_SENSE_METHOD_BIST_E\000"
 5711      656E7365 
 5711      5F53454E 
 5711      53455F4D 
 5711      4554484F 
 5712              	.LASF129:
 5713 0b1a 73746174 		.ascii	"state\000"
 5713      6500
 5714              	.LASF131:
 5715 0b20 656C7464 		.ascii	"eltdIndex\000"
 5715      496E6465 
 5715      7800
 5716              	.LASF126:
 5717 0b2a 43617053 		.ascii	"CapSense_ScanAllWidgets\000"
 5717      656E7365 
 5717      5F536361 
 5717      6E416C6C 
 5717      57696467 
 5718              	.LASF89:
 5719 0b42 6873696F 		.ascii	"hsiomMask\000"
 5719      6D4D6173 
 5719      6B00
 5720              	.LASF151:
 5721 0b4c 63757253 		.ascii	"curSnsIOPtr\000"
 5721      6E73494F 
 5721      50747200 
 5722              	.LASF53:
 5723 0b58 736E7343 		.ascii	"snsClk\000"
 5723      6C6B00
 5724              	.LASF135:
 5725 0b5f 43617053 		.ascii	"CapSense_SsSwitchSensingMode\000"
 5725      656E7365 
 5725      5F537353 
 5725      77697463 
 5725      6853656E 
 5726              	.LASF185:
 5727 0b7c 4379456E 		.ascii	"CyEnterCriticalSection\000"
 5727      74657243 
 5727      72697469 
 5727      63616C53 
 5727      65637469 
 5728              	.LASF176:
 5729 0b93 43617053 		.ascii	"CapSense_curRamSnsPtr\000"
 5729      656E7365 
 5729      5F637572 
 5729      52616D53 
 5729      6E735074 
 5730              	.LASF0:
 5731 0ba9 7369676E 		.ascii	"signed char\000"
 5731      65642063 
 5731      68617200 
 5732              	.LASF178:
 5733 0bb5 43617053 		.ascii	"CapSense_scanFreqIndex\000"
 5733      656E7365 
 5733      5F736361 
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 164


 5733      6E467265 
 5733      71496E64 
 5734              	.LASF60:
 5735 0bcc 62736C6E 		.ascii	"bsln\000"
 5735      00
 5736              	.LASF3:
 5737 0bd1 73686F72 		.ascii	"short unsigned int\000"
 5737      7420756E 
 5737      7369676E 
 5737      65642069 
 5737      6E7400
 5738              	.LASF30:
 5739 0be4 4155544F 		.ascii	"AUTO_TUNE_CONFIG_TYPE\000"
 5739      5F54554E 
 5739      455F434F 
 5739      4E464947 
 5739      5F545950 
 5740              	.LASF200:
 5741 0bfa 43617053 		.ascii	"CapSense_SsPostAllWidgetsScan\000"
 5741      656E7365 
 5741      5F537350 
 5741      6F737441 
 5741      6C6C5769 
 5742              	.LASF95:
 5743 0c18 70747232 		.ascii	"ptr2SnsFlash\000"
 5743      536E7346 
 5743      6C617368 
 5743      00
 5744              	.LASF119:
 5745 0c25 6C667372 		.ascii	"lfsrDither\000"
 5745      44697468 
 5745      657200
 5746              	.LASF120:
 5747 0c30 6E657752 		.ascii	"newRegValue\000"
 5747      65675661 
 5747      6C756500 
 5748              	.LASF9:
 5749 0c3c 75696E74 		.ascii	"uint8\000"
 5749      3800
 5750              	.LASF13:
 5751 0c42 646F7562 		.ascii	"double\000"
 5751      6C6500
 5752              	.LASF63:
 5753 0c49 6E656742 		.ascii	"negBslnRstCnt\000"
 5753      736C6E52 
 5753      7374436E 
 5753      7400
 5754              	.LASF31:
 5755 0c57 70617261 		.ascii	"param0\000"
 5755      6D3000
 5756              	.LASF32:
 5757 0c5e 70617261 		.ascii	"param1\000"
 5757      6D3100
 5758              	.LASF33:
 5759 0c65 70617261 		.ascii	"param2\000"
 5759      6D3200
 5760              	.LASF34:
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 165


 5761 0c6c 70617261 		.ascii	"param3\000"
 5761      6D3300
 5762              	.LASF35:
 5763 0c73 70617261 		.ascii	"param4\000"
 5763      6D3400
 5764              	.LASF36:
 5765 0c7a 70617261 		.ascii	"param5\000"
 5765      6D3500
 5766              	.LASF37:
 5767 0c81 70617261 		.ascii	"param6\000"
 5767      6D3600
 5768              	.LASF112:
 5769 0c88 736E7343 		.ascii	"snsClkDivider\000"
 5769      6C6B4469 
 5769      76696465 
 5769      7200
 5770              	.LASF159:
 5771 0c96 6D6F6443 		.ascii	"modClkDivider\000"
 5771      6C6B4469 
 5771      76696465 
 5771      7200
 5772              	.LASF68:
 5773 0ca4 64657669 		.ascii	"deviceId\000"
 5773      63654964 
 5773      00
 5774              	.LASF122:
 5775 0cad 77696467 		.ascii	"widgetStatus\000"
 5775      65745374 
 5775      61747573 
 5775      00
 5776              	.LASF121:
 5777 0cba 77696467 		.ascii	"widgetId\000"
 5777      65744964 
 5777      00
 5778              	.LASF175:
 5779 0cc3 43617053 		.ascii	"CapSense_requestScanAllWidget\000"
 5779      656E7365 
 5779      5F726571 
 5779      75657374 
 5779      5363616E 
 5780              	.LASF166:
 5781 0ce1 43617053 		.ascii	"CapSense_SsInitializeSourceSenseClk\000"
 5781      656E7365 
 5781      5F537349 
 5781      6E697469 
 5781      616C697A 
 5782              	.LASF57:
 5783 0d05 706F7369 		.ascii	"position\000"
 5783      74696F6E 
 5783      00
 5784              	.LASF66:
 5785 0d0e 43617053 		.ascii	"CapSense_RAM_SNS_LIST_STRUCT\000"
 5785      656E7365 
 5785      5F52414D 
 5785      5F534E53 
 5785      5F4C4953 
 5786              	.LASF109:
ARM GAS  C:\Users\DMYTRO~1.FED\AppData\Local\Temp\ccZSLaGb.s 			page 166


 5787 0d2b 77646774 		.ascii	"wdgtArray\000"
 5787      41727261 
 5787      7900
 5788              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
